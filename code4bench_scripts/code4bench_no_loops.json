{"id":{"0":2,"30":66,"38":69,"58":102,"73":159,"86":194,"104":230,"124":262,"139":317,"146":350,"161":419,"186":476,"193":481,"197":494,"227":529,"237":590,"248":641,"269":680,"278":694,"284":714,"301":764,"307":773,"376":868,"379":888,"385":890,"398":905,"427":968,"433":972,"438":994,"457":1027,"480":1037,"486":1047,"531":1072,"605":1117,"628":1132,"640":1142,"653":1149,"674":1198,"757":1295,"834":1390,"853":1408,"857":1405,"871":1473,"916":1530,"932":1550,"976":1575,"1061":1661,"1090":1691,"1152":1738,"1166":1756,"1347":1936,"1482":2058,"1580":2108,"1588":2111,"1648":2163,"1650":2164,"1657":2175,"1711":2223,"1726":2227,"1729":2231,"1780":2273,"1804":2296,"1855":2331,"1877":2346,"1888":2360,"1906":2379,"1910":2385,"2004":2471,"2073":2490,"2088":2505,"2091":2520,"2210":2555,"2246":2681,"2312":2810,"2317":2819,"2347":2883,"2356":2952},"sourceCode":{"0":"#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,d;\r\n    scanf(\"%d %d\",&a,&b);\r\n    if(a>b)\r\n        printf(\"%d\",b);\r\n    else\r\n        printf(\"%d\",a);\r\n    d=abs(a-b);\r\n\r\n    printf(\" %d\\n\",d\/2);\r\n    return 0;\r\n\r\n}","30":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\n    double a, b, c, d, s, t;\r\r\n    scanf(\"%lf %lf %lf\",&a,&b,&c);\r\r\n    t=a\/(b+c);\r\r\n    s=b*t;\r\r\n    printf(\"%lf\\n\", s);\r\r\n    return 0;\r\r\n}","38":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n\tlong long int n;\r\r\n\tscanf(\"%lld\",&n);\r\r\n\tprintf(\"%lld\\n\",(n-2)*(n-2));\r\r\n\treturn 0;\r\r\n}","58":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int d1,d2,d3;\r\r\n    scanf(\"%d %d %d\",&d1,&d2,&d3);\r\r\n    if(d1+d2==d3)\r\r\n    {\r\r\n\r\r\n        printf(\"%d\\n\",2*d3);\r\r\n\r\r\n    }\r\r\n    else if(d1+d2<d3)\r\r\n   {printf(\"%d\\n\",(d1+d2)*2);}\r\r\n\r\r\n   else if(d1+d2>d3){\r\r\n\r\r\n  if(d1+d3<d2)\r\r\n   {printf(\"%d\\n\",(d1+d3)*2);}\r\r\n   else if(d2+d3<d1)\r\r\n   {printf(\"%d\\n\",(d2+d3)*2);}\r\r\n   else{printf(\"%d\\n\",d1+d2+d3);}\r\r\n   }\r\r\n\r\r\n\r\r\n    return 0;\r\r\n}","73":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint a,b;\r\r\nchar m[6];\r\r\nscanf(\"%d%s%s\",&a,m,m);\r\r\nif(m[0]=='w')\r\r\nb=52+(a==5||a==6);\r\r\nelse\r\r\nb=12-(a>29)-4*(a>30);\r\r\nprintf(\"%d\",b);\r\r\n}","86":"#include<stdio.h>\r\nint main()\r\n{\r\n    int x;\r\n    scanf(\"%d\",&x);\r\n    if(x%5)\r\n        printf(\"%d\\n\",x\/5+1);\r\n    else\r\n        printf(\"%d\\n\",x\/5);\r\n    return 0;\r\n}","104":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    double a,b,c,d;\r\r\n    double x;\r\r\n    scanf(\"%lf %lf %lf %lf\",&a,&b,&c,&d);\r\r\n    x=((b-a)\/(c+d));\r\r\n    printf(\"%.10lf\",x);\r\r\n}","124":"#include<stdio.h>\r\nint main()\r\n{\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tprintf(\"25\");\r\n\treturn 0;\r\n}","139":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,m,a;\r\r\n    scanf(\"%d %d\",&n,&m);\r\r\n    if(m%2==0)\r\r\n    {a=(n\/2)-(m\/2)+1;\r\r\n    printf(\"%d\",a);}\r\r\n    else\r\r\n    printf(\"%d\",m\/2+1);\r\r\n}","146":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    long long int s,n,k,b;\r\r\n    scanf(\"%I64d%I64d\",&n,&k);\r\r\n    if(k>=(n\/2))\r\r\n    {\r\r\n        s=((n-1)*n)\/2;\r\r\n        printf(\"%I64d\",s);\r\r\n\r\r\n    }\r\r\n    else\r\r\n    {  b=n-1;\r\r\n       s=((k*((2*b)-(k-1)))\/2)+(n-(2*k))*k+(((k-1)*(k))\/2);\r\r\n       printf(\"%I64d\",s);\r\r\n    }\r\r\n}","161":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int a,b,c,d,e;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n  if(c>=0)\r\n  {\r\n\r\n      if(c<=a-b)\r\n        d=b+c;\r\n      else\r\n        d=(c-a+b)%a;\r\n      if(d==0)\r\n        d=a;\r\n  }\r\n  if(c<0)\r\n  {\r\n      if(abs(c)<=b-1)\r\n        {\r\n            d=b+c;\r\n        }\r\n      else\r\n      {\r\n        e=(abs(c)-b+1)%a;\r\n        d=a-e+1;\r\n      }\r\n      if(e==0)\r\n      {\r\n          d=1;\r\n      }\r\n  }\r\n  printf(\"%d\",d);\r\n    return 0;\r\n}","186":"main(n){scanf(\"%d\",&n);printf(\"%d\",(n*2+1)\/3);}","193":"#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n,r,q;\r\n\tscanf(\"%d\",&n);\r\n\tq=n\/7;\r\n\tr=n%7;\r\n\tif(r==0)\r\n\t{\r\n\t\tprintf(\"%d %d\",q*2,q*2);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(r>5)\r\n\t\tprintf(\"%d %d\",q*2+1,q*2+2);\r\n\t\telse if(r==1)\r\n\t\tprintf(\"%d %d\",q*2,q*2+1);\r\n\t\telse\r\n\t\tprintf(\"%d %d\",q*2,q*2+2);\r\n\t}\r\n\treturn 0;\r\n}","197":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n        char digit[]={\"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399\"}\r\r\n        ;\r\r\n        int n,i,temp;\r\r\n        scanf(\"%d\",&n);\r\r\n        printf(\"%c\",digit[n-1]);\r\r\n        return 0;\r\r\n}","227":"#include<stdio.h>\r\r\n\r\r\nunsigned long long int m=1000000007;\r\r\nunsigned long long int bigmod(unsigned long long int x, unsigned long long int n)\r\r\n{\r\r\n    if(n==0) return 1;\r\r\n\r\r\n    if(n%2==0)\r\r\n    {\r\r\n    unsigned long long int num= bigmod(x,n\/2);\r\r\n    return ((num%m)*(num%m))%m;\r\r\n    }\r\r\n\r\r\n    else\r\r\n        return ((x%m)*(bigmod(x,n-1)%m))%m;\r\r\n\r\r\n}\r\r\n\r\r\nint main()\r\r\n{\r\r\n    unsigned long long int  sum1=0,sum2=0,sum=0,n,A,B,x;\r\r\n\r\r\n    scanf(\"%llu %llu %llu %llu\",&A,&B,&n,&x);\r\r\n\r\r\n    if(A==1) printf(\"%llu\\n\",((x%m)+((B%m)*(n%m))%m)%m);\r\r\n    else{\r\r\n\r\r\n    sum1=bigmod(A,n)%m;\r\r\n    sum2=(sum1-1)%m;\r\r\n\r\r\n    sum1=((sum1%m)*(x%m))%m;\r\r\n    sum2=((sum2%m)*(B%m))%m;\r\r\n\r\r\n    sum2=((sum2%m)* (bigmod(A-1,m-2))%m)%m;\r\r\n\r\r\n    sum=((sum1%m)+(sum2%m))%m;\r\r\n\r\r\n    printf(\"%llu\\n\",sum%m);\r\r\n\r\r\n    }\r\r\n    return 0;\r\r\n}","237":"#include<stdio.h>\r\r\n#include<conio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    long long n;\r\r\n    scanf(\"%I64d\", &n);\r\r\n    long long result;\r\r\n    result = n \/ 2;\r\r\n    if(n%2 == 0)\r\r\n    {\r\r\n        printf(\"%I64d\", result);\r\r\n    }\r\r\n    else\r\r\n        printf(\"%I64d\", result + 1);\r\r\n}","248":"#include<stdio.h>\r\r\n#include<math.h>\r\r\n\r\r\nint main()\t{\r\r\n\tlong long int people, distance, man_velocity, bus_velocity, bus_capacity, trip;\r\r\n\tdouble ans;\r\r\n\tscanf(\"%lld %lld %lld %lld %lld\", &people, &distance, &man_velocity, &bus_velocity, &bus_capacity);\r\r\n\ttrip = (int)ceil((double)people\/bus_capacity);\r\r\n\tans = (double)(((2.00*trip-1.00)*bus_velocity+man_velocity)*distance\/(double)(bus_velocity*(man_velocity*(2.00*trip-1.00)+bus_velocity)));\r\r\n\tprintf(\"%.12lf\", ans);\r\r\n\treturn 0;\r\r\n}","269":"#include<stdio.h>\r\r\n#define ll long long int\r\r\nint main()\r\r\n{\r\r\n    ll n,a;\r\r\n    scanf(\"%lld\",&n);\r\r\n    (n<3)?printf(\"-1\"):printf(\"%lld %lld\",(n%2==0)?n*n\/4-1:n*n\/2,(n%2==0)?n*n\/4+1:n*n\/2+1);\r\r\n}","278":"#include<stdio.h>\r\r\nmain()\r\r\n{\r\r\n int t;\r\r\n char s;\r\r\n scanf(\"%c%d\",&s,&t);\r\r\n if((s=='a'||s=='h')&&(t==1||t==8))\r\r\n  printf(\"3\");\r\r\nelse if((s=='a'||s=='h')||(t==1||t==8))\r\r\n    printf(\"5\");\r\r\nelse\r\r\n printf(\"8\");\r\r\n\r\r\n}","284":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n\tlong long int t,l,r,l1,l2,r1,r2,k;\r\r\n\tscanf(\"%I64D %I64D %I64D %I64D %I64D\",&l1,&r1,&l2,&r2,&k);\r\r\n\tif(l1>l2)\r\r\n\t\tl=l1;\r\r\n\telse\r\r\n\t\tl=l2;\r\r\n\tif(r1<r2)\r\r\n\t\tr=r1;\r\r\n\telse\r\r\n\t\tr=r2;\r\r\n\tif(k>=l && k<=r)\r\r\n\t\tt=r-l;\r\r\n\telse\r\r\n\t\tt=r-l+1;\r\r\n\tif(t<0)\r\r\n\t\tt=0;\r\r\n\tprintf(\"%I64d\",t);\r\r\n\treturn 0;\r\r\n}","301":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,c,d,e;\r\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\r\n    if((a<b&&a>c)||(a<c&&a>b))\r\r\n    {\r\r\n        d=abs(a-b)+abs(a-c);\r\r\n    }\r\r\n    else if((b<a&&b>c)||(b<c&&b>a))\r\r\n    {\r\r\n        d=abs(b-a)+abs(b-c);\r\r\n    }\r\r\n    else if((c<a&&c>b)||(c<b&&c>a))\r\r\n    {\r\r\n        d=abs(c-a)+abs(c-b);\r\r\n    }\r\r\n    printf(\"%d\",d);\r\r\n}","307":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    char str1[100],str2[100];\r\r\n    int n1,n2;\r\r\n    scanf(\"%s\",str1);\r\r\n    scanf(\"%s\",str2);\r\r\n    if(str1[0]=='m')\r\r\n    n1=1;\r\r\n    else if(str1[0]=='t' && str1[1]=='u')\r\r\n    n1=2;\r\r\n    else if(str1[0]=='w')\r\r\n    n1=3;\r\r\n    else if(str1[0]=='t' && str1[1]=='h')\r\r\n    n1=4;\r\r\n    else if(str1[0]=='f')\r\r\n    n1=5; \r\r\n    else if(str1[0]=='s' && str1[1]=='a')\r\r\n    n1=6;\r\r\n    else if(str1[0]=='s' && str1[1]=='u')\r\r\n    n1=0;\r\r\n     if(str2[0]=='m')\r\r\n    n2=1;\r\r\n    else if(str2[0]=='t' && str2[1]=='u')\r\r\n    n2=2;\r\r\n    else if(str2[0]=='w')\r\r\n    n2=3;\r\r\n    else if(str2[0]=='t' && str2[1]=='h')\r\r\n    n2=4;\r\r\n    else if(str2[0]=='f')\r\r\n    n2=5; \r\r\n    else if(str2[0]=='s' && str2[1]=='a')\r\r\n    n2=6;\r\r\n    else if(str2[0]=='s' && str2[1]=='u')\r\r\n    n2=0;\r\r\n    \r\r\n    if(n2==(n1+30)%7 ||n2==n1 ||n2==(n1+31)%7  )\r\r\n    printf(\"YES\");\r\r\n    else \r\r\n    printf(\"NO\");\r\r\n}","376":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    long long int a;\r\r\n    scanf(\"%lld\",&a);\r\r\n    if(a==0){printf(\"1\");return 0;}\r\r\n    else if(a%4==1)\r\r\n    {printf(\"8\");}\r\r\n\r\r\n    else if(a%4==2)\r\r\n    {printf(\"4\");}\r\r\n\r\r\n    else if(a%4==3)\r\r\n    {printf(\"2\");}\r\r\n\r\r\n    else if(a%4==0)\r\r\n    {printf(\"6\");}\r\r\n}","379":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,c,d,e,f;\r\r\n    scanf(\"%d\\n%d\\n%d\",&a,&b,&c);\r\r\n    d=a\/1;\r\r\n    e=b\/2;\r\r\n    f=c\/4;\r\r\n    if(d<=e&&d<=f)\r\r\n        printf(\"%d\",7*d);\r\r\n    else if(e<=d&&e<=f)\r\r\n        printf(\"%d\",7*e);\r\r\n    else if(f<=d&&f<=e)\r\r\n        printf(\"%d\",7*f);\r\r\n    return 0;\r\r\n}","385":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n#include <math.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\nint n,start,end,myt,tramt,tramnow,d;\r\r\nscanf(\"%d %d %d\",&n,&start,&end);\r\r\nscanf(\"%d %d\",&tramt,&myt);\r\r\nscanf(\"%d %d\",&tramnow,&d);\r\r\nint mytime= abs(start-end)*myt;\r\r\nint tramtime=0;\r\r\nif((start>=tramnow&&d==1)||(start<=tramnow&&d==-1))\r\r\n{\r\r\n    tramtime+=abs(start-tramnow)*tramt;\r\r\n}\r\r\nelse\r\r\n{\r\r\n    if(d==-1)\r\r\n    {\r\r\n        tramtime+=(tramnow+start)*tramt;\r\r\n        d=1;\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        d=-1;\r\r\n        tramtime+=(n-tramnow+n-start)*tramt;\r\r\n\r\r\n    }\r\r\n}\r\r\nif((end>=start&&d==1)||(end<=start&&d==-1))\r\r\n    tramtime+=abs(start-end)*tramt;\r\r\n    else\r\r\n    {\r\r\n        if(d==1)\r\r\n        {\r\r\n            tramtime+=(n-start+n-end)*tramt;\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            tramtime+=(start+end)*tramt;\r\r\n        }\r\r\n    }\r\r\nif(mytime<tramtime)\r\r\n    printf(\"%d\",mytime);\r\r\nelse\r\r\n    printf(\"%d\",tramtime);\r\r\n    return 0;\r\r\n}","398":"#include <stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n\tint n, m, k;\r\r\n\r\r\n\tscanf (\"%d %d %d\", &n, &m, &k);\r\r\n\r\r\n\tk--;\r\r\n\r\r\n\tprintf (\"%d %d %c\", k \/ (2 * m) + 1, k % (m * 2) \/ 2 + 1, k % 2 ? 'R' : 'L');\r\r\n\r\r\n\treturn 0;\r\r\n}","427":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main(void) {\r\r\n    int dm[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\r\r\n    int m, d;\r\r\n    scanf(\"%d %d\", &m, &d);\r\r\n    m--;\r\r\n    d--;\r\r\n    dm[m] = dm[m] - (7 - d);\r\r\n    if (dm[m] % 7 == 0) {\r\r\n        printf(\"%d\\n\", dm[m] \/ 7 + 1);\r\r\n    }\r\r\n    else {\r\r\n        printf(\"%d\\n\", dm[m] \/ 7 + 2);\r\r\n    }\r\r\n    return 0;\r\r\n}","433":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,sum;\r\r\n    scanf(\"%d %d\",&a,&b);\r\r\n    sum = a + b;\r\r\n    if(sum%2 == 0){\r\r\n            if((sum\/2) == a && (sum\/2) ==b && sum !=0){\r\r\n                printf(\"YES\");\r\r\n            }\r\r\n            else {\r\r\n                printf(\"NO\");\r\r\n            }\r\r\n    }\r\r\n\r\r\n\r\r\n    if(sum%2 != 0){\r\r\n        if(b == (a +1) || a ==(b+1) ){\r\r\n            printf(\"YES\");\r\r\n        }\r\r\n        else {\r\r\n            printf(\"NO\");\r\r\n        }\r\r\n    }\r\r\n\r\r\n    return 0;\r\r\n}","438":"#include<stdio.h>\r\nint main(){\r\n\tint n,m,a;\r\n\tscanf(\"%d%d%d\",&n,&m,&a);\r\n\tprintf(\"%I64d\",(long long)((n+a-1)\/a)*(long long)((m+a-1)\/a));\r\n\treturn 0;\r\n}","457":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,a;\r\n    scanf(\"%d\",&n);\r\n    n-=10;\r\n    if(n>=1&&n<=9)a=4;\r\n    else if(n==11)a=4;\r\n    else if(n==10)a=15;\r\n    else a=0;\r\n    printf(\"%d\",a);\r\n    return 0;\r\n}","480":"#include<stdio.h>\nint main()\n{\n\tchar strSuit;\n\tchar strCard1[3], strCard2[3];\n\tscanf(\"%c\",&strSuit);\n\tscanf(\"%s %s\",strCard1, strCard2);\n\tif(strCard1[0]=='6')\n\t\tstrCard1[0]='1';\n\telse if(strCard1[0]=='7')\n\t\tstrCard1[0]='2';\n\telse if(strCard1[0]=='8')\n\t\tstrCard1[0]='3';\n\telse if(strCard1[0]=='9')\n\t\tstrCard1[0]='4';\n\telse if(strCard1[0]=='T')\n\t\tstrCard1[0]='5';\n\telse if(strCard1[0]=='J')\n\t\tstrCard1[0]='6';\n\telse if(strCard1[0]=='Q')\n\t\tstrCard1[0]='7';\n\telse if(strCard1[0]=='K')\n\t\tstrCard1[0]='8';\n\telse if(strCard1[0]=='A')\n\t\tstrCard1[0]='9';\n\n\tif(strCard2[0]=='6')\n\t\tstrCard2[0]='1';\n\telse if(strCard2[0]=='7')\n\t\tstrCard2[0]='2';\n\telse if(strCard2[0]=='8')\n\t\tstrCard2[0]='3';\n\telse if(strCard2[0]=='9')\n\t\tstrCard2[0]='4';\n\telse if(strCard2[0]=='T')\n\t\tstrCard2[0]='5';\n\telse if(strCard2[0]=='J')\n\t\tstrCard2[0]='6';\n\telse if(strCard2[0]=='Q')\n\t\tstrCard2[0]='7';\n\telse if(strCard2[0]=='K')\n\t\tstrCard2[0]='8';\n\telse if(strCard2[0]=='A')\n\t\tstrCard2[0]='9';\n\n\tif(strCard1[1]==strSuit&&strCard2[1]!=strSuit)\n\t\tprintf(\"YES\\n\");\n\telse if(strCard1[1]==strCard2[1])\n\t{\n\t\tif((int)strCard1[0]-(int)strCard2[0]>0)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\telse\n\t\tprintf(\"NO\\n\");\n\n\n\treturn 0;\n}","486":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    char str[1000],str1[1000];\r\n    int i,j,k,a,b,c,d;\r\n    scanf(\"%s\",str);\r\n    a=str[0]-'0';\r\n    b=str[1]-'0';\r\n    c=str[3]-'0';\r\n    d=str[4]-'0';\r\n    if(a==0 && b<5)\r\n    {\r\n        if(c<b)\r\n            printf(\"0%d:%d0\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==0 && b>=5)\r\n    {\r\n        printf(\"%d%d:%d%d\",a+1,a,a,a+1);\r\n    }\r\n    if(a==1 && b<5)\r\n    {\r\n        if(c<b)\r\n            printf(\"1%d:%d1\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==1 && b>=5)\r\n    {\r\n        printf(\"%d0:0%d\",a+1,a+1);\r\n    }\r\n    if(a==2 && b<3)\r\n    {\r\n        if(c<b)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==2 && b>=3)\r\n    {\r\n        if(c<b)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else if(c==b && d<a)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else\r\n            printf(\"00:00\");\r\n    }\r\n    return 0;\r\n\r\n}","531":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char str1[100];\r\n    int i;\r\n    char str2[100];\r\n    scanf(\"%s %s\",str1,str2);\r\n    i= strcmpi(str1,str2);\r\n    printf(\"%d\",i);\r\n}","605":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    char str[100],str1[]=\"front\",str2[]=\"back\";\r\n    int n;\r\n    scanf(\"%s\",str);\r\n    scanf(\"%d\",&n);\r\n    if(strcmp(str,str1)==0)\r\n    {\r\n        if(n==1)\r\n        {\r\n            printf(\"L\");\r\n        }\r\n        else\r\n            printf(\"R\");\r\n    }\r\n    else if(strcmp(str,str2)==0)\r\n    {\r\n        if(n==1)\r\n        {\r\n            printf(\"R\");\r\n        }\r\n        else\r\n            printf(\"L\");\r\n    }\r\n    return 0;\r\n}","628":"#include<stdio.h>\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n%4==0||n%7==0||n%47==0||n%74==0||n%44==0||n%77==0||n%444==0||n%447==0||n%477==0||n%777==0||n%774==0||n%744==0||n%474==0||n%747==0){\r\n        printf(\"YES\");\r\n    }\r\n    else{\r\n        printf(\"NO\");\r\n    }\r\n}","640":"#include<stdio.h>\r\n#include<conio.h>\r\nint main()\r\n{\r\n    int n,a,b;\r\n    scanf(\"%d %d %d\",&n,&a,&b);\r\n    if(a+b==n)\r\n    {\r\n        printf(\"%d\",a+1);\r\n    }\r\n    else if(a+b<n)\r\n    {\r\n        printf(\"%d\",b+1);\r\n    }\r\n    else\r\n        printf(\"%d\",n-a);\r\n    return 0;\r\n}","653":"#include<stdio.h>\r\nmain()\r\n{int n,inch,feet;\r\nscanf(\"%d\",&n);\r\nfeet=n\/3;\r\nif(n%3==2)\r\nfeet++;\r\nprintf(\"%d %d \",feet\/12,feet%12);\r\nreturn 0;\r\n}","674":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char p[101];\r\n    gets(p);\r\n    if(strstr(p,\"H\")||strstr(p,\"Q\")||strstr(p,\"9\")||strstr(p,\"H\")) printf(\"YES\");\r\n    else printf(\"NO\");\r\n        return 0;\r\n}","757":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n,k,l,c,d,p,nl,np;\r\n    int x,y,z,q,w,e;\r\n  scanf(\"%d\",&n);\r\n  scanf(\"%d\",&k);\r\n  scanf(\"%d\",&l);\r\n  scanf(\"%d\",&c);\r\n  scanf(\"%d\",&d);\r\n  scanf(\"%d\",&p);\r\n  scanf(\"%d\",&nl);\r\n  scanf(\"%d\",&np);\r\n    x=(k*l)\/nl;\r\n    y=c*d;\r\n    z=p\/np;\r\n    q=x\/n;\r\n    w=y\/n;\r\n    e=z\/n;\r\n    if(x<y && x<z)\r\n        printf(\"%d\",q);\r\n    else if(y<x && y<z)\r\n        printf(\"%d\",w);\r\n    else printf(\"%d\",e);\r\n\r\n\r\n}","834":"#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n, x, y, ans;\r\n    scanf(\" %d %d %d\", &n, &x, &y);\r\n    ans = (int)ceil((((double)y \/ (double)100) * (double)n)) - x;\r\n    if(ans > 0) printf(\"%d\", ans);\r\n    else printf(\"0\");\r\n    return 0;\r\n}","853":"#include<stdio.h>\r\nmain()\r\n{\r\n\tlong long int i,n,s=1;\r\n\tscanf(\"%I64d\",&n);\r\n\tif(n==1)\r\n\tprintf(\"1\");\r\n\telse\r\n\t{\r\n\tprintf(\"%I64d\",6*(n-1)*n+1);\r\n}\r\n}","857":"#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int i;\r\n    scanf(\"%d\",&i);\r\n    switch(i)\r\n    {\r\n        case 1: printf(\"2\");break;\r\n        case 2: printf(\"3\");break;\r\n        case 3: printf(\"1\");break;\r\n        case 4: printf(\"2\");break;\r\n        case 5: printf(\"1\");break;\r\n\r\n    }\r\n    return 0;\r\n       }","871":"#include<stdio.h>\n\ndouble dist(double x1,double y1,double x2,double y2)\n{\n    double ans=(x1-x2)*(x1-x2) +(y1-y2)*(y1-y2);\n    return ans;\n}\nint right(double x1,double y1,double x2,double y2,double x3,double y3)\n{\n\/\/    double max;\n    double a=dist(x1,y1,x2,y2);\n    double b=dist(x2,y2,x3,y3);\n    double c=dist(x3,y3,x1,y1);\n\/\/printf(\"%lf %lf %lf\",a)\n    if(a>b&&a>c){\n        if(a==b+c){return 1;}\n        else return 0;\n    }\n        int d;\n        if(b>a&&b>c){\n        if(b==a+c){return 1;}\n        else return 0;\n    }\n        if(c>b&&c>a){\n        if(c==b+a){return 1;}\n        else return 0;\n    }\n\n    return 0;\n}\n\n\nint main()\n{\n    double x1,y1,x2,y2,x3,y3;\n     scanf(\"%lf %lf %lf %lf %lf %lf\",&x1,&y1,&x2,&y2,&x3,&y3);\n    if(right(x1,y1,x2,y2,x3,y3)==1){printf(\"RIGHT\");}\n    else if(right(x1+1,y1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1+1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2+1,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2+1,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3+1,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3,y3+1)==1){printf(\"ALMOST\");}\n    else if(right(x1-1,y1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1-1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2-1,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2-1,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3-1,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3,y3-1)==1){printf(\"ALMOST\");}\n    else printf(\"NEITHER\");\n\nreturn 0;\n \/\/   main();\n}","916":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\/\/#include <math.h>\r\nint main()\r\n{\r\n  int n,m,min,max;\r\n  scanf(\"%d%d\",&n,&m);\r\n  if(n==0 && m!=0)\r\n    printf(\"Impossible\");\r\n    else if(m==0)\r\n        printf(\"%d %d\",n,n);\r\n  else\r\n  {\r\n      if(m<=n)\r\n        {\r\n            min=n;\r\n            max=n-1+m;\r\n        }\r\n        else\r\n        {\r\n            min=m;\r\n            max=n-1+m;\r\n        }\r\n        printf(\"%d %d\",min,max);\r\n  }\r\n\r\n    return 0;\r\n}","932":"# include <stdio.h>\r\n# include <conio.h>\r\n\r\nint main()\r\n{\r\n    int n,k,num1,num2,count;\r\n    scanf(\"%d%d\", &n, &k);\r\n    \r\n    num1 = n*2;\r\n    num2 = k - num1;\r\n    count = n - num2;\r\n    if(count <= 0){\r\n             count = 0;\r\n             }\r\n    \r\n    printf(\"%d\", count);\r\n    return 0;\r\n}","976":"#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tprintf(\"0 0 %d\",n);\n\treturn 0;\n}","1061":"#include <stdio.h>\r\nmain()\r\n{static long long int a,b,c,x,y,z;\r\nscanf(\"%I64d%I64d%I64d\",&a,&b,&c);\r\nx=(a>b&&a>c)?a:b>c?b:c;\r\ny=(a<b&&a<c)?a:b<c?b:c;\r\nz=a+b+c-x-y;\r\nif((z-y)%2)\r\n  printf(\"%I64d\\n\",x);\r\n    else\r\n      printf(\"%I64d\\n\",z);\r\nreturn 0;}","1090":"#include<stdio.h>\r\nint main()\r\n{\r\nint a, b, c, r;\r\nscanf(\"%d %d %d\", &a, &b, &c);\r\nr= (a*(b+c-1)+(b-1)*(c-1));\r\nprintf(\"%d\",r);\r\nreturn 0;\r\n}","1152":"#include <stdio.h>\r\n#include <math.h>\r\nint main ()\r\n{\r\n    int i,n,j,x,y,z;\r\n    scanf(\"%d %d %d\",&x,&y,&z);\r\n    n=sqrt(x*y\/z);\r\n    i=sqrt(x*z\/y);\r\n    j=sqrt(z*y\/x);\r\n    printf(\"%d\\n\",4*(n+i+j));\r\n    return 0;\r\n}","1166":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int a, b, c, d;\r\n    scanf(\"%I64d %I64d %I64d %I64d\", &a, &b, &c, &d);\r\n    if(a==b && a==c && a==d){\r\n        printf(\"3\");\r\n    }\r\n    else if((a==b && b==c)||(a==b && b==d) ||(a==c && c==d) || (b==c && c==d)){\r\n        printf(\"2\");\r\n    }\r\n    else if((a==b && c==d) || (a==c && b==d) || (a==d && b==c)){\r\n        printf(\"2\");\r\n    }\r\n    else if(a==b || a==c || a==d || b==c || b==d || c==d){\r\n        printf(\"1\");\r\n    }\r\n    else {\r\n        printf(\"0\");\r\n    }\r\n    return 0;\r\n}","1347":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a1,a2,a3;\r\n    int b1,b2,b3;\r\n    int c1,c2,c3,d;\r\n    \r\n    scanf(\"%d%d%d%d%d%d%d%d%d%d%d%d\",&a1,&a2,&a3,&b1,&b2,&b3,&c1,&c2,&c3);\r\n    d=(a1+b1+c1+a2+b2+c2+a3+b3+c3)\/2;\r\n    printf(\"%d %d %d\\n%d %d %d\\n%d %d %d\",d-a2-a3,a2,a3,b1,d-b1-b3,b3,c1,c2,d-c1-c2);\r\n    return 0;\r\n}","1482":"#include<stdio.h>\nint main()\n{  char str[1000];\n   int a=0;\n   scanf(\"%s\",str);\n   a=str[0];\n   if(a>=97){\n    a=a-32;\n    str[0]=a;\n    printf(\"%s\\n\",str);\n   }\n   else printf(\"%s\\n\",str);\n    return 0;\n}","1580":"#include \"stdio.h\"\r\nint a,b,A[1111];\r\nint main()\r\n{\t\r\n\tint A[1111]={\r\n\t1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,\r\n\t1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,\r\n\t1,0,1,1,1,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,0,1,\r\n\t1,0,1,1,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,1,\r\n\t1,0,1,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,\r\n\t1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,\r\n\t1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,\r\n\t0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,\r\n\t1,0,0,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,\r\n\t1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,\r\n\t0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0,0,0,1,0,1,0,\r\n\t0,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,1,1,\r\n\t1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,0,0,1,0,1,1,0,0,0,\r\n\t1,1,1,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,0,\r\n\t1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,0,0,0,1,0,\r\n\t1,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,\r\n\t0,0,0,0,1,0,1,0,0,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,0,1,0,\r\n\t1,0,1,0,0,1,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,0,1,0,0,0,1,1,1,0,\r\n\t1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,\r\n\t0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,\r\n\t0,0,1,1,0,1,1,0,1,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,\r\n\t0,1,1,1,0,1,0,1,1,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,\r\n\t1,1,1,0,1,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,1,1,1,0,\r\n\t1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,\r\n\t0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,0,1,1,0,1,1,1,1,1,0,0,0,0,\r\n\t0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,\r\n\t1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,0,0,1,1,0,1,0,1,0,1,1,0,1,0,\r\n\t1,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,1,\r\n\t1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,\r\n\t1,0,1,1,1,0,1,0,0,0,1,1,0,1,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,0,1,0,\r\n\t1,0,1,1,1,0,1,0,0,1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,1,0,0,0,0,\r\n\t1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,\r\n\t1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1\r\n\t};\r\n\tscanf(\"%d%d\",&a,&b);\r\n\tprintf(\"%d\",A[33*a+b]);\r\n\treturn 0;\r\n}","1588":"#include<stdio.h>\r\nint main()\r\n{\r\n    char s[45][20]={\"Washington\",\"Adams\",\"Jefferson\",\"Madison\",\"Monroe\",\"Adams\",\"Jackson\",\"Van Buren\",\"Harrison\",\"Tyler\",\"Polk\",\"Taylor\",\"Fillmore\",\"Pierce\",\"Buchanan\",\"Lincoln\",\"Johnson\",\"Grant\",\"Hayes\",\"Garfield\",\"Arthur\",\"Cleveland\",\"Harrison\",\"Cleveland\",\"McKinley\",\"Roosevelt\",\"Taft\",\"Wilson\",\"Harding\",\"Coolidge\",\"Hoover\",\"Roosevelt\",\"Truman\",\"Eisenhower\",\"Kennedy\",\"Johnson\",\"Nixon\",\"Ford\",\"Carter\",\"Reagan\"\r\n};\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    printf(\"%s\\n\",s[n-1]);\r\n    return 0;\r\n}","1648":"#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    float a,b,n;\r\n    float x;\r\n    scanf(\"%f%f%f\",&a,&b,&n);\r\n    if(a==0 && b==0)\r\n        printf(\"1\");\r\n    else if(a==0)\r\n        printf(\"No solution\");\r\n    else if(b==0)\r\n            printf(\"0\");\r\n    else if(((b<0 && a>0) || (b>0 && a<0)) && (int)n%2==1)\r\n    {\r\n        x=pow(b*-1\/a,1\/n);\r\n        int m=(int)x;\r\n        float l=pow(m,n);\r\n        if(a*(int)l==-b)\r\n            printf(\"%d\",-m);\r\n            else\r\n            printf(\"No solution\");\r\n    }\r\n    else\r\n    {\r\n        x=pow(b\/a,1\/n);\r\n        int m=(int)x;\r\n        float l=pow(m,n);\r\n        if(a*(int)l==b)\r\n            printf(\"%d\",m);\r\n            else\r\n            printf(\"No solution\");\r\n    }\r\n\r\n    return 0;\r\n}","1650":"#include <stdio.h>\n#include <stdlib.h>\nint y,m,d;\nint legal(int d,int m,int y)\n{\n    int p[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n    if(y%4==0)\n\t\tp[2]=29;\n    if(m>=1&&m<=12&&d>=1&&d<=p[m])\n    return 1;\n    return 0;\n}\nint ok(int a,int b,int c)\n{\n\tif(y>c)\n\t\treturn 1;\n\telse\n\t\tif(y==c)\n\t\t{if(m>b)\n\t\treturn 1;\n\t    else\n\t\tif(m==b&&d>=a)\n\t\treturn 1;}\n\treturn 0;\n}\nint main(void)\n{\n\n    int a,b,c;\n    scanf(\"%d%*c%d%*c%d\",&d,&m,&y);\n    if(y%4==0&&m==2&&d==29)\n\t\ty-=18,m=3,d=1;\n\telse\n\t\ty-=18;\n    scanf(\"%d%*c%d%*c%d\",&a,&b,&c);\n    if((legal(a,b,c)&&ok(a,b,c))||(legal(c,b,a)&&ok(c,b,a))||(legal(b,c,a)&&ok(b,c,a))||\n\t    (legal(a,c,b)&&ok(a,c,b))||(legal(c,a,b)&&ok(c,a,b))||(legal(b,a,c)&&ok(b,a,c)))\n\t\tputs(\"YES\\n\");\n\telse\n\t\tputs(\"NO\\n\");\n    return 0;\n}","1657":"#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    long long int n,m,s,i,j,ans,c=0,d=0,f,e;\r\n    scanf(\"%lld %lld %lld\",&n,&m,&s);\r\n    if(m\/s==0||m==s){\r\n        c=m;\r\n        e=m;\r\n    }\r\n    else if(m\/s<=2){\r\n        c=2;e=s+1;\r\n    }\r\n    else{\r\n        if(m%s==0){\r\n            c=(m\/s-1)+1;e=(m\/s-1)*s+1;\r\n        }\r\n        else {\r\n            c=(m\/s)+1;e=(m\/s)*s+1;\r\n        }\r\n    }\r\n    if(n\/s==0||n==s){\r\n        d=n;\r\n        f=n;\r\n    }\r\n    else if(n\/s<=2){\r\n        d=2;\r\n        f=s+1;\r\n    }\r\n    else{\r\n        if(n%s==0){\r\n            d=(n\/s-1)+1;f=(n\/s-1)*s+1;\r\n        }\r\n        else {\r\n            d=(n\/s)+1;f=(n\/s)*s+1;\r\n        }\r\n    }\r\n    ans=c*d*(m-e+1)*(n-f+1);\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}","1711":"#include<stdio.h>\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n!=2&&n%2==0)\r\n    printf(\"yes\");\r\n    else\r\n    printf(\"no\");\r\n}","1726":"#include <stdio.h>\n\nint main()\n{\n        int n,m,x;\n        scanf(\"%d%d%d\",&n,&m,&x);\n        n-=2*(x-1);\n        m-=2*(x-1);\n        if(n<1||m<1||x<1)\n        {\n                printf(\"0\\n\");\n                return 0;\n        }\n        int current=(2*n)+(2*m)-4;\n        current\/=2;\n        if(n==1)\n                current=(m+1)\/2;\n        if(m==1)\n                current=(n+1)\/2;\n        printf(\"%d\\n\",current);\n        return 0;\n}","1729":"#include<stdio.h>\r\n#include<string.h>\r\nmain()\r\n{\r\n\tchar str1[200],str2[200],*r;\r\n\tgets(str1);\r\n\tgets(str2);\r\n\tr=strrev(str1);\r\n\tif(strcmp(r,str2)==0)\r\n\t{\r\n\t\tprintf(\"YES\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tprintf(\"NO\");\r\n\t}\r\n}","1780":"#include<stdio.h>\r\nint main()\r\n         {\r\n\r\n          float t,b,c,d;\r\n          scanf(\"%f\",&t);\r\n          d=1+(8*t);\r\n    b=(-1+sqrt(d))\/2;\r\n    c=(-1-sqrt(d))\/2;\r\n\r\n             if((b-floor(b))==0||(c-floor(c)==0))\r\n                printf(\"YES\");\r\n             else\r\n                printf(\"NO\");\r\n         }","1804":"#include <stdio.h>\r\nint main()\r\n{\r\n\tint m,n, domino;\r\n\tscanf(\"%d %d\", &m, &n);\r\n\tdomino = (m*n)\/2;\r\n\tprintf(\"%d\\n\",domino);\r\nreturn 0;\r\n}","1855":"#include <stdio.h>\n\nint dist(int x, int y,int n)\n{\n    if(x==0) return y;\n    else if(x<n)\n    {\n        if (y==0) return n+n+n+n-x;\n        else return x+n;\n    }\n    else return n+n+n-y;\n}\nint main()\n{\n    int n,x1,y1,x2,y2,a,b,d;\n    scanf(\"%d %d %d %d %d\",&n,&x1,&y1,&x2,&y2);\n    a=dist(x1,y1,n);\n    b=dist(x2,y2,n);\n    if(a>b) d=a-b;\n    else d=b-a;\n    if((n+n-d)>0) printf(\"%d\",d);\n    else printf(\"%d\",n+n+n+n-d);\n    return 0;\n}","1877":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,k,c;\r\n    scanf(\"%d%d%d%d\",&n,&m,&k,&c);\r\n    if((n+m>k&&m+k>n&&k+n>m)||(m+k>c&&k+c>m&&m+c>k)||(n+m>c&&m+c>n&&n+c>m)||(n+k>c&&k+c>n&&c+n>k))\r\n    {\r\n        printf(\"TRIANGLE\");\r\n        return 0;\r\n    }\r\n    else if((n+m==k||m+k==n||k+n==m)||(m+k==c||k+c==m||m+c==k)||(n+m==c||m+c==n||n+c==m)||(n+k==c||k+c==n||c+n==k))\r\n    {\r\n        printf(\"SEGMENT\");\r\n        return 0;\r\n    }\r\n    else\r\n    {\r\n        printf(\"IMPOSSIBLE\");\r\n        return 0;\r\n    }\r\n    return 0;\r\n}","1888":"#include <stdio.h>\r\nint main ()\r\n{\r\n    int gl;\r\n    int gr;\r\n    int bl;\r\n    int br;\r\n\r\n    scanf (\"%d\",&gl);\r\n    scanf (\"%d\",&gr);\r\n    scanf (\"%d\",&bl);\r\n    scanf (\"%d\",&br);\r\n\r\n\r\n\r\n\r\n    if ( lb (br,gl) || rb (bl,gr))\r\n        printf (\"YES\");\r\n    else\r\n        printf (\"NO\");\r\n\r\n\r\n}\r\nint lb(int br, int gl)\r\n{\r\n    if (br!=gl)\r\n    {\r\n        if ((br<gl && br==gl-1) || (br>gl && (2*gl + 2 >= br)))\r\n            return 1;\r\n        else\r\n            return 0;\r\n    }\r\n    else\r\n        return 1;\r\n\r\n}\r\nint rb(int bl, int gr)\r\n{\r\n    if (bl!=gr)\r\n    {\r\n        if ((bl<gr && bl==gr-1) || (bl>gr && (2*gr + 2 >= bl)))\r\n            return 1;\r\n        else\r\n            return 0;\r\n    }\r\n    else\r\n        return 1;\r\n\r\n}","1906":"# include <stdio.h>\r\nlong long x1,x2;\r\nint main (void)\r\n{\r\n    int a,b,c,d,e,f;\r\n    scanf(\"%d%d%d%d%d%d\",&a,&b,&c,&d,&e,&f);\r\n    x1=b*d*f;\r\n    x2=a*c*e;\r\n\r\n    if (c==0 && d>0)\r\n    {\r\n       printf(\"Ron\\n\");\r\n       return 0 ;         \r\n    }\r\n    if (a==0 && b && c && d )\r\n    {\r\n       printf(\"Ron\\n\");\r\n       return 0 ;         \r\n    }\r\n    if (x1==0)\r\n    {   \r\n       printf(\"Hermione\\n\");\r\n       \/\/system(\"pause\");\r\n       return 0 ;\r\n    }\r\n    if (x2==0)\r\n    {\r\n       printf(\"Ron\\n\");\r\n       \/\/system(\"pause\");\r\n       return 0 ;\r\n\r\n    }\r\n    if (x1>x2)\r\n       printf(\"Ron\\n\");\r\n    else\r\n        printf(\"Hermione\\n\");\r\n\r\n    return 0;\r\n}","1910":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <limits.h>\r\n\r\nvoid int_tipo(char [], char []);\r\n\r\nint main()\r\n{\r\n    char n[101];\r\n    char type[11];\r\n    scanf(\"%s\",&n);\r\n    int_tipo(n,type);\r\n    printf(\"%s\",type);\r\n    return 0;\r\n}\r\n\r\nvoid int_tipo(char strN[], char type[])\r\n{\r\n    long long int n;\r\n    int limite;\r\n    int largo;\r\n    n=strtoll(strN,NULL,10);\r\n    largo=strlen(strN);\r\n    if(strN[0]!='-' && strcmp(\"9223372036854775807\",strN)<0 && largo==19)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(strN[0]=='-' && strcmp(\"-9223372036854775808\",strN)<0 && largo==20)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(strN[0]=='-')\r\n    {\r\n        limite=20;\r\n    }\r\n    else\r\n    {\r\n        limite=19;\r\n    }\r\n    if(largo>limite)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(n>=-128 && n<=127)\r\n    {\r\n        strcpy(type,\"byte\");\r\n        return;\r\n    }\r\n    if(n>=-32768 && n<=32767)\r\n    {\r\n        strcpy(type,\"short\");\r\n        return;\r\n    }\r\n    if(n>=-2147483648LL && n<=2147483647LL)\r\n    {\r\n        strcpy(type,\"int\");\r\n        return;\r\n    }\r\n    strcpy(type,\"long\");\r\n}","2004":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str[100],str1[100],str2[100];\r\n    double hh,mm,hh_angle,mm_angle,check=360;\r\n    scanf(\"%s\",str);\r\n    str1[0]=str[0];\r\n    str1[1]=str[1];\r\n    str2[0]=str[3];\r\n    str2[1]=str[4];\r\n    hh=atoi(str1);\r\n    mm=atoi(str2);\r\n    \/\/scanf(\"%lf %lf\",&hh,&mm);\r\n    hh_angle=(hh*60+mm)\/2;\r\n    mm_angle=6*mm;\r\n    if(hh_angle>=check)\r\n        hh_angle-=check;\r\n    printf(\"%lf %lf\",hh_angle,mm_angle);\r\n    return 0;\r\n}","2073":"#include<stdio.h>\r\nint main()\r\n{\r\nlong long int n;\r\nscanf(\"%I64d\",&n);\r\nprintf(\"%I64d\",(3*n)\/2);\r\nreturn(0);}","2088":"#include<stdio.h>\r\nint main()\r\n\t{\r\n\tlong long int a,b,pro,das=0,mas;\r\n\tscanf(\"%I64d %I64d\",&a,&b);\r\n\tlong int d=0,m=0;\r\n\tpro=a*b;mas=b;\r\n\tif(a<b)\r\n\t\t{restart1:\r\n\t\tdas+=a;\r\n\t\trestart3:\r\n\t\tif(mas==das)\r\n\t\t\t{\r\n\t\t\tm++;\r\n\t\t\tgoto end;\r\n\t\t\t}\r\n\t\tif(mas>das)\r\n\t\t\t{\r\n\t\t\td++;goto restart1;\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\tm++;mas+=b;goto restart3;\r\n\t\t\t}\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\trestart2:\r\n\t\tdas+=a;\r\n\t\trestart4:\r\n\t\tif(mas==das)\r\n\t\t\t{\r\n\t\t\td++;goto end;\r\n\t\t\t}\r\n\t\tif(mas>das)\r\n\t\t\t{\r\n\t\t\td++;goto restart2;\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\tm++;mas+=b;goto restart4;\r\n\t\t\t}\r\n\t\t}\r\n\tend:\r\n\tif(d>m)\r\n\t\t{\r\n\t\tprintf(\"Dasha\");\r\n\t\t}\r\n\telse if(m>d)\r\n\t\t{\r\n\t\tprintf(\"Masha\");\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\tprintf(\"Equal\");\r\n\t\t}\r\n\treturn(0);\r\n\t}","2091":"#include<stdio.h> \r\nint main(){ \r\n    int a,b,A,B; \r\n    scanf(\"%d%d\",&a,&b); \r\n    if(a>b){ \r\n    A=7-a; \r\n    } \r\n    else { \r\n    A=7-b; \r\n    } \r\n    if(A%6==0){\r\n        printf(\"%d\/%d\\n\",A\/6,1);\r\n        return 0;\r\n    }\r\n    if(A%3==0){ \r\n    printf(\"%d\/%d\\n\",A\/3,2);\r\n    return 0; \r\n    } \r\n    if(A%2==0){ \r\n    printf(\"%d\/%d\\n\",A\/2,3);\r\n    return 0; \r\n    }\r\n\r\n   printf(\"%d\/%d\\n\",A,6); \r\n   return 0; \r\n}","2210":"#include <stdio.h>\r\n#include <string.h>\r\nint main(void)\r\n{\r\n    char str1[8]=\"0000000\",str2[8]=\"1111111\";\r\n    char str3[100];\r\n    gets(str3);\r\n    if(strstr(str3,str1)||strstr(str3,str2)){\r\n        printf(\"YES\");\r\n    }\r\n    else\r\n        printf(\"NO\");\r\n\r\n    return 0;\r\n}","2246":"#include<stdio.h>\r\r\n\r\r\nint main(void)\r\r\n{\r\r\n\tint mas[30] = {4, 22, 27, 58, 85, 94, 121, 166, 202, 265, 274, 319, 346, 355, 378, 382, 391, 438, 454, 483, 517, 526, 535, 562, 576, 588, 627, 634, 636, 645};\r\r\n\tint i;\r\r\n\tscanf(\"%d\", &i);\r\r\n\tprintf(\"%d\", mas[i - 1]);\r\r\n}","2312":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint a;\r\r\nscanf(\"%d\",&a);\r\r\nprintf(\"%d\",(a-1)\/2);\r\r\n}","2317":"#include<stdio.h>\r\nint main()\r\n{\r\n    int l,r,k,max=0,integer,i;\r\n    scanf(\"%d %d\",&l,&r);\r\n    if(l==r)\r\n        printf(\"%d\\n\",l);\r\n    else\r\n        printf(\"2\\n\");\r\n    return 0;\r\n}","2347":"#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint x1,y1,x2,y2,x,y;\r\n \tint flagX,flagY;\r\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\r\n\tscanf(\"%d%d\",&x,&y);\r\n\tif((abs(x2-x1)%x!=0) || (abs(y2-y1)%y!=0))\r\n\t\tprintf(\"NO\\n\");\r\n\telse\r\n\t{\r\n\t\tflagX=(x2-x1)\/x;\r\n\t\tflagY=(y2-y1)\/y;\r\n\t\tif(abs(flagX-flagY)%2==1)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}","2356":"#include<stdio.h>\r\r\nint main ()\r\r\n{\r\r\n   unsigned long long a,b,c;\r\r\n   scanf(\"%llu%llu\",&a,&b);\r\r\n   c=a\/b;\r\r\n   if(c%2==0)printf(\"NO\\n\");\r\r\n   else printf(\"YES\\n\");\r\r\n    return 0;\r\r\n\r\r\n}"},"fullname":{"0":"581A","30":"591A","38":"592B","58":"599A","73":"611A","86":"617A","104":"624A","124":"630A","139":"638A","146":"645B","161":"659A","186":"669A","193":"670A","197":"672A","227":"678D","237":"690A1","248":"700A","269":"707C","278":"710A","284":"714A","301":"723A","307":"724A","376":"742A","379":"746A","385":"746C","398":"748A","427":"760A","433":"761A","438":"1A","457":"104A","480":"106A","486":"108A","531":"112A","605":"120A","628":"122A","640":"124A","653":"125A","674":"133A","757":"151A","834":"168A","853":"171B","857":"171D","871":"18A","916":"190A","932":"194A","976":"199A","1061":"209B","1090":"216A","1152":"224A","1166":"228A","1347":"259B","1482":"281A","1580":"290B","1588":"290A","1648":"30A","1650":"30B","1657":"32C","1711":"4A","1726":"40B","1729":"41A","1780":"47A","1804":"50A","1855":"57A","1877":"6A","1888":"62A","1906":"65A","1910":"66A","2004":"80B","2073":"84A","2088":"87A","2091":"9A","2210":"96A","2246":"784A","2312":"804A","2317":"805A","2347":"817A","2356":"832A"},"name":{"0":"A","30":"A","38":"B","58":"A","73":"A","86":"A","104":"A","124":"A","139":"A","146":"B","161":"A","186":"A","193":"A","197":"A","227":"D","237":"A1","248":"A","269":"C","278":"A","284":"A","301":"A","307":"A","376":"A","379":"A","385":"C","398":"A","427":"A","433":"A","438":"A","457":"A","480":"A","486":"A","531":"A","605":"A","628":"A","640":"A","653":"A","674":"A","757":"A","834":"A","853":"B","857":"D","871":"A","916":"A","932":"A","976":"A","1061":"B","1090":"A","1152":"A","1166":"A","1347":"B","1482":"A","1580":"B","1588":"A","1648":"A","1650":"B","1657":"C","1711":"A","1726":"B","1729":"A","1780":"A","1804":"A","1855":"A","1877":"A","1888":"A","1906":"A","1910":"A","2004":"B","2073":"A","2088":"A","2091":"A","2210":"A","2246":"A","2312":"A","2317":"A","2347":"A","2356":"A"},"countline":{"0":15,"30":19,"38":15,"58":51,"73":23,"86":11,"104":17,"124":8,"139":21,"146":33,"161":35,"186":1,"193":22,"197":19,"227":83,"237":31,"248":23,"269":15,"278":27,"284":45,"301":37,"307":83,"376":35,"379":31,"385":97,"398":27,"427":35,"433":53,"438":7,"457":14,"480":60,"486":52,"531":11,"605":31,"628":11,"640":18,"653":10,"674":10,"757":28,"834":11,"853":12,"857":18,"871":54,"916":28,"932":18,"976":8,"1061":12,"1090":9,"1152":12,"1166":23,"1347":13,"1482":14,"1580":43,"1588":10,"1648":37,"1650":42,"1657":41,"1711":9,"1726":22,"1729":17,"1780":15,"1804":9,"1855":24,"1877":22,"1888":49,"1906":39,"1910":64,"2004":22,"2073":7,"2088":58,"2091":26,"2210":15,"2246":17,"2312":13,"2317":11,"2347":22,"2356":21},"context":{"0":"A. Vasya the Hipster time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output One day Vasya the Hipster decided to count how many socks he had. It turned out that he had a red socks and b blue socks. According to the latest fashion, hipsters should wear the socks of different colors: a red one on the left foot, a blue one on the right foot. Every day Vasya puts on new socks in the morning and throws them away before going to bed as he doesn't want to wash them. Vasya wonders, what is the maximum number of days when he can dress fashionable and wear different socks, and after that, for how many days he can then wear the same socks until he either runs out of socks or cannot make a single pair from the socks he's got. Can you help him?\n\nInput\nThe single line of the input contains two positive integers a and b ( 1 \u2264 a , b \u2264 100 ) \u2014 the number of red and blue socks that Vasya's got.\n\nOutput\nPrint two space-separated integers \u2014 the maximum number of days when Vasya can wear different socks and the number of days when he can wear the same socks until he either runs out of socks or cannot make a single pair from the socks he's got. Keep in mind that at the end of the day Vasya throws away the socks that he's been wearing on that day. Examples\n\nInput\n3 1\n\nOutput\n1 1\n\nInput\n2 3\n\nOutput\n2 0\n\nInput\n7 3\n\nOutput\n3 2\n\nNote\nIn the first sample Vasya can first put on one pair of different socks, after that he has two red socks left to wear on the second day.","30":"A. Wizards' Duel time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Harry Potter and He-Who-Must-Not-Be-Named engaged in a fight to the death once again. This time they are located at opposite ends of the corridor of length l . Two opponents simultaneously charge a deadly spell in the enemy. We know that the impulse of Harry's magic spell flies at a speed of p meters per second, and the impulse of You-Know-Who's magic spell flies at a speed of q meters per second. The impulses are moving through the corridor toward each other, and at the time of the collision they turn round and fly back to those who cast them without changing their original speeds. Then, as soon as the impulse gets back to it's caster, the wizard reflects it and sends again towards the enemy, without changing the original speed of the impulse. Since Harry has perfectly mastered the basics of magic, he knows that after the second collision both impulses will disappear, and a powerful explosion will occur exactly in the place of their collision. However, the young wizard isn't good at math, so he asks you to calculate the distance from his position to the place of the second meeting of the spell impulses, provided that the opponents do not change positions during the whole fight.\n\nInput\nThe first line of the input contains a single integer l ( 1 \u2264 l \u2264 1 000 ) \u2014 the length of the corridor where the fight takes place. The second line contains integer p , the third line contains integer q ( 1 \u2264 p , q \u2264 500 ) \u2014 the speeds of magical impulses for Harry Potter and He-Who-Must-Not-Be-Named, respectively.\n\nOutput\nPrint a single real number \u2014 the distance from the end of the corridor, where Harry is located, to the place of the second meeting of the spell impulses. Your answer will be considered correct if its absolute or relative error will not exceed 10 - 4 . Namely: let's assume that your answer equals a , and the answer of the jury is b . The checker program will consider your answer correct if . Examples\n\nInput\n100 50 50\n\nOutput\n50\n\nInput\n199 60 40\n\nOutput\n119.4\n\nNote\nIn the first sample the speeds of the impulses are equal, so both of their meetings occur exactly in the middle of the corridor.","38":"B. The Monster and the Squirrel time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Ari the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel. Ari draws a regular convex polygon on the floor and numbers it's vertices 1, 2, ..., n in clockwise order. Then starting from the vertex 1 she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex 2, 3, ..., n (in this particular order). And then she puts a walnut in each region inside the polygon. Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q share a side or a corner . Assuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?\n\nInput\nThe first and only line of the input contains a single integer n ( 3 \u2264 n \u2264 54321 ) - the number of vertices of the regular polygon drawn by Ari.\n\nOutput\nPrint the minimum number of jumps Ada should make to collect all the walnuts. Note, that she doesn't need to leave the polygon after. Examples\n\nInput\n5\n\nOutput\n9\n\nInput\n3\n\nOutput\n1\n\nNote\nOne of the possible solutions for the first sample is shown on the picture above.","58":"A. Patrick and Shopping time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d 1 meter long road between his house and the first shop and a d 2 meter long road between his house and the second shop. Also, there is a road of length d 3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house. Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn't mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.\n\nInput\nThe first line of the input contains three integers d 1 , d 2 , d 3 ( 1 \u2264 d 1 , d 2 , d 3 \u2264 10 8 ) \u2014 the lengths of the paths. d 1 is the length of the path connecting Patrick's house and the first shop; d 2 is the length of the path connecting Patrick's house and the second shop; d 3 is the length of the path connecting both shops.\n\nOutput\nPrint the minimum distance that Patrick will have to walk in order to visit both shops and return to his house. Examples\n\nInput\n10 20 30\n\nOutput\n60\n\nInput\n1 1 5\n\nOutput\n4\n\nNote\nThe first sample is shown on the picture in the problem statement. One of the optimal routes is: house first shop second shop house. In the second sample one of the optimal routes is: house first shop house second shop house.","73":"A. New Year and Days time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today is Wednesday, the third day of the week. What's more interesting is that tomorrow is the last day of the year 2015. Limak is a little polar bear. He enjoyed this year a lot. Now, he is so eager to the coming year 2016. Limak wants to prove how responsible a bear he is. He is going to regularly save candies for the entire year 2016! He considers various saving plans. He can save one candy either on some fixed day of the week or on some fixed day of the month. Limak chose one particular plan. He isn't sure how many candies he will save in the 2016 with his plan. Please, calculate it and tell him.\n\nInput\nThe only line of the input is in one of the following two formats: \" x of week \" where x ( 1 \u2264 x \u2264 7 ) denotes the day of the week. The 1-st day is Monday and the 7-th one is Sunday. \" x of month \" where x ( 1 \u2264 x \u2264 31 ) denotes the day of the month.\n\nOutput\nPrint one integer \u2014 the number of candies Limak will save in the year 2016. Examples\n\nInput\n4 of week\n\nOutput\n52\n\nInput\n30 of month\n\nOutput\n11\n\nNote\nPolar bears use the Gregorian calendar. It is the most common calendar and you likely use it too. You can read about it on Wikipedia if you want to \u2013 https:\/\/en.wikipedia.org\/wiki\/Gregorian_calendar . The week starts with Monday. In the first sample Limak wants to save one candy on each Thursday (the 4-th day of the week). There are 52 Thursdays in the 2016. Thus, he will save 52 candies in total. In the second sample Limak wants to save one candy on the 30-th day of each month. There is the 30-th day in exactly 11 months in the 2016 \u2014 all months but February. It means that Limak will save 11 candies in total.","86":"A. Elephant time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output An elephant decided to visit his friend. It turned out that the elephant's house is located at point 0 and his friend's house is located at point x ( x > 0) of the coordinate line. In one step the elephant can move 1 , 2 , 3 , 4 or 5 positions forward. Determine, what is the minimum number of steps he need to make in order to get to his friend's house.\n\nInput\nThe first line of the input contains an integer x ( 1 \u2264 x \u2264 1 000 000 ) \u2014 The coordinate of the friend's house.\n\nOutput\nPrint the minimum number of steps that elephant needs to make to get from point 0 to point x . Examples\n\nInput\n5\n\nOutput\n1\n\nInput\n12\n\nOutput\n3\n\nNote\nIn the first sample the elephant needs to make one step of length 5 to reach the point x . In the second sample the elephant can get to point x if he moves by 3 , 5 and 4 . There are other ways to get the optimal answer but the elephant cannot reach x in less than three moves.","104":"A. Save Luke time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Luke Skywalker got locked up in a rubbish shredder between two presses. R2D2 is already working on his rescue, but Luke needs to stay alive as long as possible. For simplicity we will assume that everything happens on a straight line, the presses are initially at coordinates 0 and L , and they move towards each other with speed v 1 and v 2 , respectively. Luke has width d and is able to choose any position between the presses. Luke dies as soon as the distance between the presses is less than his width. Your task is to determine for how long Luke can stay alive.\n\nInput\nThe first line of the input contains four integers d , L , v 1 , v 2 ( 1 \u2264 d , L , v 1 , v 2 \u2264 10 000, d < L ) \u2014 Luke's width, the initial position of the second press and the speed of the first and second presses, respectively.\n\nOutput\nPrint a single real value \u2014 the maximum period of time Luke can stay alive for. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6 . Namely: let's assume that your answer is a , and the answer of the jury is b . The checker program will consider your answer correct, if . Examples\n\nInput\n2 6 2 2\n\nOutput\n1.00000000000000000000\n\nInput\n1 9 1 2\n\nOutput\n2.66666666666666650000\n\nNote\nIn the first sample Luke should stay exactly in the middle of the segment, that is at coordinates [2;4] , as the presses move with the same speed. In the second sample he needs to occupy the position . In this case both presses move to his edges at the same time.","124":"A. Again Twenty Five! time limit per test 0.5 seconds memory limit per test 64 megabytes input standard input output standard output The HR manager was disappointed again. The last applicant failed the interview the same way as 24 previous ones. \"Do I give such a hard task?\" \u2014 the HR manager thought. \"Just raise number 5 to the power of n and get last two digits of the number. Yes, of course, n can be rather big, and one cannot find the power using a calculator, but we need people who are able to think, not just follow the instructions.\" Could you pass the interview in the machine vision company in IT City?\n\nInput\nThe only line of the input contains a single integer n ( 2 \u2264 n \u2264 2\u00b710 18 ) \u2014 the power in which you need to raise number 5 .\n\nOutput\nOutput the last two digits of 5 n without spaces between them. Examples\n\nInput\n2\n\nOutput\n25","139":"A. Home Numbers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The main street of Berland is a straight line with n houses built along it ( n is an even number). The houses are located at both sides of the street. The houses with odd numbers are at one side of the street and are numbered from 1 to n - 1 in the order from the beginning of the street to the end (in the picture: from left to right). The houses with even numbers are at the other side of the street and are numbered from 2 to n in the order from the end of the street to its beginning (in the picture: from right to left). The corresponding houses with even and odd numbers are strictly opposite each other, that is, house 1 is opposite house n , house 3 is opposite house n - 2 , house 5 is opposite house n - 4 and so on. Vasya needs to get to house number a as quickly as possible. He starts driving from the beginning of the street and drives his car to house a . To get from the beginning of the street to houses number 1 and n , he spends exactly 1 second. He also spends exactly one second to drive the distance between two neighbouring houses. Vasya can park at any side of the road, so the distance between the beginning of the street at the houses that stand opposite one another should be considered the same. Your task is: find the minimum time Vasya needs to reach house a .\n\nInput\nThe first line of the input contains two integers, n and a ( 1 \u2264 a \u2264 n \u2264 100 000 ) \u2014 the number of houses on the street and the number of the house that Vasya needs to reach, correspondingly. It is guaranteed that number n is even.\n\nOutput\nPrint a single integer \u2014 the minimum time Vasya needs to get from the beginning of the street to house a . Examples\n\nInput\n4 2\n\nOutput\n2\n\nInput\n8 5\n\nOutput\n3\n\nNote\nIn the first sample there are only four houses on the street, two houses at each side. House 2 will be the last at Vasya's right. The second sample corresponds to picture with n = 8 . House 5 is the one before last at Vasya's left.","146":"B. Mischievous Mess Makers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output It is a balmy spring afternoon, and Farmer John's n cows are ruminating about link-cut cacti in their stalls. The cows, labeled 1 through n , are arranged so that the i -th cow occupies the i -th stall from the left. However, Elsie, after realizing that she will forever live in the shadows beyond Bessie's limelight, has formed the Mischievous Mess Makers and is plotting to disrupt this beautiful pastoral rhythm. While Farmer John takes his k minute long nap, Elsie and the Mess Makers plan to repeatedly choose two distinct stalls and swap the cows occupying those stalls, making no more than one swap each minute. Being the meticulous pranksters that they are, the Mischievous Mess Makers would like to know the maximum messiness attainable in the k minutes that they have. We denote as p i the label of the cow in the i -th stall. The messiness of an arrangement of cows is defined as the number of pairs ( i , j ) such that i < j and p i > p j .\n\nInput\nThe first line of the input contains two integers n and k ( 1 \u2264 n , k \u2264 100 000 ) \u2014 the number of cows and the length of Farmer John's nap, respectively.\n\nOutput\nOutput a single integer, the maximum messiness that the Mischievous Mess Makers can achieve by performing no more than k swaps. Examples\n\nInput\n5 2\n\nOutput\n10\n\nInput\n1 10\n\nOutput\n0\n\nNote\nIn the first sample, the Mischievous Mess Makers can swap the cows in the stalls 1 and 5 during the first minute, then the cows in stalls 2 and 4 during the second minute. This reverses the arrangement of cows, giving us a total messiness of 10 . In the second sample, there is only one cow, so the maximum possible messiness is 0 .","161":"A. Round House time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya lives in a round building, whose entrances are numbered sequentially by integers from 1 to n . Entrance n and entrance 1 are adjacent. Today Vasya got bored and decided to take a walk in the yard. Vasya lives in entrance a and he decided that during his walk he will move around the house b entrances in the direction of increasing numbers (in this order entrance n should be followed by entrance 1 ). The negative value of b corresponds to moving | b | entrances in the order of decreasing numbers (in this order entrance 1 is followed by entrance n ). If b = 0 , then Vasya prefers to walk beside his entrance. Illustration for n = 6 , a = 2 , b = - 5 . Help Vasya to determine the number of the entrance, near which he will be at the end of his walk.\n\nInput\nThe single line of the input contains three space-separated integers n , a and b ( 1 \u2264 n \u2264 100, 1 \u2264 a \u2264 n , - 100 \u2264 b \u2264 100 ) \u2014 the number of entrances at Vasya's place, the number of his entrance and the length of his walk, respectively.\n\nOutput\nPrint a single integer k ( 1 \u2264 k \u2264 n ) \u2014 the number of the entrance where Vasya will be at the end of his walk. Examples\n\nInput\n6 2 -5\n\nOutput\n3\n\nInput\n5 1 3\n\nOutput\n4\n\nInput\n3 2 7\n\nOutput\n3\n\nNote\nThe first example is illustrated by the picture in the statements.","186":"A. Little Artem and Presents time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Artem got n stones on his birthday and now wants to give some of them to Masha. He knows that Masha cares more about the fact of receiving the present, rather than the value of that present, so he wants to give her stones as many times as possible. However, Masha remembers the last present she received, so Artem can't give her the same number of stones twice in a row. For example, he can give her 3 stones, then 1 stone, then again 3 stones, but he can't give her 3 stones and then again 3 stones right after that. How many times can Artem give presents to Masha?\n\nInput\nThe only line of the input contains a single integer n ( 1 \u2264 n \u2264 10 9 ) \u2014 number of stones Artem received on his birthday.\n\nOutput\nPrint the maximum possible number of times Artem can give presents to Masha. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n2\n\nOutput\n1\n\nInput\n3\n\nOutput\n2\n\nInput\n4\n\nOutput\n3\n\nNote\nIn the first sample, Artem can only give 1 stone to Masha. In the second sample, Atrem can give Masha 1 or 2 stones, though he can't give her 1 stone two times. In the third sample, Atrem can first give Masha 2 stones, a then 1 more stone. In the fourth sample, Atrem can first give Masha 1 stone, then 2 stones, and finally 1 stone again.","193":"A. Holidays time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output On the planet Mars a year lasts exactly n days (there are no leap years on Mars). But Martians have the same weeks as earthlings \u2014 5 work days and then 2 days off. Your task is to determine the minimum possible and the maximum possible number of days off per year on Mars.\n\nInput\nThe first line of the input contains a positive integer n ( 1 \u2264 n \u2264 1 000 000 ) \u2014 the number of days in a year on Mars.\n\nOutput\nPrint two integers \u2014 the minimum possible and the maximum possible number of days off per year on Mars. Examples\n\nInput\n14\n\nOutput\n4 4\n\nInput\n2\n\nOutput\n0 2\n\nNote\nIn the first sample there are 14 days in a year on Mars, and therefore independently of the day a year starts with there will be exactly 4 days off . In the second sample there are only 2 days in a year on Mars, and they can both be either work days or days off.","197":"A. Summer Camp time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Every year, hundreds of people come to summer camps, they learn new algorithms and solve hard problems. This is your first year at summer camp, and you are asked to solve the following problem. All integers starting with 1 are written in one line. The prefix of these line is \" 123456789101112131415... \". Your task is to print the n -th digit of this string (digits are numbered starting with 1 .\n\nInput\nThe only line of the input contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the position of the digit you need to print.\n\nOutput\nPrint the n -th digit of the line. Examples\n\nInput\n3\n\nOutput\n3\n\nInput\n11\n\nOutput\n0\n\nNote\nIn the first sample the digit at position 3 is ' 3 ', as both integers 1 and 2 consist on one digit. In the second sample, the digit at position 11 is ' 0 ', it belongs to the integer 10 .","227":"D. Iterated Linear Function time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Consider a linear function f ( x ) = Ax + B . Let's define g (0) ( x ) = x and g ( n ) ( x ) = f ( g ( n - 1) ( x )) for n > 0 . For the given integer values A , B , n and x find the value of g ( n ) ( x ) modulo 10 9 + 7 .\n\nInput\nThe only line contains four integers A , B , n and x ( 1 \u2264 A , B , x \u2264 10 9 , 1 \u2264 n \u2264 10 18 ) \u2014 the parameters from the problem statement.\n\nNote\nthat the given value n can be too large, so you should use 64 -bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.\n\nOutput\nPrint the only integer s \u2014 the value g ( n ) ( x ) modulo 10 9 + 7 . Examples\n\nInput\n3 4 1 1\n\nOutput\n7\n\nInput\n3 4 2 1\n\nOutput\n25\n\nInput\n3 4 3 1\n\nOutput\n79","237":"A1. Collective Mindsets (easy) time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Tonight is brain dinner night and all zombies will gather together to scarf down some delicious brains. The artful Heidi plans to crash the party, incognito, disguised as one of them. Her objective is to get away with at least one brain, so she can analyze the zombies' mindset back home and gain a strategic advantage. They will be N guests tonight: N - 1 real zombies and a fake one, our Heidi. The living-dead love hierarchies as much as they love brains: each one has a unique rank in the range 1 to N - 1 , and Heidi, who still appears slightly different from the others, is attributed the highest rank, N . Tonight there will be a chest with brains on display and every attendee sees how many there are. These will then be split among the attendees according to the following procedure: The zombie of the highest rank makes a suggestion on who gets how many brains (every brain is an indivisible entity). A vote follows. If at least half of the attendees accept the offer, the brains are shared in the suggested way and the feast begins. But if majority is not reached, then the highest-ranked zombie is killed, and the next zombie in hierarchy has to make a suggestion. If he is killed too, then the third highest-ranked makes one, etc. (It's enough to have exactly half of the votes \u2013 in case of a tie, the vote of the highest-ranked alive zombie counts twice, and he will of course vote in favor of his own suggestion in order to stay alive.) You should know that zombies are very greedy and sly, and they know this too \u2013 basically all zombie brains are alike. Consequently, a zombie will never accept an offer which is suboptimal for him. That is, if an offer is not strictly better than a potential later offer, he will vote against it. And make no mistake: while zombies may normally seem rather dull, tonight their intellects are perfect. Each zombie's priorities for tonight are, in descending order: survive the event (they experienced death already once and know it is no fun), get as many brains as possible. Heidi goes first and must make an offer which at least half of the attendees will accept, and which allocates at least one brain for Heidi herself. What is the smallest number of brains that have to be in the chest for this to be possible?\n\nInput\nThe only line of input contains one integer: N , the number of attendees ( 1 \u2264 N \u2264 10 9 ).\n\nOutput\nOutput one integer: the smallest number of brains in the chest which allows Heidi to take one brain home. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n4\n\nOutput\n2 Note","248":"A. As Fast As Possible time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output On vacations n pupils decided to go on excursion and gather all together. They need to overcome the path with the length l meters. Each of the pupils will go with the speed equal to v 1 . To get to the excursion quickly, it was decided to rent a bus, which has seats for k people (it means that it can't fit more than k people at the same time) and the speed equal to v 2 . In order to avoid seasick, each of the pupils want to get into the bus no more than once . Determine the minimum time required for all n pupils to reach the place of excursion. Consider that the embarkation and disembarkation of passengers, as well as the reversal of the bus, take place immediately and this time can be neglected.\n\nInput\nThe first line of the input contains five positive integers n , l , v 1 , v 2 and k ( 1 \u2264 n \u2264 10 000 , 1 \u2264 l \u2264 10 9 , 1 \u2264 v 1 < v 2 \u2264 10 9 , 1 \u2264 k \u2264 n ) \u2014 the number of pupils, the distance from meeting to the place of excursion, the speed of each pupil, the speed of bus and the number of seats in the bus.\n\nOutput\nPrint the real number \u2014 the minimum time in which all pupils can reach the place of excursion. Your answer will be considered correct if its absolute or relative error won't exceed 10 - 6 . Examples\n\nInput\n5 10 1 2 5\n\nOutput\n5.0000000000\n\nInput\n3 6 1 2 1\n\nOutput\n4.7142857143\n\nNote\nIn the first sample we should immediately put all five pupils to the bus. The speed of the bus equals 2 and the distance is equal to 10 , so the pupils will reach the place of excursion in time 10 \/ 2 = 5 .","269":"C. Pythagorean Triples time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Katya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples . For example, triples (3, 4, 5) , (5, 12, 13) and (6, 8, 10) are Pythagorean triples. Here Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length?\n\nNote\nthat the side which length is specified can be a cathetus as well as hypotenuse. Katya had no problems with completing this task. Will you do the same?\n\nInput\nThe only line of the input contains single integer n ( 1 \u2264 n \u2264 10 9 ) \u2014 the length of some side of a right triangle.\n\nOutput\nPrint two integers m and k ( 1 \u2264 m , k \u2264 10 18 ), such that n , m and k form a Pythagorean triple, in the only line. In case if there is no any Pythagorean triple containing integer n , print - 1 in the only line. If there are many answers, print any of them. Examples\n\nInput\n3\n\nOutput\n4 5\n\nInput\n6\n\nOutput\n8 10\n\nInput\n1\n\nOutput\n-1\n\nInput\n17\n\nOutput\n144 145\n\nInput\n67\n\nOutput\n2244 2245\n\nNote\nIllustration for the first sample.","278":"A. King Moves time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The only king stands on the standard chess board. You are given his position in format \" cd \", where c is the column from 'a' to 'h' and d is the row from '1' to '8'. Find the number of moves permitted for the king. Check the king's moves here https:\/\/en.wikipedia.org\/wiki\/King_(chess) . King moves from the position e4\n\nInput\nThe only line contains the king's position in the format \" cd \", where 'c' is the column from 'a' to 'h' and 'd' is the row from '1' to '8'.\n\nOutput\nPrint the only integer x \u2014 the number of moves permitted for the king. Example\n\nInput\ne4\n\nOutput\n8","284":"A. Meeting of Old Friends time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Today an outstanding event is going to happen in the forest \u2014 hedgehog Filya will come to his old fried Sonya! Sonya is an owl and she sleeps during the day and stay awake from minute l 1 to minute r 1 inclusive. Also, during the minute k she prinks and is unavailable for Filya. Filya works a lot and he plans to visit Sonya from minute l 2 to minute r 2 inclusive. Calculate the number of minutes they will be able to spend together.\n\nInput\nThe only line of the input contains integers l 1 , r 1 , l 2 , r 2 and k ( 1 \u2264 l 1 , r 1 , l 2 , r 2 , k \u2264 10 18 , l 1 \u2264 r 1 , l 2 \u2264 r 2 ), providing the segments of time for Sonya and Filya and the moment of time when Sonya prinks.\n\nOutput\nPrint one integer \u2014 the number of minutes Sonya and Filya will be able to spend together. Examples\n\nInput\n1 10 9 20 1\n\nOutput\n2\n\nInput\n1 100 50 200 75\n\nOutput\n50\n\nNote\nIn the first sample, they will be together during minutes 9 and 10 . In the second sample, they will be together from minute 50 to minute 74 and from minute 76 to minute 100 .","301":"A. The New Year: Meeting Friends time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There are three friend living on the straight line Ox in Lineland. The first friend lives at the point x 1 , the second friend lives at the point x 2 , and the third friend lives at the point x 3 . They plan to celebrate the New Year together, so they need to meet at one point. What is the minimum total distance they have to travel in order to meet at some point and celebrate the New Year? It's guaranteed that the optimal answer is always integer.\n\nInput\nThe first line of the input contains three distinct integers x 1 , x 2 and x 3 ( 1 \u2264 x 1 , x 2 , x 3 \u2264 100 ) \u2014 the coordinates of the houses of the first, the second and the third friends respectively.\n\nOutput\nPrint one integer \u2014 the minimum total distance the friends need to travel in order to meet together. Examples\n\nInput\n7 1 4\n\nOutput\n6\n\nInput\n30 20 10\n\nOutput\n20\n\nNote\nIn the first sample, friends should meet at the point 4 . Thus, the first friend has to travel the distance of 3 (from the point 7 to the point 4 ), the second friend also has to travel the distance of 3 (from the point 1 to the point 4 ), while the third friend should not go anywhere because he lives at the point 4 .","307":"A. Checking the Calendar time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given names of two days of the week. Please, determine whether it is possible that during some non-leap year the first day of some month was equal to the first day of the week you are given, while the first day of the next month was equal to the second day of the week you are given. Both months should belong to one year . In this problem, we consider the Gregorian calendar to be used. The number of months in this calendar is equal to 12. The number of days in months during any non-leap year is: 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 . Names of the days of the week are given with lowercase English letters: \" monday \", \" tuesday \", \" wednesday \", \" thursday \", \" friday \", \" saturday \", \" sunday \".\n\nInput\nThe input consists of two lines, each of them containing the name of exactly one day of the week. It's guaranteed that each string in the input is from the set \" monday \", \" tuesday \", \" wednesday \", \" thursday \", \" friday \", \" saturday \", \" sunday \".\n\nOutput\nPrint \" YES \" (without quotes) if such situation is possible during some non-leap year. Otherwise, print \" NO \" (without quotes). Examples\n\nInput\nmonday tuesday\n\nOutput\nNO\n\nInput\nsunday sunday\n\nOutput\nYES\n\nInput\nsaturday tuesday\n\nOutput\nYES\n\nNote\nIn the second sample, one can consider February 1 and March 1 of year 2015. Both these days were Sundays. In the third sample, one can consider July 1 and August 1 of year 2017. First of these two days is Saturday, while the second one is Tuesday.","376":"A. Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There exists an island called Arpa\u2019s land, some beautiful girls live there, as ugly ones do. Mehrdad wants to become minister of Arpa\u2019s land. Arpa has prepared an exam. Exam has only one question, given n , print the last digit of 1378 n . Mehrdad has become quite confused and wants you to help him. Please help, although it's a naive cheat.\n\nInput\nThe single line of input contains one integer n ( 0 \u2264 n \u2264 10 9 ).\n\nOutput\nPrint single integer \u2014 the last digit of 1378 n . Examples\n\nInput\n1\n\nOutput\n8\n\nInput\n2\n\nOutput\n4\n\nNote\nIn the first example, last digit of 1378 1 = 1378 is 8 . In the second example, last digit of 1378 2 = 1378\u00b71378 = 1898884 is 4 .","379":"A. Compote time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Nikolay has a lemons, b apples and c pears. He decided to cook a compote. According to the recipe the fruits should be in the ratio 1: 2: 4 . It means that for each lemon in the compote should be exactly 2 apples and exactly 4 pears. You can't crumble up, break up or cut these fruits into pieces. These fruits \u2014 lemons, apples and pears \u2014 should be put in the compote as whole fruits. Your task is to determine the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. It is possible that Nikolay can't use any fruits, in this case print 0 .\n\nInput\nThe first line contains the positive integer a ( 1 \u2264 a \u2264 1000 ) \u2014 the number of lemons Nikolay has. The second line contains the positive integer b ( 1 \u2264 b \u2264 1000 ) \u2014 the number of apples Nikolay has. The third line contains the positive integer c ( 1 \u2264 c \u2264 1000 ) \u2014 the number of pears Nikolay has.\n\nOutput\nPrint the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. Examples\n\nInput\n2 5 7\n\nOutput\n7\n\nInput\n4 7 13\n\nOutput\n21\n\nInput\n2 3 2\n\nOutput\n0\n\nNote\nIn the first example Nikolay can use 1 lemon, 2 apples and 4 pears, so the answer is 1 + 2 + 4 = 7 . In the second example Nikolay can use 3 lemons, 6 apples and 12 pears, so the answer is 3 + 6 + 12 = 21 . In the third example Nikolay don't have enough pears to cook any compote, so the answer is 0 .","385":"C. Tram time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The tram in Berland goes along a straight line from the point 0 to the point s and back, passing 1 meter per t 1 seconds in both directions. It means that the tram is always in the state of uniform rectilinear motion, instantly turning around at points x = 0 and x = s . Igor is at the point x 1 . He should reach the point x 2 . Igor passes 1 meter per t 2 seconds. Your task is to determine the minimum time Igor needs to get from the point x 1 to the point x 2 , if it is known where the tram is and in what direction it goes at the moment Igor comes to the point x 1 . Igor can enter the tram unlimited number of times at any moment when his and the tram's positions coincide. It is not obligatory that points in which Igor enter and exit the tram are integers. Assume that any boarding and unboarding happens instantly. Igor can move arbitrary along the line (but not faster than 1 meter per t 2 seconds). He can also stand at some point for some time.\n\nInput\nThe first line contains three integers s , x 1 and x 2 ( 2 \u2264 s \u2264 1000 , 0 \u2264 x 1 , x 2 \u2264 s , x 1 \u2260 x 2 ) \u2014 the maximum coordinate of the point to which the tram goes, the point Igor is at, and the point he should come to. The second line contains two integers t 1 and t 2 ( 1 \u2264 t 1 , t 2 \u2264 1000 ) \u2014 the time in seconds in which the tram passes 1 meter and the time in seconds in which Igor passes 1 meter. The third line contains two integers p and d ( 1 \u2264 p \u2264 s - 1 , d is either 1 or ) \u2014 the position of the tram in the moment Igor came to the point x 1 and the direction of the tram at this moment. If , the tram goes in the direction from the point s to the point 0 . If d = 1 , the tram goes in the direction from the point 0 to the point s .\n\nOutput\nPrint the minimum time in seconds which Igor needs to get from the point x 1 to the point x 2 . Examples\n\nInput\n4 2 4 3 4 1 1\n\nOutput\n8\n\nInput\n5 4 0 1 2 3 1\n\nOutput\n7\n\nNote\nIn the first example it is profitable for Igor to go by foot and not to wait the tram. Thus, he has to pass 2 meters and it takes 8 seconds in total, because he passes 1 meter per 4 seconds. In the second example Igor can, for example, go towards the point x 2 and get to the point 1 in 6 seconds (because he has to pass 3 meters, but he passes 1 meters per 2 seconds). At that moment the tram will be at the point 1 , so Igor can enter the tram and pass 1 meter in 1 second. Thus, Igor will reach the point x 2 in 7 seconds in total.","398":"A. Santa Claus and a Place in a Class time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Santa Claus is the first who came to the Christmas Olympiad, and he is going to be the first to take his place at a desk! In the classroom there are n lanes of m desks each, and there are two working places at each of the desks. The lanes are numbered from 1 to n from the left to the right, the desks in a lane are numbered from 1 to m starting from the blackboard.\n\nNote\nthat the lanes go perpendicularly to the blackboard, not along it (see picture). The organizers numbered all the working places from 1 to 2 nm . The places are numbered by lanes (i. e. all the places of the first lane go first, then all the places of the second lane, and so on), in a lane the places are numbered starting from the nearest to the blackboard (i. e. from the first desk in the lane), at each desk, the place on the left is numbered before the place on the right. The picture illustrates the first and the second samples. Santa Clause knows that his place has number k . Help him to determine at which lane at which desk he should sit, and whether his place is on the left or on the right!\n\nInput\nThe only line contains three integers n , m and k ( 1 \u2264 n , m \u2264 10 000 , 1 \u2264 k \u2264 2 nm ) \u2014 the number of lanes, the number of desks in each lane and the number of Santa Claus' place.\n\nOutput\nPrint two integers: the number of lane r , the number of desk d , and a character s , which stands for the side of the desk Santa Claus. The character s should be \" L \", if Santa Clause should sit on the left, and \" R \" if his place is on the right. Examples\n\nInput\n4 3 9\n\nOutput\n2 2 L\n\nInput\n4 3 24\n\nOutput\n4 3 R\n\nInput\n2 4 4\n\nOutput\n1 2 R\n\nNote\nThe first and the second samples are shown on the picture. The green place corresponds to Santa Claus' place in the first example, the blue place corresponds to Santa Claus' place in the second example. In the third sample there are two lanes with four desks in each, and Santa Claus has the fourth place. Thus, his place is in the first lane at the second desk on the right.","427":"A. Petr and a calendar time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petr wants to make a calendar for current month. For this purpose he draws a table in which columns correspond to weeks (a week is seven consequent days from Monday to Sunday), rows correspond to weekdays, and cells contain dates. For example, a calendar for January 2017 should look like on the picture: Petr wants to know how many columns his table should have given the month and the weekday of the first date of that month? Assume that the year is non-leap.\n\nInput\nThe only line contain two integers m and d ( 1 \u2264 m \u2264 12 , 1 \u2264 d \u2264 7 ) \u2014 the number of month (January is the first month, December is the twelfth) and the weekday of the first date of this month ( 1 is Monday, 7 is Sunday).\n\nOutput\nPrint single integer: the number of columns the table should have. Examples\n\nInput\n1 7\n\nOutput\n6\n\nInput\n1 1\n\nOutput\n5\n\nInput\n11 6\n\nOutput\n5\n\nNote\nThe first example corresponds to the January 2017 shown on the picture in the statements. In the second example 1 -st January is Monday, so the whole month fits into 5 columns. In the third example 1 -st November is Saturday and 5 columns is enough.","433":"A. Dasha and Stairs time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output On her way to programming school tiger Dasha faced her first test \u2014 a huge staircase! The steps were numbered from one to infinity. As we know, tigers are very fond of all striped things, it is possible that it has something to do with their color. So on some interval of her way she calculated two values \u2014 the number of steps with even and odd numbers. You need to check whether there is an interval of steps from the l -th to the r -th (1 \u2264 l \u2264 r ) , for which values that Dasha has found are correct.\n\nInput\nIn the only line you are given two integers a , b (0 \u2264 a , b \u2264 100) \u2014 the number of even and odd steps, accordingly.\n\nOutput\nIn the only line print \" YES \", if the interval of steps described above exists, and \" NO \" otherwise. Examples\n\nInput\n2 3\n\nOutput\nYES\n\nInput\n3 1\n\nOutput\nNO\n\nNote\nIn the first example one of suitable intervals is from 1 to 5 . The interval contains two even steps \u2014 2 and 4 , and three odd: 1 , 3 and 5 .","438":"A. Theatre Square time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Theatre Square in the capital city of Berland has a rectangular shape with the size n \u00d7 m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a \u00d7 a . What is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.\n\nInput\nThe input contains three positive integer numbers in the first line: n , m and a ( 1 \u2264 n , m , a \u2264 10 9 ).\n\nOutput\nWrite the needed number of flagstones. Examples\n\nInput\n6 6 4\n\nOutput\n4","457":"A. Blackjack time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One rainy gloomy evening when all modules hid in the nearby cafes to drink hot energetic cocktails, the Hexadecimal virus decided to fly over the Mainframe to look for a Great Idea. And she has found one! Why not make her own Codeforces, with blackjack and other really cool stuff? Many people will surely be willing to visit this splendid shrine of high culture. In Mainframe a standard pack of 52 cards is used to play blackjack. The pack contains cards of 13 values: 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , jacks, queens, kings and aces. Each value also exists in one of four suits: hearts, diamonds, clubs and spades. Also, each card earns some value in points assigned to it: cards with value from two to ten earn from 2 to 10 points, correspondingly. An ace can either earn 1 or 11 , whatever the player wishes. The picture cards (king, queen and jack) earn 10 points. The number of points a card earns does not depend on the suit. The rules of the game are very simple. The player gets two cards, if the sum of points of those cards equals n , then the player wins, otherwise the player loses. The player has already got the first card, it's the queen of spades. To evaluate chances for victory, you should determine how many ways there are to get the second card so that the sum of points exactly equals n .\n\nInput\nThe only line contains n ( 1 \u2264 n \u2264 25 ) \u2014 the required sum of points.\n\nOutput\nPrint the numbers of ways to get the second card in the required way if the first card is the queen of spades. Examples\n\nInput\n12\n\nOutput\n4\n\nInput\n20\n\nOutput\n15\n\nInput\n10\n\nOutput\n0\n\nNote\nIn the first sample only four two's of different suits can earn the required sum of points. In the second sample we can use all tens, jacks, queens and kings; overall it's 15 cards, as the queen of spades (as any other card) is only present once in the pack of cards and it's already in use. In the third sample there is no card, that would add a zero to the current ten points.","480":"A. Card Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There is a card game called \"Durak\", which means \"Fool\" in Russian. The game is quite popular in the countries that used to form USSR. The problem does not state all the game's rules explicitly \u2014 you can find them later yourselves if you want. To play durak you need a pack of 36 cards. Each card has a suit (\" S \", \" H \", \" D \" and \" C \") and a rank (in the increasing order \" 6 \", \" 7 \", \" 8 \", \" 9 \", \" T \", \" J \", \" Q \", \" K \" and \" A \"). At the beginning of the game one suit is arbitrarily chosen as trump. The players move like that: one player puts one or several of his cards on the table and the other one should beat each of them with his cards. A card beats another one if both cards have similar suits and the first card has a higher rank then the second one. Besides, a trump card can beat any non-trump card whatever the cards\u2019 ranks are. In all other cases you can not beat the second card with the first one. You are given the trump suit and two different cards. Determine whether the first one beats the second one or not.\n\nInput\nThe first line contains the tramp suit. It is \" S \", \" H \", \" D \" or \" C \". The second line contains the description of the two different cards. Each card is described by one word consisting of two symbols. The first symbol stands for the rank (\" 6 \", \" 7 \", \" 8 \", \" 9 \", \" T \", \" J \", \" Q \", \" K \" and \" A \"), and the second one stands for the suit (\" S \", \" H \", \" D \" and \" C \").\n\nOutput\nPrint \" YES \" (without the quotes) if the first cards beats the second one. Otherwise, print \" NO \" (also without the quotes). Examples\n\nInput\nH QH 9S\n\nOutput\nYES\n\nInput\nS 8D 6D\n\nOutput\nYES\n\nInput\nC 7H AS\n\nOutput\nNO","486":"A. Palindromic Times time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Tattah is asleep if and only if Tattah is attending a lecture. This is a well-known formula among Tattah's colleagues. On a Wednesday afternoon, Tattah was attending Professor HH's lecture. At 12:21 , right before falling asleep, he was staring at the digital watch around Saher's wrist. He noticed that the digits on the clock were the same when read from both directions i.e. a palindrome. In his sleep, he started dreaming about such rare moments of the day when the time displayed on a digital clock is a palindrome. As soon as he woke up, he felt destined to write a program that finds the next such moment. However, he still hasn't mastered the skill of programming while sleeping, so your task is to help him.\n\nInput\nThe first and only line of the input starts with a string with the format \" HH:MM \" where \" HH \" is from \" 00 \" to \" 23 \" and \" MM \" is from \" 00 \" to \" 59 \". Both \" HH \" and \" MM \" have exactly two digits.\n\nOutput\nPrint the palindromic time of day that comes soonest after the time given in the input. If the input time is palindromic, output the soonest palindromic time after the input time. Examples\n\nInput\n12:21\n\nOutput\n13:31\n\nInput\n23:59\n\nOutput\n00:00","531":"A. Petya and Strings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya loves presents. His mum bought him two strings of the same size for his birthday. The strings consist of uppercase and lowercase Latin letters. Now Petya wants to compare those two strings lexicographically . The letters' case does not matter, that is an uppercase letter is considered equivalent to the corresponding lowercase letter. Help Petya perform the comparison.\n\nInput\nEach of the first two lines contains a bought string. The strings' lengths range from 1 to 100 inclusive. It is guaranteed that the strings are of the same length and also consist of uppercase and lowercase Latin letters.\n\nOutput\nIf the first string is less than the second one, print \"-1\". If the second string is less than the first one, print \"1\". If the strings are equal, print \"0\".\n\nNote\nthat the letters' case is not taken into consideration when the strings are compared. Examples\n\nInput\naaaa aaaA\n\nOutput\n0\n\nInput\nabs Abz\n\nOutput\n-1\n\nInput\nabcdefg AbCdEfF\n\nOutput\n1\n\nNote\nIf you want more formal information about the lexicographical order (also known as the \" dictionary order \" or \" alphabetical order \"), you can visit the following site: http:\/\/en.wikipedia.org\/wiki\/Lexicographical_order","605":"A. Elevator time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt A sky scraper with 1000 floors has been built in the city of N. It has modern superfast elevators to help to travel from one floor to another. Each elevator has two doors, the front one and the back one. If one goes in through the front door, he goes out through the back one and vice versa. The elevator has two rails numbered with numbers 1 and 2. Rail 1 is located to the left of the entrance to the front door (or correspondingly, to the right of the entrance to the back door). Rail 2 is located opposite it, to the right of the entrance to the front door and to the left of the entrance to the back door. We know that each person in the city of N holds at a rail with the strongest hand. One day a VIP person visited the city and of course, he took a look at the skyscraper and took a ride in the elevator. We know the door through which he entered and the rail he was holding at. Now we need to determine as soon as possible whether he is left-handed or right-handed.\n\nInput\nThe first line indicates the door through which the very important person entered the elevator. It contains \"front\" if the person enters the elevator through the front door and \"back\" if he entered the elevator through the back door. The second line contains integer a ( 1 \u2264 a \u2264 2 ) which denotes the number of the rail at which the person was holding.\n\nOutput\nPrint character \"R\" if the VIP is right-handed or \"L\" if he is left-handed. Examples\n\nInput\nfront 1\n\nOutput\nL","628":"A. Lucky Division time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Petya calls a number almost lucky if it could be evenly divided by some lucky number. Help him find out if the given number n is almost lucky.\n\nInput\nThe single line contains an integer n (1 \u2264 n \u2264 1000) \u2014 the number that needs to be checked.\n\nOutput\nIn the only line print \" YES \" (without the quotes), if number n is almost lucky. Otherwise, print \" NO \" (without the quotes). Examples\n\nInput\n47\n\nOutput\nYES\n\nInput\n16\n\nOutput\nYES\n\nInput\n78\n\nOutput\nNO\n\nNote\nNote that all lucky numbers are almost lucky as any number is evenly divisible by itself. In the first sample 47 is a lucky number. In the second sample 16 is divisible by 4 .","640":"A. The number of positions time limit per test 0.5 second memory limit per test 256 megabytes input standard input output standard output Petr stands in line of n people, but he doesn't know exactly which position he occupies. He can say that there are no less than a people standing in front of him and no more than b people standing behind him. Find the number of different positions Petr can occupy.\n\nInput\nThe only line contains three integers n , a and b ( 0 \u2264 a , b < n \u2264 100 ).\n\nOutput\nPrint the single number \u2014 the number of the sought positions. Examples\n\nInput\n3 1 1\n\nOutput\n2\n\nInput\n5 2 3\n\nOutput\n3\n\nNote\nThe possible positions in the first sample are: 2 and 3 (if we number the positions starting with 1). In the second sample they are 3, 4 and 5.","653":"A. Measuring Lengths in Baden time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Lengths are measures in Baden in inches and feet. To a length from centimeters it is enough to know that an inch equals three centimeters in Baden and one foot contains 12 inches. You are given a length equal to n centimeters. Your task is to convert it to feet and inches so that the number of feet was maximum. The result should be an integer rounded to the closest value containing an integral number of inches.\n\nNote\nthat when you round up, 1 cm rounds up to 0 inches and 2 cm round up to 1 inch.\n\nInput\nThe only line contains an integer n ( 1 \u2264 n \u2264 10000 ).\n\nOutput\nPrint two non-negative space-separated integers a and b , where a is the numbers of feet and b is the number of inches. Examples\n\nInput\n42\n\nOutput\n1 2\n\nInput\n5\n\nOutput\n0 2","674":"A. HQ9+ time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output HQ9+ is a joke programming language which has only four one-character instructions: \" H \" prints \" Hello, World! \", \" Q \" prints the source code of the program itself, \" 9 \" prints the lyrics of \"99 Bottles of Beer\" song, \" + \" increments the value stored in the internal accumulator. Instructions \" H \" and \" Q \" are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored. You are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.\n\nInput\nThe input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.\n\nOutput\nOutput \" YES \", if executing the program will produce any output, and \" NO \" otherwise. Examples\n\nInput\nHi!\n\nOutput\nYES\n\nInput\nCodeforces\n\nOutput\nNO\n\nNote\nIn the first case the program contains only one instruction \u2014 \" H \", which prints \" Hello, World! \". In the second case none of the program characters are language instructions.","757":"A. Soft Drinking time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output This winter is so cold in Nvodsk! A group of n friends decided to buy k bottles of a soft drink called \"Take-It-Light\" to warm up a bit. Each bottle has l milliliters of the drink. Also they bought c limes and cut each of them into d slices. After that they found p grams of salt. To make a toast, each friend needs nl milliliters of the drink, a slice of lime and np grams of salt. The friends want to make as many toasts as they can, provided they all drink the same amount. How many toasts can each friend make?\n\nInput\nThe first and only line contains positive integers n , k , l , c , d , p , nl , np , not exceeding 1000 and no less than 1 . The numbers are separated by exactly one space.\n\nOutput\nPrint a single integer \u2014 the number of toasts each friend can make. Examples\n\nInput\n3 4 5 10 8 100 3 1\n\nOutput\n2\n\nInput\n5 100 10 1 19 90 4 3\n\nOutput\n3\n\nInput\n10 1000 1000 25 23 1 50 1\n\nOutput\n0\n\nNote\nA comment to the first sample: Overall the friends have 4 * 5 = 20 milliliters of the drink, it is enough to make 20 \/ 3 = 6 toasts. The limes are enough for 10 * 8 = 80 toasts and the salt is enough for 100 \/ 1 = 100 toasts. However, there are 3 friends in the group, so the answer is min (6, 80, 100) \/ 3 = 2 .","834":"A. Wizards and Demonstration time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Some country is populated by wizards. They want to organize a demonstration. There are n people living in the city, x of them are the wizards who will surely go to the demonstration. Other city people ( n - x people) do not support the wizards and aren't going to go to the demonstration. We know that the city administration will react only to the demonstration involving at least y percent of the city people. Having considered the matter, the wizards decided to create clone puppets which can substitute the city people on the demonstration. So all in all, the demonstration will involve only the wizards and their puppets. The city administration cannot tell the difference between a puppet and a person, so, as they calculate the percentage, the administration will consider the city to be consisting of only n people and not containing any clone puppets. Help the wizards and find the minimum number of clones to create to that the demonstration had no less than y percent of the city people.\n\nInput\nThe first line contains three space-separated integers, n , x , y ( 1 \u2264 n , x , y \u2264 10 4 , x \u2264 n ) \u2014 the number of citizens in the city, the number of wizards and the percentage the administration needs, correspondingly. Please note that y can exceed 100 percent, that is, the administration wants to see on a demonstration more people that actually live in the city ( > n ).\n\nOutput\nPrint a single integer \u2014 the answer to the problem, the minimum number of clones to create, so that the demonstration involved no less than y percent of n (the real total city population). Examples\n\nInput\n10 1 14\n\nOutput\n1\n\nInput\n20 10 50\n\nOutput\n0\n\nInput\n1000 352 146\n\nOutput\n1108\n\nNote\nIn the first sample it is necessary that at least 14% of 10 people came to the demonstration. As the number of people should be integer, then at least two people should come. There is only one wizard living in the city and he is going to come. That isn't enough, so he needs to create one clone. In the second sample 10 people should come to the demonstration. The city has 10 wizards. They will all come to the demonstration, so nobody has to create any clones.","853":"B. Star time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 18257 ).\n\nOutput\nPrint a single integer output ( 1 \u2264 output \u2264 2\u00b710 9 ) . Examples\n\nInput\n2\n\nOutput\n13","857":"D. Broken checker time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output \"This problem is rubbish! There is not statement, and there are only 5 test cases. The problemsetter took liberties with this problem!\" \u2014 people complained in the comments to one round on Codeforces. And even more... No, wait, the checker for the problem was alright, that's a mercy.\n\nInput\nThe only line of the input contains an integer between 1 and 5, inclusive. All tests for this problem are different. The contents of the test case doesn't need to be equal to its index.\n\nOutput\nThe only line of the output contains an integer between 1 and 3, inclusive.\n\nExamples\nNote This problem has no samples, since there so few test cases.","871":"A. Triangle time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output At a geometry lesson Bob learnt that a triangle is called right-angled if it is nondegenerate and one of its angles is right. Bob decided to draw such a triangle immediately: on a sheet of paper he drew three points with integer coordinates, and joined them with segments of straight lines, then he showed the triangle to Peter. Peter said that Bob's triangle is not right-angled, but is almost right-angled: the triangle itself is not right-angled, but it is possible to move one of the points exactly by distance 1 so, that all the coordinates remain integer, and the triangle become right-angled. Bob asks you to help him and find out if Peter tricks him. By the given coordinates of the triangle you should find out if it is right-angled, almost right-angled, or neither of these.\n\nInput\nThe first input line contains 6 space-separated integers x 1 , y 1 , x 2 , y 2 , x 3 , y 3 \u2014 coordinates of the triangle's vertices. All the coordinates are integer and don't exceed 100 in absolute value. It's guaranteed that the triangle is nondegenerate, i.e. its total area is not zero.\n\nOutput\nIf the given triangle is right-angled, output RIGHT , if it is almost right-angled, output ALMOST , and if it is neither of these, output NEITHER . Examples\n\nInput\n0 0 2 0 0 1\n\nOutput\nRIGHT\n\nInput\n2 3 4 5 6 6\n\nOutput\nNEITHER\n\nInput\n-1 0 2 0 0 1\n\nOutput\nALMOST","916":"A. Vasya and the Bus time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Vasya heard a story: \"In the city of High Bertown a bus number 62 left from the bus station. It had n grown-ups and m kids...\" The latter events happen to be of no importance to us. Vasya is an accountant and he loves counting money. So he wondered what maximum and minimum sum of money these passengers could have paid for the ride. The bus fare equals one berland ruble in High Bertown. However, not everything is that easy \u2014 no more than one child can ride for free with each grown-up passenger. That means that a grown-up passenger who rides with his k ( k > 0) children, pays overall k rubles: a ticket for himself and ( k - 1) tickets for his children. Also, a grown-up can ride without children, in this case he only pays one ruble. We know that in High Bertown children can't ride in a bus unaccompanied by grown-ups. Help Vasya count the minimum and the maximum sum in Berland rubles, that all passengers of this bus could have paid in total.\n\nInput\nThe input file consists of a single line containing two space-separated numbers n and m (0 \u2264 n , m \u2264 10 5 ) \u2014 the number of the grown-ups and the number of the children in the bus, correspondingly.\n\nOutput\nIf n grown-ups and m children could have ridden in the bus, then print on a single line two space-separated integers \u2014 the minimum and the maximum possible total bus fare, correspondingly. Otherwise, print \" Impossible \" (without the quotes). Examples\n\nInput\n1 2\n\nOutput\n2 2\n\nInput\n0 5\n\nOutput\nImpossible\n\nInput\n2 2\n\nOutput\n2 3\n\nNote\nIn the first sample a grown-up rides with two children and pays two rubles. In the second sample there are only children in the bus, so the situation is impossible. In the third sample there are two cases: Each of the two grown-ups rides with one children and pays one ruble for the tickets. In this case the passengers pay two rubles in total. One of the grown-ups ride with two children's and pays two rubles, the another one rides alone and pays one ruble for himself. So, they pay three rubles in total.","932":"A. Exams time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day the Codeforces round author sat exams. He had n exams and he needed to get an integer from 2 to 5 for each exam. He will have to re-sit each failed exam, i.e. the exam that gets mark 2 . The author would need to spend too much time and effort to make the sum of his marks strictly more than k . That could have spoilt the Codeforces round. On the other hand, if the sum of his marks is strictly less than k , the author's mum won't be pleased at all. The Codeforces authors are very smart and they always get the mark they choose themselves. Also, the Codeforces authors just hate re-sitting exams. Help the author and find the minimum number of exams he will have to re-sit if he passes the exams in the way that makes the sum of marks for all n exams equal exactly k .\n\nInput\nThe single input line contains space-separated integers n and k ( 1 \u2264 n \u2264 50 , 1 \u2264 k \u2264 250 ) \u2014 the number of exams and the required sum of marks. It is guaranteed that there exists a way to pass n exams in the way that makes the sum of marks equal exactly k .\n\nOutput\nPrint the single number \u2014 the minimum number of exams that the author will get a 2 for, considering that the sum of marks for all exams must equal k . Examples\n\nInput\n4 8\n\nOutput\n4\n\nInput\n4 10\n\nOutput\n2\n\nInput\n1 3\n\nOutput\n0\n\nNote\nIn the first sample the author has to get a 2 for all his exams. In the second sample he should get a 3 for two exams and a 2 for two more. In the third sample he should get a 3 for one exam.","976":"A. Hexadecimal's theorem time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Recently, a chaotic virus Hexadecimal advanced a new theorem which will shake the Universe. She thinks that each Fibonacci number can be represented as sum of three not necessary different Fibonacci numbers. Let's remember how Fibonacci numbers can be calculated. F 0 = 0 , F 1 = 1 , and all the next numbers are F i = F i - 2 + F i - 1 . So, Fibonacci numbers make a sequence of numbers: 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , ... If you haven't run away from the PC in fear, you have to help the virus. Your task is to divide given Fibonacci number n by three not necessary different Fibonacci numbers or say that it is impossible.\n\nInput\nThe input contains of a single integer n (0 \u2264 n < 10 9 ) \u2014 the number that should be represented by the rules described above. It is guaranteed that n is a Fibonacci number.\n\nOutput\nOutput three required numbers: a , b and c . If there is no answer for the test you have to print \" I'm too stupid to solve this problem \" without the quotes. If there are multiple answers, print any of them. Examples\n\nInput\n3\n\nOutput\n1 1 1\n\nInput\n13\n\nOutput\n2 3 8","1061":"B. Pixels time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Flatland is inhabited by pixels of three colors: red, green and blue. We know that if two pixels of different colors meet in a violent fight, only one of them survives the fight (that is, the total number of pixels decreases by one). Besides, if pixels of colors x and y ( x \u2260 y ) meet in a violent fight, then the pixel that survives the fight immediately changes its color to z ( z \u2260 x ; z \u2260 y ) . Pixels of the same color are friends, so they don't fight. The King of Flatland knows that his land will be peaceful and prosperous when the pixels are of the same color. For each of the three colors you know the number of pixels of this color that inhabit Flatland. Help the king and determine whether fights can bring peace and prosperity to the country and if it is possible, find the minimum number of fights needed to make the land peaceful and prosperous.\n\nInput\nThe first line contains three space-separated integers a , b and c (0 \u2264 a , b , c \u2264 2 31 ; a + b + c > 0) \u2014 the number of red, green and blue pixels, correspondingly.\n\nOutput\nPrint a single number \u2014 the minimum number of pixel fights before the country becomes peaceful and prosperous. If making the country peaceful and prosperous is impossible, print -1 . Examples\n\nInput\n1 1 1\n\nOutput\n1\n\nInput\n3 1 0\n\nOutput\n3\n\nNote\nIn the first test sample the country needs only one fight to achieve peace and prosperity. Besides, it can be any fight whatsoever. For example, let's assume that the green and the blue pixels fight, then the surviving pixel will be red. As a result, after the fight there are two red pixels. There won't be other pixels. In the second sample the following sequence of fights is possible: red and blue, green and red, red and blue. As a result, after all fights there is one green pixel left.","1090":"A. Tiling with Hexagons time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Several ages ago Berland was a kingdom. The King of Berland adored math. That's why, when he first visited one of his many palaces, he first of all paid attention to the floor in one hall. The floor was tiled with hexagonal tiles. The hall also turned out hexagonal in its shape. The King walked along the perimeter of the hall and concluded that each of the six sides has a , b , c , a , b and c adjacent tiles, correspondingly. To better visualize the situation, look at the picture showing a similar hexagon for a = 2 , b = 3 and c = 4 . According to the legend, as the King of Berland obtained the values a , b and c , he almost immediately calculated the total number of tiles on the hall floor. Can you do the same?\n\nInput\nThe first line contains three integers: a , b and c ( 2 \u2264 a , b , c \u2264 1000 ).\n\nOutput\nPrint a single number \u2014 the total number of tiles on the hall floor. Examples\n\nInput\n2 3 4\n\nOutput\n18","1152":"A. Parallelepiped time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You've got a rectangular parallelepiped with integer edge lengths. You know the areas of its three faces that have a common vertex. Your task is to find the sum of lengths of all 12 edges of this parallelepiped.\n\nInput\nThe first and the single line contains three space-separated integers \u2014 the areas of the parallelepiped's faces. The area's values are positive ( > 0) and do not exceed 10 4 . It is guaranteed that there exists at least one parallelepiped that satisfies the problem statement.\n\nOutput\nPrint a single number \u2014 the sum of all edges of the parallelepiped. Examples\n\nInput\n1 1 1\n\nOutput\n12\n\nInput\n4 6 6\n\nOutput\n28\n\nNote\nIn the first sample the parallelepiped has sizes 1 \u00d7 1 \u00d7 1 , in the second one \u2014 2 \u00d7 2 \u00d7 3 .","1166":"A. Is your horseshoe on the other hoof? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Valera the Horse is going to the party with friends. He has been following the fashion trends for a while, and he knows that it is very popular to wear all horseshoes of different color. Valera has got four horseshoes left from the last year, but maybe some of them have the same color. In this case he needs to go to the store and buy some few more horseshoes, not to lose face in front of his stylish comrades. Fortunately, the store sells horseshoes of all colors under the sun and Valera has enough money to buy any four of them. However, in order to save the money, he would like to spend as little money as possible, so you need to help Valera and determine what is the minimum number of horseshoes he needs to buy to wear four horseshoes of different colors to a party.\n\nInput\nThe first line contains four space-separated integers s 1 , s 2 , s 3 , s 4 (1 \u2264 s 1 , s 2 , s 3 , s 4 \u2264 10 9 ) \u2014 the colors of horseshoes Valera has. Consider all possible colors indexed with integers.\n\nOutput\nPrint a single integer \u2014 the minimum number of horseshoes Valera needs to buy. Examples\n\nInput\n1 7 3 3\n\nOutput\n1\n\nInput\n7 7 7 7\n\nOutput\n3","1347":"B. Little Elephant and Magic Square time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Elephant loves magic squares very much. A magic square is a 3 \u00d7 3 table, each cell contains some positive integer. At that the sums of integers in all rows, columns and diagonals of the table are equal. The figure below shows the magic square, the sum of integers in all its rows, columns and diagonals equals 15. The Little Elephant remembered one magic square. He started writing this square on a piece of paper, but as he wrote, he forgot all three elements of the main diagonal of the magic square. Fortunately, the Little Elephant clearly remembered that all elements of the magic square did not exceed 10 5 . Help the Little Elephant, restore the original magic square, given the Elephant's notes.\n\nInput\nThe first three lines of the input contain the Little Elephant's notes. The first line contains elements of the first row of the magic square. The second line contains the elements of the second row, the third line is for the third row. The main diagonal elements that have been forgotten by the Elephant are represented by zeroes. It is guaranteed that the notes contain exactly three zeroes and they are all located on the main diagonal. It is guaranteed that all positive numbers in the table do not exceed 10 5 .\n\nOutput\nPrint three lines, in each line print three integers \u2014 the Little Elephant's magic square. If there are multiple magic squares, you are allowed to print any of them.\n\nNote\nthat all numbers you print must be positive and not exceed 10 5 . It is guaranteed that there exists at least one magic square that meets the conditions. Examples\n\nInput\n0 1 1 1 0 1 1 1 0\n\nOutput\n1 1 1 1 1 1 1 1 1\n\nInput\n0 3 6 5 0 5 4 7 0\n\nOutput\n6 3 6 5 5 5 4 7 4","1482":"A. Word Capitalization time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Capitalization is writing a word with its first letter as a capital letter. Your task is to capitalize the given word. Note, that during capitalization all the letters except the first one remains unchanged.\n\nInput\nA single line contains a non-empty word. This word consists of lowercase and uppercase English letters. The length of the word will not exceed 10 3 .\n\nOutput\nOutput the given word after capitalization. Examples\n\nInput\nApPLe\n\nOutput\nApPLe\n\nInput\nkonjac\n\nOutput\nKonjac","1580":"B. QR code time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains two integers a 1 , a 2 ( 0 \u2264 a i \u2264 32 ), separated by a single space.\n\nOutput\nOutput a single integer. Examples\n\nInput\n1 1\n\nOutput\n0\n\nInput\n3 7\n\nOutput\n0\n\nInput\n13 10\n\nOutput\n1","1588":"A. Mysterious strings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 40 ).\n\nOutput\nOutput a single string. Examples\n\nInput\n2\n\nOutput\nAdams\n\nInput\n8\n\nOutput\nVan Buren\n\nInput\n29\n\nOutput\nHarding","1648":"A. Accounting time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A long time ago in some far country lived king Copa. After the recent king's reform, he got so large powers that started to keep the books by himself. The total income A of his kingdom during 0 -th year is known, as well as the total income B during n -th year (these numbers can be negative \u2014 it means that there was a loss in the correspondent year). King wants to show financial stability. To do this, he needs to find common coefficient X \u2014 the coefficient of income growth during one year. This coefficient should satisfy the equation: A \u00b7 X n = B . Surely, the king is not going to do this job by himself, and demands you to find such number X . It is necessary to point out that the fractional numbers are not used in kingdom's economy. That's why all input numbers as well as coefficient X must be integers. The number X may be zero or negative.\n\nInput\nThe input contains three integers A , B , n ( | A |, | B | \u2264 1000 , 1 \u2264 n \u2264 10 ).\n\nOutput\nOutput the required integer coefficient X , or \u00abNo solution\u00bb, if such a coefficient does not exist or it is fractional. If there are several possible solutions, output any of them. Examples\n\nInput\n2 18 2\n\nOutput\n3\n\nInput\n-1 8 3\n\nOutput\n-2\n\nInput\n0 0 10\n\nOutput\n5\n\nInput\n1 16 5\n\nOutput\nNo solution","1650":"B. Codeforces World Finals time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The king Copa often has been reported about the Codeforces site, which is rapidly getting more and more popular among the brightest minds of the humanity, who are using it for training and competing. Recently Copa understood that to conquer the world he needs to organize the world Codeforces tournament. He hopes that after it the brightest minds will become his subordinates, and the toughest part of conquering the world will be completed. The final round of the Codeforces World Finals 20YY is scheduled for DD . MM . YY , where DD is the day of the round, MM is the month and YY are the last two digits of the year. Bob is lucky to be the first finalist form Berland. But there is one problem: according to the rules of the competition, all participants must be at least 18 years old at the moment of the finals. Bob was born on BD . BM . BY . This date is recorded in his passport, the copy of which he has already mailed to the organizers. But Bob learned that in different countries the way, in which the dates are written, differs. For example, in the US the month is written first, then the day and finally the year. Bob wonders if it is possible to rearrange the numbers in his date of birth so that he will be at least 18 years old on the day DD . MM . YY . He can always tell that in his motherland dates are written differently. Help him. According to another strange rule, eligible participant must be born in the same century as the date of the finals. If the day of the finals is participant's 18-th birthday, he is allowed to participate. As we are considering only the years from 2001 to 2099 for the year of the finals, use the following rule: the year is leap if it's number is divisible by four.\n\nInput\nThe first line contains the date DD . MM . YY , the second line contains the date BD . BM . BY . It is guaranteed that both dates are correct, and YY and BY are always in [01;99] . It could be that by passport Bob was born after the finals. In this case, he can still change the order of numbers in date.\n\nOutput\nIf it is possible to rearrange the numbers in the date of birth so that Bob will be at least 18 years old on the DD . MM . YY , output YES . In the other case, output NO . Each number contains exactly two digits and stands for day, month or year in a date.\n\nNote\nthat it is permitted to rearrange only numbers, not digits. Examples\n\nInput\n01.01.98 01.01.80\n\nOutput\nYES\n\nInput\n20.10.20 10.02.30\n\nOutput\nNO\n\nInput\n28.02.74 28.02.64\n\nOutput\nNO","1657":"C. Flea time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output It is known that fleas in Berland can jump only vertically and horizontally, and the length of the jump is always equal to s centimeters. A flea has found herself at the center of some cell of the checked board of the size n \u00d7 m centimeters (each cell is 1 \u00d7 1 centimeters). She can jump as she wishes for an arbitrary number of times, she can even visit a cell more than once. The only restriction is that she cannot jump out of the board. The flea can count the amount of cells that she can reach from the starting position ( x , y ) . Let's denote this amount by d x , y . Your task is to find the number of such starting positions ( x , y ) , which have the maximum possible value of d x , y .\n\nInput\nThe first line contains three integers n , m , s ( 1 \u2264 n , m , s \u2264 10 6 ) \u2014 length of the board, width of the board and length of the flea's jump.\n\nOutput\nOutput the only integer \u2014 the number of the required starting positions of the flea. Examples\n\nInput\n2 3 1000000\n\nOutput\n6\n\nInput\n3 3 2\n\nOutput\n4","1711":"A. Watermelon time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output One hot summer day Pete and his friend Billy decided to buy a watermelon. They chose the biggest and the ripest one, in their opinion. After that the watermelon was weighed, and the scales showed w kilos. They rushed home, dying of thirst, and decided to divide the berry, however they faced a hard problem. Pete and Billy are great fans of even numbers, that's why they want to divide the watermelon in such a way that each of the two parts weighs even number of kilos, at the same time it is not obligatory that the parts are equal. The boys are extremely tired and want to start their meal as soon as possible, that's why you should help them and find out, if they can divide the watermelon in the way they want. For sure, each of them should get a part of positive weight.\n\nInput\nThe first (and the only) input line contains integer number w ( 1 \u2264 w \u2264 100 ) \u2014 the weight of the watermelon bought by the boys.\n\nOutput\nPrint YES , if the boys can divide the watermelon into two parts, each of them weighing even number of kilos; and NO in the opposite case. Examples\n\nInput\n8\n\nOutput\nYES\n\nNote\nFor example, the boys can divide the watermelon into two parts of 2 and 6 kilos respectively (another variant \u2014 two parts of 4 and 4 kilos).","1726":"B. Repaintings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A chessboard n \u00d7 m in size is given. During the zero minute we repaint all the black squares to the 0 color. During the i -th minute we repaint to the i color the initially black squares that have exactly four corner-adjacent squares painted i - 1 (all such squares are repainted simultaneously). This process continues ad infinitum. You have to figure out how many squares we repainted exactly x times. The upper left square of the board has to be assumed to be always black. Two squares are called corner-adjacent, if they have exactly one common point.\n\nInput\nThe first line contains integers n and m ( 1 \u2264 n , m \u2264 5000 ). The second line contains integer x ( 1 \u2264 x \u2264 10 9 ).\n\nOutput\nPrint how many squares will be painted exactly x times. Examples\n\nInput\n3 3 1\n\nOutput\n4\n\nInput\n3 3 2\n\nOutput\n1\n\nInput\n1 1 1\n\nOutput\n1","1729":"A. Translation time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The translation from the Berland language into the Birland language is not an easy task. Those languages are very similar: a berlandish word differs from a birlandish word with the same meaning a little: it is spelled (and pronounced) reversely. For example, a Berlandish word code corresponds to a Birlandish word edoc . However, it's easy to make a mistake during the \u00abtranslation\u00bb. Vasya translated word s from Berlandish into Birlandish as t . Help him: find out if he translated the word correctly.\n\nInput\nThe first line contains word s , the second line contains word t . The words consist of lowercase Latin letters. The input data do not consist unnecessary spaces. The words are not empty and their lengths do not exceed 100 symbols.\n\nOutput\nIf the word t is a word s , written reversely, print YES , otherwise print NO . Examples\n\nInput\ncode edoc\n\nOutput\nYES\n\nInput\nabb aba\n\nOutput\nNO\n\nInput\ncode code\n\nOutput\nNO","1780":"A. Triangular numbers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A triangular number is the number of dots in an equilateral triangle uniformly filled with dots. For example, three dots can be arranged in a triangle; thus three is a triangular number. The n -th triangular number is the number of dots in a triangle with n dots on a side. . You can learn more about these numbers from Wikipedia (http:\/\/en.wikipedia.org\/wiki\/Triangular_number). Your task is to find out if a given integer is a triangular number.\n\nInput\nThe first line contains the single number n ( 1 \u2264 n \u2264 500 ) \u2014 the given integer.\n\nOutput\nIf the given integer is a triangular number output YES , otherwise output NO . Examples\n\nInput\n1\n\nOutput\nYES\n\nInput\n2\n\nOutput\nNO\n\nInput\n3\n\nOutput\nYES","1804":"A. Domino piling time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given a rectangular board of M \u00d7 N squares. Also you are given an unlimited number of standard domino pieces of 2 \u00d7 1 squares. You are allowed to rotate the pieces. You are asked to place as many dominoes as possible on the board so as to meet the following conditions: 1. Each domino completely covers two squares. 2. No two dominoes overlap. 3. Each domino lies entirely inside the board. It is allowed to touch the edges of the board. Find the maximum number of dominoes, which can be placed under these restrictions.\n\nInput\nIn a single line you are given two integers M and N \u2014 board sizes in squares ( 1 \u2264 M \u2264 N \u2264 16 ).\n\nOutput\nOutput one number \u2014 the maximal number of dominoes, which can be placed. Examples\n\nInput\n2 4\n\nOutput\n4\n\nInput\n3 3\n\nOutput\n4","1855":"A. Square Earth? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Meg the Rabbit decided to do something nice, specifically \u2014 to determine the shortest distance between two points on the surface of our planet. But Meg... what can you say, she wants everything simple. So, she already regards our planet as a two-dimensional circle. No, wait, it's even worse \u2014 as a square of side n . Thus, the task has been reduced to finding the shortest path between two dots on a square (the path should go through the square sides). To simplify the task let us consider the vertices of the square to lie at points whose coordinates are: (0, 0) , ( n , 0) , (0, n ) and ( n , n ) .\n\nInput\nThe single line contains 5 space-separated integers: n , x 1 , y 1 , x 2 , y 2 ( 1 \u2264 n \u2264 1000, 0 \u2264 x 1 , y 1 , x 2 , y 2 \u2264 n ) which correspondingly represent a side of the square, the coordinates of the first point and the coordinates of the second point. It is guaranteed that the points lie on the sides of the square.\n\nOutput\nYou must print on a single line the shortest distance between the points. Examples\n\nInput\n2 0 0 1 0\n\nOutput\n1\n\nInput\n2 0 1 2 1\n\nOutput\n4\n\nInput\n100 0 0 100 100\n\nOutput\n200","1877":"A. Triangle time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Johnny has a younger sister Anne, who is very clever and smart. As she came home from the kindergarten, she told his brother about the task that her kindergartener asked her to solve. The task was just to construct a triangle out of four sticks of different colours. Naturally, one of the sticks is extra. It is not allowed to break the sticks or use their partial length. Anne has perfectly solved this task, now she is asking Johnny to do the same. The boy answered that he would cope with it without any difficulty. However, after a while he found out that different tricky things can occur. It can happen that it is impossible to construct a triangle of a positive area, but it is possible to construct a degenerate triangle. It can be so, that it is impossible to construct a degenerate triangle even. As Johnny is very lazy, he does not want to consider such a big amount of cases, he asks you to help him.\n\nInput\nThe first line of the input contains four space-separated positive integer numbers not exceeding 100 \u2014 lengthes of the sticks.\n\nOutput\nOutput TRIANGLE if it is possible to construct a non-degenerate triangle.\n\nOutput\nSEGMENT if the first case cannot take place and it is possible to construct a degenerate triangle.\n\nOutput\nIMPOSSIBLE if it is impossible to construct any triangle. Remember that you are to use three sticks. It is not allowed to break the sticks or use their partial length. Examples\n\nInput\n4 2 1 3\n\nOutput\nTRIANGLE\n\nInput\n7 2 2 4\n\nOutput\nSEGMENT\n\nInput\n3 5 9 1\n\nOutput\nIMPOSSIBLE","1888":"A. A Student's Dream time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Statistics claims that students sleep no more than three hours a day. But even in the world of their dreams, while they are snoring peacefully, the sense of impending doom is still upon them. A poor student is dreaming that he is sitting the mathematical analysis exam. And he is examined by the most formidable professor of all times, a three times Soviet Union Hero, a Noble Prize laureate in student expulsion, venerable Petr Palych. The poor student couldn't answer a single question. Thus, instead of a large spacious office he is going to apply for a job to thorium mines. But wait a minute! Petr Palych decided to give the student the last chance! Yes, that is possible only in dreams. So the professor began: \"Once a Venusian girl and a Marsian boy met on the Earth and decided to take a walk holding hands. But the problem is the girl has a l fingers on her left hand and a r fingers on the right one. The boy correspondingly has b l and b r fingers. They can only feel comfortable when holding hands, when no pair of the girl's fingers will touch each other. That is, they are comfortable when between any two girl's fingers there is a boy's finger. And in addition, no three fingers of the boy should touch each other. Determine if they can hold hands so that the both were comfortable.\" The boy any the girl don't care who goes to the left and who goes to the right. The difference is only that if the boy goes to the left of the girl, he will take her left hand with his right one, and if he goes to the right of the girl, then it is vice versa.\n\nInput\nThe first line contains two positive integers not exceeding 100 . They are the number of fingers on the Venusian girl's left and right hand correspondingly. The second line contains two integers not exceeding 100 . They are the number of fingers on the Marsian boy's left and right hands correspondingly.\n\nOutput\nPrint YES or NO , that is, the answer to Petr Palych's question. Examples\n\nInput\n5 1 10 5\n\nOutput\nYES\n\nInput\n4 5 3 3\n\nOutput\nYES\n\nInput\n1 2 11 6\n\nOutput\nNO\n\nNote\nThe boy and the girl don't really care who goes to the left.","1906":"A. Harry Potter and Three Spells time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A long time ago (probably even in the first book), Nicholas Flamel, a great alchemist and the creator of the Philosopher's Stone, taught Harry Potter three useful spells. The first one allows you to convert a grams of sand into b grams of lead, the second one allows you to convert c grams of lead into d grams of gold and third one allows you to convert e grams of gold into f grams of sand. When Harry told his friends about these spells, Ron Weasley was amazed. After all, if they succeed in turning sand into lead, lead into gold, and then turning part of the gold into sand again and so on, then it will be possible to start with a small amount of sand and get huge amounts of gold! Even an infinite amount of gold! Hermione Granger, by contrast, was skeptical about that idea. She argues that according to the law of conservation of matter getting an infinite amount of matter, even using magic, is impossible. On the contrary, the amount of matter may even decrease during transformation, being converted to magical energy. Though Hermione's theory seems convincing, Ron won't believe her. As far as Ron is concerned, Hermione made up her law of conservation of matter to stop Harry and Ron wasting their time with this nonsense, and to make them go and do homework instead. That's why Ron has already collected a certain amount of sand for the experiments. A quarrel between the friends seems unavoidable... Help Harry to determine which one of his friends is right, and avoid the quarrel after all. To do this you have to figure out whether it is possible to get the amount of gold greater than any preassigned number from some finite amount of sand.\n\nInput\nThe first line contains 6 integers a , b , c , d , e , f ( 0 \u2264 a , b , c , d , e , f \u2264 1000 ).\n\nOutput\nPrint \"Ron\", if it is possible to get an infinitely large amount of gold having a certain finite amount of sand (and not having any gold and lead at all), i.e., Ron is right. Otherwise, print \"Hermione\". Examples\n\nInput\n100 200 250 150 200 250\n\nOutput\nRon\n\nInput\n100 50 50 200 200 100\n\nOutput\nHermione\n\nInput\n100 10 200 20 300 30\n\nOutput\nHermione\n\nInput\n0 0 0 0 0 0\n\nOutput\nHermione\n\nInput\n1 1 0 1 1 1\n\nOutput\nRon\n\nInput\n1 0 1 2 1 2\n\nOutput\nHermione\n\nInput\n100 1 100 1 0 1\n\nOutput\nRon\n\nNote\nConsider the first sample. Let's start with the 500 grams of sand. Apply the first spell 5 times and turn the sand into 1000 grams of lead. Then apply the second spell 4 times to get 600 grams of gold. Let\u2019s take 400 grams from the resulting amount of gold turn them back into sand. We get 500 grams of sand and 200 grams of gold. If we apply the same operations to 500 grams of sand again, we can get extra 200 grams of gold every time. Thus, you can get 200 , 400 , 600 etc. grams of gold, i.e., starting with a finite amount of sand ( 500 grams), you can get the amount of gold which is greater than any preassigned number. In the forth sample it is impossible to get sand, or lead, or gold, applying the spells. In the fifth sample an infinitely large amount of gold can be obtained by using only the second spell, which allows you to receive 1 gram of gold out of nothing.\n\nNote\nthat if such a second spell is available, then the first and the third one do not affect the answer at all. The seventh sample is more interesting. We can also start with a zero amount of sand there. With the aid of the third spell you can get sand out of nothing. We get 10000 grams of sand in this manner. Let's get 100 grams of lead using the first spell 100 times. Then make 1 gram of gold from them. We managed to receive 1 gram of gold, starting with a zero amount of sand! Clearly, in this manner you can get an infinitely large amount of gold.","1910":"A. Petya and Java time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya has recently started attending a programming club. Naturally he is facing the problem of choosing a programming language. After long considerations he realized that Java is the best choice. The main argument in favor of choosing Java was that it has a very large integer data type, called BigInteger. But having attended several classes of the club, Petya realized that not all tasks require using the BigInteger type. It turned out that in some tasks it is much easier to use small data types. That's why a question arises: \"Which integer type to use if one wants to store a positive integer n ?\" Petya knows only 5 integer types: 1) byte occupies 1 byte and allows you to store numbers from - 128 to 127 2) short occupies 2 bytes and allows you to store numbers from - 32768 to 32767 3) int occupies 4 bytes and allows you to store numbers from - 2147483648 to 2147483647 4) long occupies 8 bytes and allows you to store numbers from - 9223372036854775808 to 9223372036854775807 5) BigInteger can store any integer number, but at that it is not a primitive type, and operations with it are much slower. For all the types given above the boundary values are included in the value range. From this list, Petya wants to choose the smallest type that can store a positive integer n . Since BigInteger works much slower, Peter regards it last. Help him.\n\nInput\nThe first line contains a positive number n . It consists of no more than 100 digits and doesn't contain any leading zeros. The number n can't be represented as an empty string. Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d ).\n\nOutput\nPrint the first type from the list \" byte , short , int , long , BigInteger \", that can store the natural number n , in accordance with the data given above. Examples\n\nInput\n127\n\nOutput\nbyte\n\nInput\n130\n\nOutput\nshort\n\nInput\n123456789101112131415161718192021222324\n\nOutput\nBigInteger","2004":"B. Depression time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Do you remember a kind cartoon \"Beauty and the Beast\"? No, no, there was no firing from machine guns or radiation mutants time-travels! There was a beauty named Belle. Once she had violated the Beast's order and visited the West Wing. After that she was banished from the castle... Everybody was upset. The beautiful Belle was upset, so was the Beast, so was Lumiere the candlestick. But the worst thing was that Cogsworth was upset. Cogsworth is not a human, but is the mantel clock, which was often used as an alarm clock. Due to Cogsworth's frustration all the inhabitants of the castle were in trouble: now they could not determine when it was time to drink morning tea, and when it was time for an evening stroll. Fortunately, deep in the basement are lying digital clock showing the time in the format HH:MM . Now the residents of the castle face a difficult task. They should turn Cogsworth's hour and minute mustache hands in such a way, that Cogsworth began to show the correct time. Moreover they need to find turn angles in degrees for each mustache hands. The initial time showed by Cogsworth is 12:00 . You can only rotate the hands forward, that is, as is shown in the picture: As since there are many ways too select such angles because of full rotations, choose the smallest angles in the right (non-negative) direction.\n\nNote\nthat Cogsworth's hour and minute mustache hands move evenly and continuously. Hands are moving independently, so when turning one hand the other hand remains standing still.\n\nInput\nThe only line of input contains current time according to the digital clock, formatted as HH:MM ( 00 \u2264 HH \u2264 23 , 00 \u2264 MM \u2264 59 ). The mantel clock initially shows 12:00 . Pretests contain times of the beginning of some morning TV programs of the Channel One Russia.\n\nOutput\nPrint two numbers x and y \u2014 the angles of turning the hour and minute hands, respectively ( 0 \u2264 x , y < 360 ). The absolute or relative error in the answer should not exceed 10 - 9 . Examples\n\nInput\n12:00\n\nOutput\n0 0\n\nInput\n04:30\n\nOutput\n135 180\n\nInput\n08:17\n\nOutput\n248.5 102\n\nNote\nA note to the second example: the hour hand will be positioned exactly in the middle, between 4 and 5.","2073":"A. Toy Army time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The hero of our story, Valera, and his best friend Arcady are still in school, and therefore they spend all the free time playing turn-based strategy \"GAGA: Go And Go Again\". The gameplay is as follows. There are two armies on the playing field each of which consists of n men ( n is always even). The current player specifies for each of her soldiers an enemy's soldier he will shoot (a target) and then all the player's soldiers shot simultaneously. This is a game world, and so each soldier shoots perfectly, that is he absolutely always hits the specified target. If an enemy soldier is hit, he will surely die. It may happen that several soldiers had been indicated the same target. Killed soldiers do not participate in the game anymore. The game \"GAGA\" consists of three steps: first Valera makes a move, then Arcady, then Valera again and the game ends. You are asked to calculate the maximum total number of soldiers that may be killed during the game.\n\nInput\nThe input data consist of a single integer n ( 2 \u2264 n \u2264 10 8 , n is even). Please note that before the game starts there are 2 n soldiers on the fields.\n\nOutput\nPrint a single number \u2014 a maximum total number of soldiers that could be killed in the course of the game in three turns. Examples\n\nInput\n2\n\nOutput\n3\n\nInput\n4\n\nOutput\n6\n\nNote\nThe first sample test: 1) Valera's soldiers 1 and 2 shoot at Arcady's soldier 1. 2) Arcady's soldier 2 shoots at Valera's soldier 1. 3) Valera's soldier 1 shoots at Arcady's soldier 2. There are 3 soldiers killed in total: Valera's soldier 1 and Arcady's soldiers 1 and 2.","2088":"A. Trains time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya the programmer lives in the middle of the Programming subway branch. He has two girlfriends: Dasha and Masha, who live at the different ends of the branch, each one is unaware of the other one's existence. When Vasya has some free time, he goes to one of his girlfriends. He descends into the subway at some time, waits the first train to come and rides on it to the end of the branch to the corresponding girl. However, the trains run with different frequencies: a train goes to Dasha's direction every a minutes, but a train goes to Masha's direction every b minutes. If two trains approach at the same time, Vasya goes toward the direction with the lower frequency of going trains, that is, to the girl, to whose directions the trains go less frequently (see the note to the third sample). We know that the trains begin to go simultaneously before Vasya appears. That is the train schedule is such that there exists a moment of time when the two trains arrive simultaneously. Help Vasya count to which girlfriend he will go more often.\n\nInput\nThe first line contains two integers a and b ( a \u2260 b , 1 \u2264 a , b \u2264 10 6 ).\n\nOutput\nPrint \" Dasha \" if Vasya will go to Dasha more frequently, \" Masha \" if he will go to Masha more frequently, or \" Equal \" if he will go to both girlfriends with the same frequency. Examples\n\nInput\n3 7\n\nOutput\nDasha\n\nInput\n5 3\n\nOutput\nMasha\n\nInput\n2 3\n\nOutput\nEqual\n\nNote\nLet's take a look at the third sample. Let the trains start to go at the zero moment of time. It is clear that the moments of the trains' arrival will be periodic with period 6. That's why it is enough to show that if Vasya descends to the subway at a moment of time inside the interval (0, 6] , he will go to both girls equally often. If he descends to the subway at a moment of time from 0 to 2, he leaves for Dasha on the train that arrives by the second minute. If he descends to the subway at a moment of time from 2 to 3, he leaves for Masha on the train that arrives by the third minute. If he descends to the subway at a moment of time from 3 to 4, he leaves for Dasha on the train that arrives by the fourth minute. If he descends to the subway at a moment of time from 4 to 6, he waits for both trains to arrive by the sixth minute and goes to Masha as trains go less often in Masha's direction. In sum Masha and Dasha get equal time \u2014 three minutes for each one, thus, Vasya will go to both girlfriends equally often.","2091":"A. Die Roll time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output Yakko, Wakko and Dot, world-famous animaniacs, decided to rest from acting in cartoons, and take a leave to travel a bit. Yakko dreamt to go to Pennsylvania, his Motherland and the Motherland of his ancestors. Wakko thought about Tasmania, its beaches, sun and sea. Dot chose Transylvania as the most mysterious and unpredictable place. But to their great regret, the leave turned to be very short, so it will be enough to visit one of the three above named places. That's why Yakko, as the cleverest, came up with a truly genius idea: let each of the three roll an ordinary six-sided die, and the one with the highest amount of points will be the winner, and will take the other two to the place of his\/her dreams. Yakko thrown a die and got Y points, Wakko \u2014 W points. It was Dot's turn. But she didn't hurry. Dot wanted to know for sure what were her chances to visit Transylvania. It is known that Yakko and Wakko are true gentlemen, that's why if they have the same amount of points with Dot, they will let Dot win.\n\nInput\nThe only line of the input file contains two natural numbers Y and W \u2014 the results of Yakko's and Wakko's die rolls.\n\nOutput\nOutput the required probability in the form of irreducible fraction in format \u00ab A\/B \u00bb, where A \u2014 the numerator, and B \u2014 the denominator. If the required probability equals to zero, output \u00ab 0\/1 \u00bb. If the required probability equals to 1, output \u00ab 1\/1 \u00bb. Examples\n\nInput\n4 2\n\nOutput\n1\/2\n\nNote\nDot will go to Transylvania, if she is lucky to roll 4, 5 or 6 points.","2210":"A. Football time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves football very much. One day, as he was watching a football match, he was writing the players' current positions on a piece of paper. To simplify the situation he depicted it as a string consisting of zeroes and ones. A zero corresponds to players of one team; a one corresponds to players of another team. If there are at least 7 players of some team standing one after another, then the situation is considered dangerous. For example, the situation 00100110111111101 is dangerous and 11110111011101 is not. You are given the current situation. Determine whether it is dangerous or not.\n\nInput\nThe first input line contains a non-empty string consisting of characters \"0\" and \"1\", which represents players. The length of the string does not exceed 100 characters. There's at least one player from each team present on the field.\n\nOutput\nPrint \"YES\" if the situation is dangerous. Otherwise, print \"NO\". Examples\n\nInput\n001001\n\nOutput\nNO\n\nInput\n1000000001\n\nOutput\nYES","2246":"A. Numbers Joke time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 30 ).\n\nOutput\nOutput a single integer. Example\n\nInput\n3\n\nOutput\n27","2312":"A. Find Amir time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A few years ago Sajjad left his school and register to another one due to security reasons. Now he wishes to find Amir, one of his schoolmates and good friends. There are n schools numerated from 1 to n . One can travel between each pair of them, to do so, he needs to buy a ticket. The ticker between schools i and j costs and can be used multiple times. Help Sajjad to find the minimum cost he needs to pay for tickets to visit all schools. He can start and finish in any school.\n\nInput\nThe first line contains a single integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of schools.\n\nOutput\nPrint single integer: the minimum cost of tickets needed to visit all schools. Examples\n\nInput\n2\n\nOutput\n0\n\nInput\n10\n\nOutput\n4\n\nNote\nIn the first example we can buy a ticket between the schools that costs .","2317":"A. Fake NP time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Tavak and Seyyed are good friends. Seyyed is very funny and he told Tavak to solve the following problem instead of longest-path . You are given l and r . For all integers from l to r , inclusive, we wrote down all of their integer divisors except 1 . Find the integer that we wrote down the maximum number of times. Solve the problem to show that it's not a NP problem.\n\nInput\nThe first line contains two integers l and r ( 2 \u2264 l \u2264 r \u2264 10 9 ).\n\nOutput\nPrint single integer, the integer that appears maximum number of times in the divisors. If there are multiple answers, print any of them. Examples\n\nInput\n19 29\n\nOutput\n2\n\nInput\n3 6\n\nOutput\n3\n\nNote\nDefinition of a divisor: https:\/\/www.mathsisfun.com\/definitions\/divisor-of-an-integer-.html The first example: from 19 to 29 these numbers are divisible by 2 : {20, 22, 24, 26, 28} . The second example: from 3 to 6 these numbers are divisible by 3 : {3, 6} .","2347":"A. Treasure Hunt time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Captain Bill the Hummingbird and his crew recieved an interesting challenge offer. Some stranger gave them a map, potion of teleportation and said that only this potion might help them to reach the treasure. Bottle with potion has two values x and y written on it. These values define four moves which can be performed using the potion: Map shows that the position of Captain Bill the Hummingbird is ( x 1 , y 1 ) and the position of the treasure is ( x 2 , y 2 ) . You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline. If it is possible for Captain to reach the treasure using the potion then output \"YES\" , otherwise \"NO\" (without quotes). The potion can be used infinite amount of times.\n\nInput\nThe first line contains four integer numbers x 1 , y 1 , x 2 , y 2 ( - 10 5 \u2264 x 1 , y 1 , x 2 , y 2 \u2264 10 5 ) \u2014 positions of Captain Bill the Hummingbird and treasure respectively. The second line contains two integer numbers x , y ( 1 \u2264 x , y \u2264 10 5 ) \u2014 values on the potion bottle.\n\nOutput\nPrint \"YES\" if it is possible for Captain to reach the treasure using the potion, otherwise print \"NO\" (without quotes). Examples\n\nInput\n0 0 0 6 2 3\n\nOutput\nYES\n\nInput\n1 1 3 6 1 5\n\nOutput\nNO\n\nNote\nIn the first example there exists such sequence of moves: \u2014 the first type of move \u2014 the third type of move","2356":"A. Sasha and Sticks time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output It's one more school day now. Sasha doesn't like classes and is always bored at them. So, each day he invents some game and plays in it alone or with friends. Today he invented one simple game to play with Lena, with whom he shares a desk. The rules are simple. Sasha draws n sticks in a row. After that the players take turns crossing out exactly k sticks from left or right in each turn. Sasha moves first, because he is the inventor of the game. If there are less than k sticks on the paper before some turn, the game ends. Sasha wins if he makes strictly more moves than Lena. Sasha wants to know the result of the game before playing, you are to help him.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 n , k \u2264 10 18 , k \u2264 n ) \u2014 the number of sticks drawn by Sasha and the number k \u2014 the number of sticks to be crossed out on each turn.\n\nOutput\nIf Sasha wins, print \" YES \" (without quotes), otherwise print \" NO \" (without quotes). You can print each letter in arbitrary case (upper of lower). Examples\n\nInput\n1 1\n\nOutput\nYES\n\nInput\n10 4\n\nOutput\nNO\n\nNote\nIn the first example Sasha crosses out 1 stick, and then there are no sticks. So Lena can't make a move, and Sasha wins. In the second example Sasha crosses out 4 sticks, then Lena crosses out 4 sticks, and after that there are only 2 sticks left. Sasha can't make a move. The players make equal number of moves, so Sasha doesn't win."}}