{"id":{"0":2,"13":12,"16":13,"19":17,"21":28,"26":34,"28":41,"30":66,"38":69,"40":73,"42":84,"49":96,"58":102,"64":124,"67":133,"69":145,"73":159,"80":184,"82":190,"84":194,"94":198,"96":209,"98":211,"102":227,"104":230,"106":234,"111":238,"113":244,"115":246,"117":250,"119":258,"122":256,"124":262,"128":263,"132":290,"135":312,"136":311,"139":317,"142":336,"144":347,"146":350,"148":377,"155":385,"156":381,"159":387,"161":419,"163":427,"182":466,"184":476,"188":477,"193":481,"195":485,"197":494,"199":493,"201":498,"203":514,"205":515,"220":518,"222":521,"227":529,"229":563,"231":569,"232":568,"235":582,"237":590,"239":588,"243":607,"246":642,"248":641,"250":658,"252":668,"261":674,"263":679,"269":680,"272":684,"274":685,"276":689,"278":694,"280":700,"284":714,"285":743,"289":744,"293":755,"299":758,"301":764,"307":773,"309":778,"313":779,"317":789,"319":796,"329":809,"331":814,"333":815,"345":819,"351":820,"363":825,"367":833,"374":869,"376":868,"379":888,"384":889,"385":890,"386":891,"393":899,"395":898,"398":905,"400":912,"402":927,"404":939,"407":935,"412":940,"421":956,"427":968,"433":972,"435":978,"437":994,"450":998,"454":1018,"457":1027,"475":1030,"478":1037,"484":1038,"486":1047,"516":1053,"518":1057,"521":1062,"529":1068,"531":1072,"543":1082,"550":1087,"556":1092,"562":1098,"582":1102,"593":1107,"597":1114,"601":1112,"604":1126,"605":1117,"608":1121,"628":1132,"640":1142,"653":1149,"659":1157,"667":1167,"671":1173,"673":1198,"676":1203,"678":1212,"688":1219,"689":1226,"695":1231,"697":1234,"699":1233,"703":1242,"705":1245,"717":1247,"720":1253,"722":1252,"724":1257,"730":1263,"732":1274,"751":1280,"757":1295,"770":1300,"772":1309,"774":1314,"778":1324,"780":1329,"783":1330,"788":1336,"790":1344,"796":1351,"827":1377,"832":1383,"834":1390,"841":1394,"843":1395,"847":1399,"849":1411,"850":1407,"853":1408,"857":1405,"859":1413,"863":1424,"865":1439,"867":1472,"871":1473,"877":1477,"879":1483,"908":1487,"910":1502,"914":1520,"916":1530,"918":1535,"923":1537,"932":1550,"938":1556,"941":1555,"964":1561,"967":1570,"976":1575,"1030":1586,"1034":1591,"1036":1593,"1039":1592,"1044":1601,"1046":1602,"1048":1611,"1050":1612,"1055":1654,"1061":1661,"1066":1678,"1067":1677,"1070":1681,"1081":1686,"1087":1692,"1088":1691,"1099":1701,"1102":1707,"1104":1708,"1106":1714,"1122":1715,"1130":1713,"1138":1721,"1143":1726,"1152":1738,"1160":1742,"1162":1753,"1166":1756,"1176":1766,"1178":1771,"1180":1776,"1195":1787,"1197":1786,"1208":1794,"1210":1804,"1222":1809,"1228":1819,"1232":1845,"1234":1850,"1236":1853,"1246":1859,"1281":1868,"1285":1875,"1289":1876,"1293":1886,"1299":1894,"1301":1900,"1303":1906,"1321":1912,"1323":1915,"1330":1932,"1347":1936,"1351":1940,"1361":1945,"1363":1955,"1369":1960,"1377":1971,"1378":1970,"1415":1976,"1417":1975,"1421":1981,"1427":1983,"1429":1985,"1433":1993,"1435":2002,"1451":2003,"1459":2013,"1461":2023,"1467":2028,"1469":2033,"1471":2038,"1477":2045,"1479":2049,"1482":2058,"1484":2061,"1498":2063,"1526":2074,"1528":2078,"1530":2085,"1533":2088,"1537":2098,"1539":2103,"1580":2108,"1582":2109,"1588":2111,"1589":2110,"1592":2114,"1594":2125,"1596":2130,"1598":2129,"1601":2136,"1618":2139,"1627":2151,"1629":2152,"1632":2155,"1634":2156,"1640":2159,"1646":2163,"1650":2164,"1657":2175,"1659":2174,"1661":2173,"1665":2178,"1669":2183,"1673":2184,"1679":2193,"1683":2198,"1691":2203,"1709":2212,"1711":2223,"1725":2229,"1726":2227,"1729":2231,"1733":2242,"1735":2243,"1745":2241,"1760":2247,"1764":2246,"1767":2257,"1769":2266,"1778":2273,"1795":2278,"1797":2286,"1802":2287,"1804":2296,"1842":2309,"1848":2311,"1850":2325,"1854":2330,"1855":2331,"1858":2336,"1859":2335,"1871":2340,"1877":2346,"1882":2351,"1884":2357,"1886":2360,"1902":2365,"1906":2379,"1908":2387,"1910":2385,"1939":2389,"1943":2395,"1947":2399,"1963":2410,"1965":2414,"1981":2434,"1985":2439,"1988":2444,"1990":2451,"1992":2457,"1994":2455,"1996":2461,"1998":2468,"2000":2470,"2004":2471,"2020":2475,"2065":2481,"2073":2490,"2088":2505,"2089":2511,"2091":2520,"2093":2523,"2102":2526,"2104":2530,"2105":2531,"2130":2535,"2159":2545,"2210":2555,"2232":2608,"2233":2624,"2235":2638,"2237":2646,"2240":2653,"2242":2655,"2244":2675,"2246":2681,"2248":2687,"2250":2697,"2252":2719,"2269":2738,"2271":2745,"2272":2742,"2274":2743,"2278":2755,"2281":2766,"2285":2771,"2287":2785,"2288":2783,"2295":2793,"2297":2806,"2310":2804,"2312":2810,"2316":2818,"2317":2819,"2322":2828,"2324":2830,"2329":2846,"2331":2852,"2332":2851,"2334":2856,"2338":2867,"2340":2879,"2343":2878,"2347":2883,"2350":2901,"2352":2912,"2354":2924,"2356":2952,"2358":2963},"sourceCode":{"0":"#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,d;\r\n    scanf(\"%d %d\",&a,&b);\r\n    if(a>b)\r\n        printf(\"%d\",b);\r\n    else\r\n        printf(\"%d\",a);\r\n    d=abs(a-b);\r\n\r\n    printf(\" %d\\n\",d\/2);\r\n    return 0;\r\n\r\n}","13":"#include<stdio.h>\r\r\nmain(){\r\r\n\tint x,i,j,a,b,arr[52]={0},art[52]={0};\r\r\n\tscanf(\"%d\",&x);\r\r\n\tfor(i=0;i<x*x;i++){\r\r\n\t\tscanf(\"%d %d\",&a,&b);\r\r\n\t\tif(!arr[a] && !art[b]){\r\r\n\t\t\tprintf(\"%d \",i+1);\r\r\n\t\t\tarr[a]++;\r\r\n\t\t\tart[b]++;\r\r\n\t\t}\r\r\n\t}\r\r\n}","16":"#include \"stdio.h\"\r\n\r\nint main()\r\n{\r\n\tint i,n,rounds=0,total=0;\r\n\tscanf(\"%d\",&n);\r\n\tint a[n],info=0;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\ttotal+=a[i];\r\n\t}\r\n\twhile(total!=0)\r\n\t{\r\n\t\tif(rounds%2==0)\r\n\t\t{\r\n\t\t\tfor(i=0;i<n;++i)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]<=info&&a[i]>=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tinfo++;\r\n\t\t\t\t\ttotal-=a[i];\r\n\t\t\t\t\ta[i]=-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(i=n-1;i>=0;--i)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]<=info&&a[i]>=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tinfo++;\r\n\t\t\t\t\ttotal-=a[i];\r\n\t\t\t\t\ta[i]=-1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\/\/printf(\"%d\\n\",i);\r\n\t\trounds++;\r\n\t}\r\n\tif(rounds>0)\r\n\t\tprintf(\"%d\",rounds-1);\r\n\telse\r\n\t\tprintf(\"0\");\r\n\treturn 0;\r\n}","19":"#include<stdio.h>\r\r\n#include<math.h>\r\r\nint main()\r\r\n{\r\r\n    int n,t,a;\r\r\n    scanf(\"%d %d\",&n,&t);\r\r\n    if(t<10)\r\r\n    {\r\r\n    for(a=1;a<=n;a++)\r\r\n    {\r\r\n        printf(\"%d\",t);\r\r\n    }\r\r\n    }\r\r\n    else if(t==10&&n!=1)\r\r\n    {\r\r\n     for(a=1;a<n;a++)\r\r\n    {\r\r\n        printf(\"%d\",1);\r\r\n    }\r\r\n    printf(\"0\");\r\r\n    }\r\r\n    else\r\r\n        printf(\"-1\");\r\r\n    return 0;\r\r\n}","21":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,a[100],c=0,i,j;\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++){\r\r\n        scanf(\"%d\",&a[i]);\r\r\n    }\r\r\n     for(i=0;i<n;i++){\r\r\n            if(a[i]==1){\r\r\n                c++;\r\r\n            }\r\r\n        if(a[i]==1&&a[i+1]==0&&a[i+2]==1){\r\r\n            c++;\r\r\n        }\r\r\n     }\r\r\n\r\r\n     printf(\"%d\",c);\r\r\n\r\r\n}","26":"#include <stdio.h>\r\n#include <math.h>\r\n#define MAX_VALUES 1000000\r\n#define BIG_SIZE MAX_VALUES + 21\r\n\r\nint n, weights[MAX_VALUES];\r\n\r\nvoid add(char* value, int position, int *counter){\r\n    if(value[position] == 0){\r\n        value[position] = 1;\r\n        (*counter)++;\r\n    }else{\r\n        value[position] = 0;\r\n        (*counter)--;\r\n        add(value, position+1, counter);\r\n    }\r\n}\r\n\r\n\r\nint main(){\r\n    char tmpSum [BIG_SIZE] = {0};\r\n    int tmpCount = 0;\r\n\r\n    scanf(\"%d\", &n);\r\n    for ( int i = 0; i < n; i++ ){\r\n        scanf(\"%d\", &weights[i]);\r\n        add(tmpSum, weights[i], &tmpCount);\r\n    }\r\n    printf(\"%d\\n\", tmpCount);\r\n\r\n    return 0;\r\n}","28":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,a,p,sum;\r\n    int min=150;\r\n    scanf(\"%d\",&n);\r\n    sum=0;\r\n    while(n--)\r\n    {\r\n        scanf(\"%d %d\",&a,&p);\r\n        if(p<min) min=p;\r\n        sum+=a*min;\r\n    }\r\n    printf(\"%d\\n\",sum);\r\n    return 0;\r\n}","30":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\n    double a, b, c, d, s, t;\r\r\n    scanf(\"%lf %lf %lf\",&a,&b,&c);\r\r\n    t=a\/(b+c);\r\r\n    s=b*t;\r\r\n    printf(\"%lf\\n\", s);\r\r\n    return 0;\r\r\n}","38":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n\tlong long int n;\r\r\n\tscanf(\"%lld\",&n);\r\r\n\tprintf(\"%lld\\n\",(n-2)*(n-2));\r\r\n\treturn 0;\r\r\n}","40":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\nint main()\r\r\n{\r\r\n   int n,i,j,lenght=0,flag=1,k=0,l=1,maxlen=0;\r\r\n   scanf(\"%d\",&n);\r\r\n   char A[n][1000+1];\r\r\n   char B[26]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};\r\r\n   for(i=0;i<n;i++){\r\r\n        scanf(\"%s\",A[i]);\r\r\n   }\r\r\nfor(k=0;k<26;k++){\r\r\n    for(l=0;l<26;l++){\r\r\n        lenght=0;\r\r\n            for(i=0;i<n;i++){\r\r\n                    flag=1;\r\r\n                for(j=0;A[i][j]!='\\0'&&flag==1;j++){\r\r\n                    if(A[i][j]!=B[k]&&A[i][j]!=B[l]){\r\r\n                        flag=0;\r\r\n                    }\r\r\n                }\r\r\n                if(flag==1){\r\r\n                    lenght=lenght+(j);\r\r\n                }\r\r\n            }\r\r\n        if(lenght>maxlen){\r\r\n            maxlen=lenght;\r\r\n        }\r\r\n    }\r\r\n}\r\r\nprintf(\"%d\",maxlen);\r\r\n\r\r\n    return 0;\r\r\n}","42":"#include<stdio.h>\r\r\n#include<math.h>\r\r\nint main(){\r\r\nint t,n,a[1000],i,j,p=0;\r\r\nscanf(\"%d %d\",&t,&n);\r\r\nfor(i=0;i<t;i++)\r\r\n{\r\r\nfor(j=0;j<2*n;j++)\r\r\n{\r\r\nscanf(\"%d\",&a[j]);\r\r\n}\r\r\nfor(j=0;j<2*n;j=j+2)\r\r\n{\r\r\nif(a[j]|a[j+1])\r\r\np++;\r\r\nelse\r\r\ncontinue;\r\r\n}\r\r\n}\r\r\nprintf(\"%d\",p);\r\r\nreturn 0;\r\r\n\r\r\n}","49":"#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    long long int n,s;\r\n    int t,j,p,f=0;\r\n    scanf(\"%d\",&t);\r\n    for(j=0; j<t; j++)\r\n    {\r\n        scanf(\"%lld\",&n);\r\n        s=n*(n+1)\/2;\r\n        for(p=0; p<64; p++)\r\n        {\r\n            if(pow(2,p)<=n)\r\n            {\r\n                f=pow(2,p);\r\n                s=s-2*f;\r\n            }\r\n        }\r\n        printf(\"%lld\\n\",s);\r\n    }\r\n    return 0;\r\n}","58":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int d1,d2,d3;\r\r\n    scanf(\"%d %d %d\",&d1,&d2,&d3);\r\r\n    if(d1+d2==d3)\r\r\n    {\r\r\n\r\r\n        printf(\"%d\\n\",2*d3);\r\r\n\r\r\n    }\r\r\n    else if(d1+d2<d3)\r\r\n   {printf(\"%d\\n\",(d1+d2)*2);}\r\r\n\r\r\n   else if(d1+d2>d3){\r\r\n\r\r\n  if(d1+d3<d2)\r\r\n   {printf(\"%d\\n\",(d1+d3)*2);}\r\r\n   else if(d2+d3<d1)\r\r\n   {printf(\"%d\\n\",(d2+d3)*2);}\r\r\n   else{printf(\"%d\\n\",d1+d2+d3);}\r\r\n   }\r\r\n\r\r\n\r\r\n    return 0;\r\r\n}","64":"#include <stdio.h>\r\nint min(int x,int y)\r\n{\r\n    if(x>y)\r\n    {\r\n        return y;\r\n    }\r\n    else\r\n    {\r\n        return x;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int n,i,num=3;\r\n    char ch[100001];\r\n    scanf(\"%d\",&n);\r\n    scanf(\"%s\",ch);\r\n    for(i=1;ch[i]!='\\0';i++)\r\n    {\r\n        if(ch[i]!=ch[i-1])\r\n        {\r\n            num++;\r\n        }\r\n    }\r\n    printf(\"%d\",min(n,num));\r\n    return 0;\r\n}","67":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n\tint a[4],b[4];\r\n    int i,j;\r\n    int x,y,z,sum=0,ans=0;\r\n    for(i=0;i<3;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=0;i<3;i++)\r\n    {\r\n        scanf(\"%d\",&b[i]);\r\n        if(a[i]>=b[i])\r\n        sum+=(a[i]-b[i])\/2;\r\n        else ans+=b[i]-a[i];\r\n    }\r\n    if(sum>=ans)\r\n    printf(\"Yes\\n\");\r\n    else printf(\"No\\n\");\r\n    return 0;\r\n}","69":"#include<stdio.h>\r\r\n#include<math.h>\r\r\nint main()\r\r\n{\r\r\n        int n,s,max,temp,temp2;\r\r\n        int i,j,k;\r\r\n        int cp,sum=0,tp=0;\r\r\n\r\r\n        scanf(\"%d%d\",&n,&s);\r\r\n        int f[n],t[n];\r\r\n\r\r\n        for(i=0;i<n;i++)\r\r\n            scanf(\"%d%d\",&f[i],&t[i]);\r\r\n\r\r\n        \/\/sort according to floor\r\r\n        for(i=0;i<n-1;i++)\r\r\n        {\r\r\n                max=f[i];\r\r\n                for(j=i+1;j<n;j++)\r\r\n                {\r\r\n                    if(max<f[j])\r\r\n                    {\r\r\n                            max=f[j];\r\r\n\r\r\n                            temp=f[i];\r\r\n                            f[i]=f[j];\r\r\n                            f[j]=temp;\r\r\n\r\r\n                            temp2=t[i];\r\r\n                            t[i]=t[j];\r\r\n                            t[j]=temp2;\r\r\n                    }\r\r\n                }\r\r\n        }\r\r\n\r\r\n\r\r\n        cp=s;\r\r\n        tp=cp-f[0];\r\r\n        i=0;\r\r\n        while(i<n)\r\r\n        {\r\r\n                tp=cp-f[i]+sum;\r\r\n                if(tp<t[i])\r\r\n                {\r\r\n                        sum=sum+(cp-f[i])+(t[i]-tp);\r\r\n                }\r\r\n\r\r\n                else\r\r\n                {\r\r\n                        sum=sum+(cp-f[i]);\r\r\n                }\r\r\n\r\r\n                cp=f[i];\r\r\n                i++;\r\r\n\r\r\n        }\r\r\n\r\r\n        sum=sum+cp;\r\r\n\r\r\n        printf(\"%d\",sum);\r\r\n\r\r\n        return 0;\r\r\n}","73":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint a,b;\r\r\nchar m[6];\r\r\nscanf(\"%d%s%s\",&a,m,m);\r\r\nif(m[0]=='w')\r\r\nb=52+(a==5||a==6);\r\r\nelse\r\r\nb=12-(a>29)-4*(a>30);\r\r\nprintf(\"%d\",b);\r\r\n}","80":"#include <stdio.h>\r\nint main(int argc, char const *argv[]) {\r\n\r\n  int m, n;\r\n\r\n  scanf(\"%d %d\\n\", &n, &m);\r\n\r\n  int i, count, j, k;\r\n  int arr[150] = {};\r\n\r\n  for (i = 0; i < n; i++) {\r\n    scanf(\"%d\", &k);\r\n\r\n    for (j = 0; j < k; j++) {\r\n      int r;\r\n      scanf(\"%d\", &r);\r\n      arr[r] = 1;\r\n    }\r\n  }\r\n\r\n  for (j = 1; j <= m; j++) {\r\n    if(arr[j] != 1){\r\n      printf(\"No\\n\");\r\n      return 0;\r\n    }\r\n  }\r\n  printf(\"Yes\\n\");\r\n  return 0;\r\n}","82":"#include <stdio.h>\r\r\n#include <string.h>\r\r\n\r\r\nint main(void)\r\r\n{\r\r\n    char str_1[1000001],str_2[1000001];\r\r\n    int i,j;\r\r\n    scanf(\"%s\", str_1);\r\r\n    scanf(\"%s\", str_2);\r\r\n    if(str_1[0]=='0')\r\r\n    {\r\r\n        i=1;\r\r\n        while(str_1[i]=='0')\r\r\n        {\r\r\n            i++;\r\r\n        }\r\r\n        j=0;\r\r\n        while(str_1[i]!='\\0')\r\r\n        {\r\r\n            str_1[j]=str_1[i];\r\r\n            i++;\r\r\n            j++;\r\r\n        }\r\r\n        str_1[j]='\\0';\r\r\n    }\r\r\n    if(str_2[0]=='0')\r\r\n    {\r\r\n        i=1;\r\r\n        while(str_2[i]=='0')\r\r\n        {\r\r\n            i++;\r\r\n        }\r\r\n        j=0;\r\r\n        while(str_2[i]!='\\0')\r\r\n        {\r\r\n            str_2[j]=str_2[i];\r\r\n            i++;\r\r\n            j++;\r\r\n        }\r\r\n        str_2[j]='\\0';\r\r\n    }\r\r\n    int lenght_1=strlen(str_1),lenght_2=strlen(str_2);\r\r\n    if(lenght_1<lenght_2)\r\r\n    {\r\r\n        printf(\"<\");\r\r\n    }\r\r\n    else if(lenght_1>lenght_2)\r\r\n    {\r\r\n        printf(\">\");\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        i=strcmp(str_1,str_2);\r\r\n        if(i==1)\r\r\n        {\r\r\n            printf(\">\");\r\r\n        }\r\r\n        else if(i==-1)\r\r\n        {\r\r\n            printf(\"<\");\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            printf(\"=\");\r\r\n        }\r\r\n    }\r\r\n    return 0;\r\r\n}","84":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\nint x,c=1;\r\r\nscanf(\"%d\",&x);\r\r\n\r\r\nif(x>5)\r\r\n{\r\r\n    while(x>5)\r\r\n    {\r\r\n    x=x-5;\r\r\n    c++;\r\r\n    }\r\r\nprintf(\"%d\",c);\r\r\n}\r\r\nelse\r\r\n    printf(\"1\");\r\r\nreturn 0;\r\r\n}","94":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\/\/#include <math.h>\r\r\nint main()\r\r\n{\r\r\n  int n,i,j=1;\r\r\n  scanf(\"%d\",&n);\r\r\n  int *a=(int *)calloc(n,sizeof(int ));\r\r\n  a[0]=1;\r\r\n  for(i=1;i<n;i++)\r\r\n  {\r\r\n      a[j]=1;\r\r\n      while(a[j]==a[j-1])\r\r\n        {\r\r\n            a[j-1]=a[j]+1;\r\r\n            j--;\r\r\n        }\r\r\n        j++;\r\r\n  }\r\r\n  for(i=0;i<j;i++)\r\r\n    printf(\"%d \",a[i]);\r\r\n    return 0;\r\r\n}","96":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint p[]={6,2,5,5,4,5,6,3,7,6};\r\r\nint num,sum,a,b,i;\r\r\nscanf(\"%d%d\",&a,&b);\r\r\nsum=0;\r\r\nfor(i=a;i<=b;i++)\r\r\n{\r\r\na=i;\r\r\nwhile(a!=0)\r\r\n{\r\r\nnum=a%10;\r\r\na=a\/10;\r\r\nsum=sum+p[num];\r\r\n}\r\r\n}\r\r\nprintf(\"%d\\n\",sum);\r\r\nreturn 0;\r\r\n}","98":"#include<stdio.h>\r\r\n#include<limits.h>\r\r\n#include<math.h>\r\r\nint main()\r\r\n{\r\r\n    int n,i=0,codd=0; scanf(\"%d\",&n); long long int a[n],sum=0; double min = INFINITY;\r\r\n    for(i=0;i<n;i++)\r\r\n        {\r\r\n            scanf(\"%I64d\",&a[i]); sum+=a[i];\r\r\n            if(a[i]&1)\r\r\n             {\r\r\n                 codd++;\r\r\n                 if(a[i]<min)\r\r\n                    min=a[i];\r\r\n             }\r\r\n        }\r\r\n        if(codd&1)\r\r\n            sum-=min;\r\r\n        printf(\"%I64d\",sum);\r\r\n return 0;\r\r\n}","102":"#include<stdio.h>\r\r\nint compare(const void *a,const void *b)\r\r\n{\r\r\n    return *(int*)a-*(int*)b;\r\r\n}\r\r\nint main()\r\r\n{\r\r\n    long long a[26],ans=0,c=0;\r\r\n    int n,i; scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++) scanf(\"%I64d\",&a[i]);\r\r\n    qsort(a,n,sizeof(a[0]),compare);\r\r\n    for(i=n-1;i>0;i--)\r\r\n\t{\r\r\n\t\tif(a[i]<=a[i-1]) a[i-1]=a[i]?a[i]-1:0;\r\r\n\t\tans+=a[i];\r\r\n\t}\r\r\n\tans+=a[0];\r\r\n\tprintf(\"%I64d\\n\",ans);\r\r\n\treturn 0;\r\r\n}","104":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    double a,b,c,d;\r\r\n    double x;\r\r\n    scanf(\"%lf %lf %lf %lf\",&a,&b,&c,&d);\r\r\n    x=((b-a)\/(c+d));\r\r\n    printf(\"%.10lf\",x);\r\r\n}","106":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n\tint n, k, i, j;\r\r\n\tint tables[500][500];\r\r\n    int m;\r\r\n    \r\r\n\tscanf(\"%d\",&n);\r\r\n\tscanf(\"%d\", &k);\r\r\n \tk--;\r\r\n    for(m = 1, i = 0; i < n; i++){\r\r\n        for(j = 0; j < k; j++){\r\r\n            tables[i][j] = m++;\r\r\n        }\r\r\n    }    \r\r\n    for(i = 0; i < n; i++){\r\r\n        for(j = k; j < n; j++){\r\r\n            tables[i][j] = m++;\r\r\n        }\r\r\n    }\r\r\n\t   for(i = 0, m = 0; i < n; i++){\r\r\n\t\tm += tables[i][k];\r\r\n\t} \r\r\n    printf(\"%d\\n\",m);\r\r\n    \r\r\n\tfor(i = 0; i < n; i++)\r\r\n    {\r\r\n        for(j = 0; j < n; j++){\r\r\n            printf(\"%d \",tables[i][j]);\r\r\n        }\r\r\n        printf(\"\\n\");\r\r\n    }\r\r\n    \r\r\n\treturn 0;\r\r\n}","111":"#include <stdio.h>\r\r\nint main (){\r\r\n\tint a,b,c,i,j,f=0;\r\r\n\tchar arr[202];\r\r\n\tscanf(\"%d\",&a);\r\r\n\tscanf(\"%s\",arr);\r\r\n\tfor(i=0;i<a;i++)\r\r\n\t{\r\r\n\t\tb=0;c=0;\r\r\n\t\tfor(j=i;j<a;j++)\r\r\n\t\t{\r\r\n\t\t\tif(arr[j]=='U')b--;\r\r\n\t\t\tif(arr[j]=='D')b++;\r\r\n\t\t\tif(arr[j]=='L')c--;\r\r\n\t\t\tif(arr[j]=='R')c++;\r\r\n\t\t\tif(!b&&!c)f++;\r\r\n\t\t}\r\r\n\t}\r\r\n\tprintf(\"%d\",f);\r\r\n\r\r\n\r\r\n\r\r\n\treturn 0;\r\r\n}","113":"#include<stdio.h>\r\r\nlong long int a,b,c;\r\r\nlong long int ans;\r\r\nint main(){\r\r\n\tint i;\r\r\n\tscanf(\"%I64d%I64d\",&a,&b);\r\r\n\tc=a-b;\r\r\n\tif(c<0||c%2!=0){\r\r\n\t\tprintf(\"0\");\r\r\n\t\treturn 0;\r\r\n\t}\r\r\n\tc\/=2;\r\r\n\tif((b&c)!=0){\r\r\n\t\tprintf(\"0\");\r\r\n\t\treturn 0;\r\r\n\t}\r\r\n\tans=1;\r\r\n\tfor(i=0;b>0;i--){\r\r\n\t\tif(b%2==1)ans*=2;\r\r\n\t\tb\/=2;\r\r\n\t}\r\r\n\tif(c==0)ans-=2;\r\r\n\tprintf(\"%I64d\",ans);\r\r\n\treturn 0;\r\r\n}","115":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nvoid quick_sort(long long *a, long long *b, long long n) {\r\r\n\r\r\n\tint i, j, p, t;\r\r\n\tif (n < 2)\r\r\n\t\treturn;\r\r\n\tp = a[n \/ 2];\r\r\n\tfor (i = 0, j = n - 1;; i++, j--)\r\r\n\t{\r\r\n\t\twhile (a[i] < p)\r\r\n\t\t\ti++;\r\r\n\t\twhile (p < a[j])\r\r\n\t\t\tj--;\r\r\n\t\tif (i >= j)\r\r\n\t\t\tbreak;\r\r\n\t\tt = a[i];\r\r\n\t\ta[i] = a[j];\r\r\n\t\ta[j] = t;\r\r\n\t\tt = b[i];\r\r\n\t\tb[i] = b[j];\r\r\n\t\tb[j] = t;\r\r\n\t}\r\r\n\tquick_sort(a, b, i);\r\r\n\tquick_sort(a + i, b + i, n - i);\r\r\n}\r\r\n\r\r\n\r\r\nint main()\r\r\n{\r\r\n\tlong long d, n, m, p[200000], x[200000], i, j, poz, kap, tekcena = 0, moze = 1, potrosnja = 0, min, minpoz;\r\r\n\tscanf(\"%I64d%I64d%I64d\", &d, &n, &m);\r\r\n\tfor (i = 0; i<m; i++)\r\r\n\t\tscanf(\"%I64d%I64d\", &x[i], &p[i]);\r\r\n\tpoz = 0;\r\r\n\tkap = n;\r\r\n\ti = 0;\r\r\n\tquick_sort(x, p, m);\r\r\n\ti = 0;\r\r\n\tif (n >= d)\r\r\n\t\tprintf(\"%I64d\", potrosnja);\r\r\n\telse\r\r\n\t{\r\r\n\t\twhile (poz<d)\r\r\n\t\t{\r\r\n\t\t\tif (x[i] <= poz + n)\r\r\n\t\t\t{\r\r\n\t\t\t\tmin = p[i];\r\r\n\t\t\t\tminpoz = i;\r\r\n\t\t\t\twhile (i<m && p[i]>tekcena && x[i] <= poz + n)\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tif (p[i]<min)\r\r\n\t\t\t\t\t{\r\r\n\t\t\t\t\t\tmin = p[i];\r\r\n\t\t\t\t\t\tminpoz = i;\r\r\n\t\t\t\t\t}\r\r\n\t\t\t\t\ti++;\r\r\n\t\t\t\t}\r\r\n\t\t\t\tif (i == m)\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tif (poz + n >= d)\r\r\n\t\t\t\t\t{\r\r\n\t\t\t\t\t\tpotrosnja += (d - poz - kap)*tekcena;\r\r\n\t\t\t\t\t\tkap = 0;\r\r\n\t\t\t\t\t\tpoz = d;\r\r\n\t\t\t\t\t}\r\r\n\t\t\t\t\telse\r\r\n\t\t\t\t\t{\r\r\n\t\t\t\t\t\tpotrosnja += (n - kap)*tekcena;\r\r\n\t\t\t\t\t\tkap = n + poz - x[minpoz];\r\r\n\t\t\t\t\t\tpoz = x[minpoz];\r\r\n\t\t\t\t\t\ttekcena = p[minpoz];\r\r\n\t\t\t\t\t\ti = minpoz + 1;\r\r\n\t\t\t\t\t\tif (i == m)\r\r\n\t\t\t\t\t\t{\r\r\n\t\t\t\t\t\t\tif (poz + n >= d)\r\r\n\t\t\t\t\t\t\t{\r\r\n\t\t\t\t\t\t\t\tpotrosnja += (d - poz - kap)*tekcena;\r\r\n\t\t\t\t\t\t\t\tpoz = d;\r\r\n\t\t\t\t\t\t\t}\r\r\n\t\t\t\t\t\t\telse\r\r\n\t\t\t\t\t\t\t{\r\r\n\t\t\t\t\t\t\t\tpoz = d;\r\r\n\t\t\t\t\t\t\t\tmoze = 0;\r\r\n\t\t\t\t\t\t\t}\r\r\n\t\t\t\t\t\t}\r\r\n\t\t\t\t\t}\r\r\n\t\t\t\t}\r\r\n\t\t\t\telse if (x[i]>poz + n)\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tpotrosnja += (n - kap)*tekcena;\r\r\n\t\t\t\t\tkap = n + poz - x[minpoz];\r\r\n\t\t\t\t\tpoz = x[minpoz];\r\r\n\t\t\t\t\ttekcena = p[minpoz];\r\r\n\t\t\t\t\ti = minpoz + 1;\r\r\n\t\t\t\t}\r\r\n\t\t\t\telse if (p[i] <= tekcena)\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tpotrosnja += (x[i] - poz - kap)*tekcena;\r\r\n\t\t\t\t\tkap = 0;\r\r\n\t\t\t\t\tpoz = x[i];\r\r\n\t\t\t\t\ttekcena = p[i];\r\r\n\t\t\t\t\ti++;\r\r\n\t\t\t\t\tif (i == m)\r\r\n\t\t\t\t\t{\r\r\n\t\t\t\t\t\tif (poz + n >= d)\r\r\n\t\t\t\t\t\t{\r\r\n\t\t\t\t\t\t\tpotrosnja += (d - poz)*tekcena;\r\r\n\t\t\t\t\t\t\tpoz = d;\r\r\n\t\t\t\t\t\t}\r\r\n\t\t\t\t\t\telse\r\r\n\t\t\t\t\t\t{\r\r\n\t\t\t\t\t\t\tpoz = d;\r\r\n\t\t\t\t\t\t\tmoze = 0;\r\r\n\t\t\t\t\t\t}\r\r\n\t\t\t\t\t}\r\r\n\t\t\t\t}\r\r\n\t\t\t}\r\r\n\t\t\telse\r\r\n\t\t\t{\r\r\n\t\t\t\tmoze = 0;\r\r\n\t\t\t\tpoz = d;\r\r\n\t\t\t}\r\r\n\t\t}\r\r\n\t\tif (!moze)\r\r\n\t\t\tprintf(\"-1\");\r\r\n\t\telse\r\r\n\t\t\tprintf(\"%I64d\", potrosnja);\r\r\n\t}\r\r\n\treturn 0;\r\r\n}","117":"#include <stdio.h>\r\n\r\ntypedef unsigned int bitwise;\r\n\r\nunsigned\r\nround_down(unsigned x) \r\n{\r\n  bitwise y = 0x80000000;\r\n  while (y > x)\r\n    {\r\n      y >>= 1;\r\n    }\r\n  return y;\r\n}\r\n\r\nint\r\nmain()\r\n{\r\n  unsigned m,b,p,carry,matches,bottles,towels,k;\r\n  scanf(\"%u %u %u\",&m,&b,&p); \r\n\r\n  bottles = 0;\r\n  towels = p * m;\r\n  while (m > 1)  \r\n    {\r\n      k = round_down(m);\r\n      carry = m - k;\r\n      matches = k \/ 2;\r\n      bottles += matches + k * b;\r\n      m = carry + matches;  \r\n    }\r\n  printf(\"%u %u\\n\",bottles,towels);\r\n\r\n  return 0;\r\n}","119":"#include<stdio.h>\r\r\n#include<stdlib.h>\r\r\n#include<string.h>\r\r\n#define N 1000000009\r\r\nint cmpfunc (const void * a, const void * b)\r\r\n{\r\r\n   return ( *(int*)a - *(int*)b );\r\r\n}\r\r\n\r\r\nint maxi(int a,int b)\r\r\n{\r\r\n\tint c=a>b ? a:b;\r\r\n\treturn c;\r\r\n}\r\r\nint mini(int a,int b)\r\r\n{\r\r\n\tint c=a>b ? b:a;\r\r\n\treturn c;\r\r\n}\r\r\nint a[100005],b[100005];\r\r\nint com(int x)\r\r\n{\r\r\n int c=(x*(x-1))\/2;\r\r\n\treturn c;\r\r\n}\r\r\nint main()\r\r\n{\r\r\n\tint r[109],c[109],i,j,ci=0,n;\r\r\n\tchar a[109][109];\r\r\n\tfor(i=0;i<107;i++)\r\r\n\t{\r\r\n\t\tr[i]=0;\r\r\n\t\tc[i]=0;\r\r\n\t}\r\r\n\tscanf(\"%d\",&n);\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tscanf(\"%s\",&a[i]);\r\r\n\t}\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tfor(j=0;j<n;j++)\r\r\n\t\t{\r\r\n\t\t\tif(a[i][j]=='C')\r\r\n\t\t\tr[i]++;\r\r\n\t\t\tif(a[j][i]=='C')\r\r\n\t\t\tc[i]++;\r\r\n\t\t}\r\r\n\t}\r\r\n\t\tfor(i=0;i<n;i++)\r\r\n\t\t{\r\r\n\t\tci+=com(r[i]);\r\r\n\t\tci+=com(c[i]);\r\r\n\t\t}\t\r\r\n\t\tprintf(\"%d\\n\",ci);\r\r\n\treturn 0;\r\r\n}","122":"#include<stdio.h>\r\n#define MIN(x,y) x<y?x:y\r\nlong long dp[2050][2050];\r\nint md=1e9+7;\r\nint main()\r\n {\r\n \tint n,m,i,j;\r\n \tchar s[100050];\r\n \tscanf(\"%d%d\",&n,&m);\r\n \tscanf(\"%s\",s);\r\n    dp[0][0]=1;\r\n    for(i=1;i<=n-m;++i)\r\n      for(j=0;j<=i;++j)\r\n        {\r\n        \tif(j==0)\r\n        \t  {\r\n        \t  \t dp[i][j]=dp[i-1][j+1];\r\n\t\t\t  }\r\n\t\t\t  else\r\n\t\t\t    {\r\n\t\t\t    \tdp[i][j]=(dp[i-1][j-1]+dp[i-1][j+1]) % md;\r\n\t\t\t\t}\r\n\t\t}\r\n  int minn=m+1;int q=0;\r\n\t for(i=0;i<m;++i)\r\n\t   {\r\n\t   \t if(s[i]=='(') ++q;else --q;\r\n\t   \t minn=MIN(minn,q);\r\n\t   }\r\n\tlong long ans=0;\r\n\tfor(i=0;i<=n-m;++i)\r\n\t  {\r\n\t  \t for(j=0;j<=i;++j)\r\n\t  \t   {\r\n\t  \t   \t  if(j+minn>=0 && j+q<=n-m-i)\r\n\t  \t   \t    {\r\n\t  \t   \t    \tans=(ans+dp[i][j]*dp[n-m-i][j+q])%md;\r\n\t\t\t   }\r\n\t\t\t }\r\n\t  }\r\n\t  printf(\"%164d\",ans);\r\n\t  return 0;\r\n }","124":"#include<stdio.h>\r\nint main()\r\n{\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tprintf(\"25\");\r\n\treturn 0;\r\n}","128":"#include<stdio.h>\r\nint main()\r\n{\r\n    long long int count=0,power=1;\r\n    int n,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        power=2*power;\r\n        count=count+power;\r\n    }\r\nprintf(\"%lld\",count);\r\n}","132":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,c,i,j;\r\r\n    scanf(\"%d%d%d\",&a,&b,&c);\r\r\n    for(i=0;i<10000;i++)\r\r\n    {\r\r\n        for(j=0;j<10000;j++)\r\r\n        {\r\r\n            if((a*i)+(b*j)==c)\r\r\n            {\r\r\n                printf(\"Yes\"); return 0;\r\r\n            }\r\r\n        }\r\r\n\r\r\n    }\r\r\n    printf(\"No\");\r\r\n\r\r\n}","135":"#include <stdio.h>\r\n#include <string.h>\r\n\r\ntypedef struct {\r\n    char show;\r\n    int next[26];\r\n} Node_t;\r\nNode_t Trie[2000001];\r\nchar Str[2000001][11];\r\n\r\nint main()\r\n{\r\n    int N, i, j;\r\n    scanf(\"%d\", &N);\r\n    for(i = 0; i < N; ++i) {\r\n        scanf(\"%s\", Str[i]);\r\n    }\r\n    memset(Trie[0].next, -1, sizeof(Trie[0].next));\r\n    int alloc = 1;\r\n    for(i = N - 1; i >= 0; --i) {\r\n        int s = 0;\r\n        int l = strlen(Str[i]);\r\n        for(j = 0; j < l; ++j) {\r\n            if(Trie[s].next[Str[i][j] - 'a'] == -1) {\r\n                memset(Trie[alloc].next, -1, sizeof(Trie[alloc].next));\r\n                Trie[s].next[Str[i][j] - 'a'] = alloc;\r\n                ++alloc;\r\n            }\r\n            s = Trie[s].next[Str[i][j] - 'a'];\r\n        }\r\n        if(!Trie[s].show) {\r\n            puts(Str[i]);\r\n            Trie[s].show = 1;\r\n        }\r\n    }\r\n    return 0;\r\n}","136":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nunsigned likes[1000001];\r\n\r\nint\r\nmain()\r\n{\r\n  size_t i;\r\n  unsigned n,*max_ptr,c;\r\n\r\n  memset(likes,0,sizeof(likes));\r\n  max_ptr = likes;\r\n\r\n  scanf(\"%u\",&n);\r\n  for (i = 0; i < n; ++i)\r\n    {\r\n      scanf(\"%u\",&c);\r\n      if (++likes[c] > *max_ptr)\r\n        {\r\n          max_ptr =  &likes[c];\r\n        }\r\n    }\r\n  printf(\"%ld\\n\",(max_ptr - likes));\r\n  \r\n  exit(EXIT_SUCCESS);\r\n}","139":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,m,a;\r\r\n    scanf(\"%d %d\",&n,&m);\r\r\n    if(m%2==0)\r\r\n    {a=(n\/2)-(m\/2)+1;\r\r\n    printf(\"%d\",a);}\r\r\n    else\r\r\n    printf(\"%d\",m\/2+1);\r\r\n}","142":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nint main()\r\r\n{\r\r\n    long int n;\r\r\n    int i,j,flag=0;\r\r\n    scanf(\"%ld\",&n);\r\r\n    char a[n];\r\r\n    long long int b[n],c=1;\r\r\n    scanf(\"%s\",&a);\r\r\n    for (i=1;i<=n;i++)\r\r\n        scanf(\"%lld\",&b[i]);\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        if(a[c-1]=='>')\r\r\n            c=c+b[c];\r\r\n        else if(a[c-1]=='<')\r\r\n            c=c-b[c];\r\r\n        if(c<1 || c>n)\r\r\n            flag=1;\r\r\n        if(flag==1)\r\r\n            break;\r\r\n    }\r\r\n\tif(flag==1)\r\r\n\t\tprintf(\"FINITE\\n\");\r\r\n\telse\r\r\n\t\tprintf(\"INFINITE\\n\");\r\r\n    return 0;\r\r\n}","144":"#include <stdio.h>\r\nint m,n;\r\nint a[110][110];\r\nint max1;\r\nint count=1;\r\nvoid spiralPrint()\r\n{\r\n    int i, k = 0, l = 0;\r\n    while (k < m && l < n)\r\n    {\r\n        for (i = l; i < n; ++i)\r\n        {\r\n            a[k][i] = count;\r\n            if(count==max1)\r\n                count=0;\r\n            else if(count!=0)\r\n                count++;\r\n            \/\/printf(\"%d MKK1\\n\",count);\r\n           \/\/ printf(\"%d \", a[k][i]);\r\n        }\r\n        k++;\r\n        for (i = k; i < m; ++i)\r\n        {\r\n            a[i][n-1] = count;\r\n            if(count==max1)\r\n                count=0;\r\n            else if(count!=0)\r\n                count++;\r\n           \/\/ printf(\"%d MKK2\\n\",count);\r\n           \/\/ printf(\"%d \", a[i][n-1]);\r\n        }\r\n        n--;\r\n        if ( k < m)\r\n        {\r\n            for (i = n-1; i >= l; --i)\r\n            {\r\n                a[m-1][i] = count;\r\n                if(count==max1)\r\n                    count=0;\r\n                else if(count!=0)\r\n                    count++;\r\n               \/\/ printf(\"%d MKK3\\n\",count);\r\n                \/\/printf(\"%d \", a[m-1][i]);\r\n            }\r\n            m--;\r\n        }\r\n        if (l < n)\r\n        {\r\n            for (i = m-1; i >= k; --i)\r\n            {\r\n                a[i][l] = count;\r\n                if(count==max1)\r\n                    count=0;\r\n                else if(count!=0)\r\n                    count++;\r\n               \/\/ printf(\"%d MKK4\\n\",count);\r\n               \/\/ printf(\"%d \", a[i][l]);\r\n            }\r\n            l++;    \r\n        }        \r\n    }\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d%d\",&max1,&m,&n);\r\n    int x = m;\r\n    int y = n;\r\n    if(m*n<max1)\r\n        printf(\"-1\\n\");\r\n    else\r\n    {\r\n        spiralPrint();\r\n         int i,j;\r\n        for(i=0;i<x;i++)\r\n        {\r\n            for(j=0;j<y;j++)\r\n            {\r\n                printf(\"%d \",a[i][j]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n        \r\n    }\r\n   \/\/ printf(\"%d%d\\n\",x,y);\r\n   \r\n    return 0;\r\n}","146":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    long long int s,n,k,b;\r\r\n    scanf(\"%I64d%I64d\",&n,&k);\r\r\n    if(k>=(n\/2))\r\r\n    {\r\r\n        s=((n-1)*n)\/2;\r\r\n        printf(\"%I64d\",s);\r\r\n\r\r\n    }\r\r\n    else\r\r\n    {  b=n-1;\r\r\n       s=((k*((2*b)-(k-1)))\/2)+(n-(2*k))*k+(((k-1)*(k))\/2);\r\r\n       printf(\"%I64d\",s);\r\r\n    }\r\r\n}","148":"#include<stdio.h>\r\r\nint main(){\r\r\n    int a, b, time=0;\r\r\n    scanf(\"%d %d\", &a, &b);\r\r\n    while(a>0 && b>0){\r\r\n        if(a==1 && b==1)\r\r\n            break;\r\r\n        if(a<b)\r\r\n            {a++;\r\r\n            b-=2;\r\r\n            }\r\r\n        else{\r\r\n            b++;\r\r\n            a-=2;\r\r\n            }\r\r\n        time++;\r\r\n    }\r\r\n    printf(\"%d\\n\", time);\r\r\n    return 0;\r\r\n    }","155":"#include <stdio.h>\r\n\r\n\/*\r\n * http:\/\/codeforces.com\/problemset\/problem\/652\/A\r\n *\/\r\nint main()\r\n{\r\n    int hc = 0, ha = 0;\r\n    scanf(\"%d %d\", &hc, &ha);\r\n\r\n    int a = 0, b = 0, d = 0;\r\n    scanf(\"%d %d\", &a, &b);\r\n\r\n    hc += 8 * a;\r\n\r\n    if (hc < ha && a <= b) {\r\n        printf(\"-1\\n\");\r\n\r\n        return 0;\r\n    }\r\n\r\n    while (hc < ha) {\r\n        hc += a * 12 - b * 12;\r\n        d += 1;\r\n    }\r\n\r\n    printf(\"%d\\n\", d);\r\n\r\n    return 0;\r\n}","156":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint compare(const void *a, const void *b);\r\n\r\n\/*\r\n * http:\/\/codeforces.com\/problemset\/problem\/652\/B\r\n *\/\r\nint main()\r\n{\r\n    int n = 0;\r\n    scanf(\"%d\", &n);\r\n\r\n    int *a = (int *)malloc(n * sizeof(int));\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d \", a + i);\r\n    }\r\n\r\n    qsort(a, n, sizeof(int), compare);\r\n\r\n    int s = n \/ 2;\r\n    if (n % 2) {\r\n        s += 1;\r\n    }\r\n    int *b = (int *)malloc(n * sizeof(int));\r\n    for (int i = 0, j = s, k = 0; i < n \/ 2, j < n, k < n - 1; i++, j++, k += 2) {\r\n        b[k] = a[i];\r\n        b[k + 1] = a[j];\r\n\r\n        if (b[k + 1] < b[k]) {\r\n            printf(\"Impossible\\n\");\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    if (n % 2) {\r\n        b[n - 1] = a[n \/ 2];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        printf(\"%d \", b[i]);\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nint compare(const void *a, const void *b)\r\n{\r\n    int x = *(int *)a;\r\n    int y = *(int *)b;\r\n\r\n    if (x > y) {\r\n        return 1;\r\n    } else if (x < y) {\r\n        return -1;\r\n    }\r\n\r\n    return 0;\r\n}","159":"#include<stdio.h>\r\r\nint ara[1050];\r\r\n\r\r\nmain()\r\r\n{\r\r\n    int n,a[100],i,j,temp,c=0,p=0,b[100];\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d\",&a[i]);\r\r\n    }\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        for(j=i+1;j<n;j++)\r\r\n        {\r\r\n            if(a[i]>a[j])\r\r\n            {\r\r\n                temp=a[i];\r\r\n                a[i]=a[j];\r\r\n                a[j]=temp;\r\r\n            }\r\r\n        }\r\r\n    }\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n       ara[a[i]]++;\r\r\n    }\r\r\n    for(i=0;i<1001;i++)\r\r\n    {\r\r\n        if(ara[i]!=0) {b[p]=i;\r\r\n             p++;}   }\r\r\n\r\r\n\r\r\n   for(i=0;i<p-2;i++)\r\r\n   {\r\r\n      if(b[i+2]-b[i]<=2) c++;\r\r\n   }\r\r\n  \/\/ printf(\"%d\\n\",c);\r\r\n    if(c>=1) printf(\"YES\\n\");\r\r\n    else printf(\"NO\\n\");\r\r\n\r\r\n\r\r\nreturn 0;\r\r\n}","161":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int a,b,c,d,e;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n  if(c>=0)\r\n  {\r\n\r\n      if(c<=a-b)\r\n        d=b+c;\r\n      else\r\n        d=(c-a+b)%a;\r\n      if(d==0)\r\n        d=a;\r\n  }\r\n  if(c<0)\r\n  {\r\n      if(abs(c)<=b-1)\r\n        {\r\n            d=b+c;\r\n        }\r\n      else\r\n      {\r\n        e=(abs(c)-b+1)%a;\r\n        d=a-e+1;\r\n      }\r\n      if(e==0)\r\n      {\r\n          d=1;\r\n      }\r\n  }\r\n  printf(\"%d\",d);\r\n    return 0;\r\n}","163":"#include<stdio.h>\r\r\nint a[2020];\r\r\nint gcd(int a,int b);\r\r\nint main(){\r\r\n    int i,n,k;\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=k=0;i<n;i++){\r\r\n        scanf(\"%d\",a+i+k);\r\r\n        if(i && gcd(a[i+k-1],a[i+k])!=1){\r\r\n            a[i+k+1]=a[k+i];\r\r\n            a[i+k]=1;\r\r\n            k++;\r\r\n        }\r\r\n    }\r\r\n    printf(\"%d\\n\",k);\r\r\n    for(i=0;i<(n+k);i++){\r\r\n        printf(\"%d \",a[i]);\r\r\n    }\r\r\n    return 0;\r\r\n}\r\r\nint gcd(int a,int b){\r\r\n    if (a==0){\r\r\n        return b;\r\r\n    }\r\r\n    return gcd( b%a, a );\r\r\n}","182":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\n\tint n,i,max=0,sum=0;\r\r\n\tscanf(\"%d\",&n);\r\r\n\tint a[n];\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tscanf(\"%d\",&a[i]);\r\r\n\t\tif(max < a[i])\r\r\n\t\t\tmax = a[i];\r\r\n\t\tsum += a[i];\r\r\n\t}\r\r\n\tprintf(\"%d\\n\",(2*max-sum+1));\r\r\n\treturn 0;\r\r\n}","184":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,i,j,count;\r\r\n    while(scanf(\"%d\",&n)==1)\r\r\n    {\r\r\n        count=0;\r\r\n    if(n==1||n==2)\r\r\n        count=1;\r\r\n    else if(n%3==0)\r\r\n        count=2*(n\/3);\r\r\n    else\r\r\n    {\r\r\n        if((n-1)%3==0)\r\r\n            count=((n-1)\/3)*2+1;\r\r\n        else if((n-2)%3==0)\r\r\n           count=((n-2)\/3)*2+1;;\r\r\n    }\r\r\n    printf(\"%d\\n\",count);\r\r\n    }\r\r\n    return 0;\r\r\n}","188":"#include <stdio.h>\r\r\n\r\r\nint main(void) {\r\r\n\tint i,n,pos;\r\r\n\tscanf(\"%d\",&n);\r\r\n\t\r\r\n\tchar str[n+1];\r\r\n\tint d[n],visit[n];\r\r\n\t\r\r\n\tscanf(\"%s\",str);\r\r\n\tfor(i=0;i<n;i++) {\r\r\n\t\tscanf(\"%d\",&d[i]);\r\r\n\t\tvisit[i]=0;\r\r\n\t}\r\r\n\ti=0;\r\r\n\t\r\r\n\twhile(1) {\r\r\n\t\tif(visit[i]==1) {\r\r\n\t\t\tprintf(\"INFINITE\");\r\r\n\t\t\treturn 0;\r\r\n\t\t}\r\r\n\t\tvisit[i]++;\r\r\n\t\t\r\r\n\t\tif(str[i]=='>') pos = i+d[i];\r\r\n\t\telse pos = i-d[i];\r\r\n\t\t\r\r\n\t\tif(pos<0 || pos>n-1) {\r\r\n\t\t\tprintf(\"FINITE\");\r\r\n\t\t\treturn 0;\r\r\n\t\t}\r\r\n\t\t\r\r\n\t\ti=pos;\r\r\n\t}\r\r\n\t\r\r\n\t\r\r\n\treturn 0;\r\r\n}","193":"#include <stdio.h>\r\n\r\nint main(void) {\r\n\tint n,r,q;\r\n\tscanf(\"%d\",&n);\r\n\tq=n\/7;\r\n\tr=n%7;\r\n\tif(r==0)\r\n\t{\r\n\t\tprintf(\"%d %d\",q*2,q*2);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(r>5)\r\n\t\tprintf(\"%d %d\",q*2+1,q*2+2);\r\n\t\telse if(r==1)\r\n\t\tprintf(\"%d %d\",q*2,q*2+1);\r\n\t\telse\r\n\t\tprintf(\"%d %d\",q*2,q*2+2);\r\n\t}\r\n\treturn 0;\r\n}","195":"#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nlong long int A[1000005];\r\nlong long int B[1000005];\r\nlong long int n,k;\r\n\r\n\r\nint F(long long int x)\r\n{\r\n    long long int need;   long long int tk;  tk=k;\r\n\r\n    need=0;  int i;\r\n\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        if((A[i]*x)<=B[i])\r\n        {\r\n            need=0;\r\n        }\r\n\r\n        else\r\n        {\r\n            need=((A[i]*x)-B[i]);\r\n        }\r\n\r\n        if(need>tk)\r\n            return 0;\r\n\r\n        else\r\n            tk=tk-need;\r\n\r\n\r\n    }\r\n\r\n    return 1;\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    long long int l,r,m;  int i;\r\n\r\n     scanf(\"%lli %lli\",&n,&k);\r\n\r\n     for(i=1;i<=n;i++)\r\n        scanf(\"%lli\",&A[i]);\r\n\r\n         for(i=1;i<=n;i++)\r\n        scanf(\"%lli\",&B[i]);\r\n\r\n\r\n\r\n\r\n\r\n     l=0;  r=10000000000;\r\n\r\n     while(l<r)\r\n     {\r\n         m=(l+r+1)\/2;\r\n\r\n        \/\/ printf(\"%lli-%d\\n\",m,F(m));\r\n\r\n         if(F(m)==1)\r\n         {\r\n             l=m;\r\n         }\r\n\r\n         else\r\n         {\r\n             r=m-1;\r\n             \r\n            \r\n         }\r\n     }\r\n\r\n     printf(\"%lli\\n\",l);\r\n}","197":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n        char digit[]={\"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399\"}\r\r\n        ;\r\r\n        int n,i,temp;\r\r\n        scanf(\"%d\",&n);\r\r\n        printf(\"%c\",digit[n-1]);\r\r\n        return 0;\r\r\n}","199":"#include <stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int str_size;\r\r\n    scanf(\"%d\", &str_size);\r\r\n    if(str_size>26)\r\r\n    {\r\r\n        printf(\"-1\");\r\r\n        return 0;\r\r\n    }\r\r\n    char str[str_size+1];\r\r\n    int i,result=0,count[26]={0};\r\r\n    scanf(\"%s\", str);\r\r\n    for(i=0;i<str_size;i++)\r\r\n    {\r\r\n        count[str[i]-'a']++;\r\r\n    }\r\r\n    for(i=0;i<26;i++)\r\r\n    {\r\r\n        if(count[i]!=0)\r\r\n        {\r\r\n            result=result+count[i]-1;\r\r\n        }\r\r\n    }\r\r\n    printf(\"%d\", result);\r\r\n    return 0;\r\r\n}","201":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int i,j,k=0,n;\r\r\n    scanf(\"%d\",&n);\r\r\n    int ar[n];\r\r\n    for(i=0;i<n;i++) scanf(\"%d\",&ar[i]);\r\r\n    if(ar[0]>15) k=15;\r\r\n    else\r\r\n    {\r\r\n        for(i=0;i<n-1;i++)\r\r\n        {\r\r\n            if(ar[i+1]-ar[i]>15)\r\r\n            {\r\r\n                k=ar[i]+15;\r\r\n                if(k>90)\r\r\n                    k=90;\r\r\n                break;\r\r\n            }\r\r\n        }\r\r\n        if(k==0)\r\r\n        {\r\r\n            k= ar[i]+15;\r\r\n            if(k>90) k=90;\r\r\n        }\r\r\n    }\r\r\n    printf(\"%d\\n\",k);\r\r\n    return 0;\r\r\n}","203":"#include<stdio.h>\r\nmain()\r\n{\r\n    __int64 s,max=-1,min=10000000,de,i;\r\n    int n,a,b,c,d,x[5];\r\n    scanf(\"%d %d %d %d %d\",&n,&a,&b,&c,&d);\r\n    x[1]=a+b;\r\n    x[2]=a+c;\r\n    x[3]=b+d;\r\n    x[4]=c+d;\r\n    de=0;\r\n    for(i=1;i<5;i++)\r\n    {\r\n        if(x[i]>max)\r\n            max=x[i];\r\n        if(x[i]<min)\r\n            min=x[i];\r\n    }\r\n    de=max-min;\r\n    s=(n-de)*n;\r\n    if(n-de>0)\r\n    printf(\"%I64d\",s);\r\n    else\r\n        printf(\"0\");\r\n}","205":"#include<stdio.h>  \r\r\n#include<string.h>  \r\r\n#define ll __int64  \r\r\n#define lson l, m, idx<<1  \r\r\n#define rson m+1, r, (idx<<1)|1  \r\r\n  \r\r\nint tree[111111*4];  \r\r\nint posn[111111*4];  \r\r\nint a[105000];  \r\r\nll dp[105000]; \r\r\n\r\r\nvoid update(int p, int val, int l, int r, int idx);\r\r\nvoid build(int l, int r, int idx);\r\r\nvoid pushup(int idx);\r\r\nint query(int L, int R, int l, int r, int idx, int *pos);  \r\r\n \r\r\n \r\r\nint main()  \r\r\n{  \r\r\n    int n, i;  \r\r\n    scanf(\"%d\",&n);\r\r\n    \r\r\n    memset(dp,0,sizeof(dp));  \r\r\n    \r\r\n    ll ans=0;  \r\r\n    build(1, n, 1);\r\r\n\t  \r\r\n    for(i=1;i<=n-1;i++){\r\r\n\t\tscanf(\"%d\",&a[i]); \t\r\r\n\t} \r\r\n\t\r\r\n    update(n,n,1,n,1);  \r\r\n    \r\r\n\tfor(i=n-1;i>=1;i--){  \r\r\n        int temp;  \r\r\n        query(i+1, a[i], 1, n, 1, &temp);  \r\r\n        dp[i] = dp[temp] + (n-i) - (a[i]-temp);  \r\r\n        ans += dp[i];  \r\r\n        update(i, a[i], 1, n, 1);  \r\r\n    }  \r\r\n    printf(\"%I64d\\n\",ans);  \r\r\n}  \r\r\n\r\r\nvoid update(int p, int val, int l, int r, int idx)  \r\r\n{  \r\r\n    if (l == r){  \r\r\n        tree[idx] = val;  \r\r\n    }else{  \r\r\n        int m = (l + r) >> 1;  \r\r\n        if (p <= m){  \r\r\n            update(p, val, lson);  \r\r\n        }else{  \r\r\n            update(p, val, rson);  \r\r\n        }  \r\r\n        pushup(idx);  \r\r\n    }  \r\r\n}  \r\r\n\r\r\nvoid build(int l, int r, int idx)  \r\r\n{  \r\r\n    if (l == r){  \r\r\n        tree[idx]=0;  \r\r\n        posn[idx] = l;  \r\r\n    }else{  \r\r\n        int m = (l + r) >> 1;  \r\r\n        build(lson);  \r\r\n        build(rson);  \r\r\n        pushup(idx);  \r\r\n    } \r\r\n}\r\r\n\r\r\n\r\r\nvoid pushup(int idx)  \r\r\n{  \r\r\n    if (tree[idx<<1] > tree[idx<<1|1]){  \r\r\n        tree[idx] = tree[idx<<1];  \r\r\n        posn[idx] = posn[idx<<1];  \r\r\n    }else{  \r\r\n        tree[idx] = tree[idx<<1|1];  \r\r\n        posn[idx] = posn[idx<<1|1];  \r\r\n    }  \r\r\n}    \r\r\n\r\r\nint query(int L, int R, int l, int r, int idx, int *pos)  \r\r\n{  \r\r\n    if (L <= l && r <= R)  {  \r\r\n        *pos = posn[idx];  \r\r\n        return tree[idx];  \r\r\n    }else{  \r\r\n        int m = (l + r) >> 1;  \r\r\n        int ret1 = -32768;  \r\r\n        int ret2 = -32768;  \r\r\n        int pa, pb;  \r\r\n        int *pos1 = &pa;  \r\r\n        int *pos2 = &pb;  \r\r\n        if (L <= m) {  \r\r\n            ret1 = query(L, R,  lson, pos1);  \r\r\n        }  \r\r\n        if (R > m){  \r\r\n            ret2 = query(L, R, rson, pos2);  \r\r\n        }  \r\r\n        if (ret1 > ret2){  \r\r\n            *pos = pa;  \r\r\n        }else{  \r\r\n            *pos = pb;  \r\r\n            ret1 = ret2;  \r\r\n        }  \r\r\n        return ret1;  \r\r\n    }  \r\r\n}","220":"#include<stdio.h>\r\r\n#include<math.h>\r\r\nmain()\r\r\n{\r\r\n\tint n,i,j,c,d;\r\r\n\tscanf(\"%d\",&n);\r\r\n\tint a[n];\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tscanf(\"%d\",&a[i]);\r\r\n\t\tif(a[i]==n)c=i+1;\r\r\n\t\tif(a[i]==1)d=i+1;\r\r\n\t}\r\r\n\tif(c-d>0)\r\r\n    {\r\r\n    \tif(n-c>d-1)c=n;\r\r\n    \telse d=1;\r\r\n\t}\r\r\n\telse\r\r\n\t{\r\r\n\t\tif(n-d>c-1)d=n;\r\r\n\t\telse c=1;\r\r\n\t}\r\r\n\tprintf(\"%d\",abs(c-d));\r\r\n}","222":"#include<stdio.h>\r\r\nint main ()\r\r\n{\r\r\n    int n,h,a[1001],i,s=0;\r\r\n    scanf(\"%d %d\", &n,&h);\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d\",&a[i]);\r\r\n        if(a[i]>h)\r\r\n        {\r\r\n            s++;\r\r\n        }\r\r\n    }\r\r\n    n=n-s;\r\r\n    n=(n*1)+(s*2);\r\r\n    printf(\"%d\",n);\r\r\n    return 0;\r\r\n}","227":"#include<stdio.h>\r\r\n\r\r\nunsigned long long int m=1000000007;\r\r\nunsigned long long int bigmod(unsigned long long int x, unsigned long long int n)\r\r\n{\r\r\n    if(n==0) return 1;\r\r\n\r\r\n    if(n%2==0)\r\r\n    {\r\r\n    unsigned long long int num= bigmod(x,n\/2);\r\r\n    return ((num%m)*(num%m))%m;\r\r\n    }\r\r\n\r\r\n    else\r\r\n        return ((x%m)*(bigmod(x,n-1)%m))%m;\r\r\n\r\r\n}\r\r\n\r\r\nint main()\r\r\n{\r\r\n    unsigned long long int  sum1=0,sum2=0,sum=0,n,A,B,x;\r\r\n\r\r\n    scanf(\"%llu %llu %llu %llu\",&A,&B,&n,&x);\r\r\n\r\r\n    if(A==1) printf(\"%llu\\n\",((x%m)+((B%m)*(n%m))%m)%m);\r\r\n    else{\r\r\n\r\r\n    sum1=bigmod(A,n)%m;\r\r\n    sum2=(sum1-1)%m;\r\r\n\r\r\n    sum1=((sum1%m)*(x%m))%m;\r\r\n    sum2=((sum2%m)*(B%m))%m;\r\r\n\r\r\n    sum2=((sum2%m)* (bigmod(A-1,m-2))%m)%m;\r\r\n\r\r\n    sum=((sum1%m)+(sum2%m))%m;\r\r\n\r\r\n    printf(\"%llu\\n\",sum%m);\r\r\n\r\r\n    }\r\r\n    return 0;\r\r\n}","229":"#include <stdio.h>\r\n#include <math.h>\r\n\r\n\r\nconst int N = 24;\r\n\r\nint \r\ndec_num(int* d, int n){\r\n  int rslt = d[0];\r\n  int seven_plus  = 7;\r\n  for(int i = 1; i < n; i++){\r\n    rslt += d[i] * seven_plus;\r\n    seven_plus *=7;\r\n  }\r\n  return rslt;\r\n}\r\n\r\nint\r\nnext(int* d, int n, int h_limit){\r\n  if( dec_num(d,n) >= h_limit - 1 ){\r\n    return 0;\r\n  }else{\r\n    for(int i= 0; i< n; i++){\r\n      if(d[i] < 6){\r\n        d[i]++;\r\n        break;\r\n      }else{\r\n        d[i]=0;\r\n      }\r\n    }\r\n  }\r\n  return 1;\r\n}\r\n\r\n\r\nint\r\nis_valid(int* d, int n){\r\n  int flag[7];\r\n  for(int i=0; i<7; i++) flag[i] =0;\r\n\r\n  for(int i = 0; i < n; i++){\r\n    int x = d[i];\r\n    if(flag[x]){\r\n      return 0;\r\n    }else{\r\n      flag[x]= 1;\r\n    }\r\n  }\r\n\r\n  return 1;\r\n}\r\n\r\nint\r\nis_valid_2(int* d1, int* d2, int n1, int n2){\r\n\r\n  for(int i = 0; i < n1; i++){\r\n    for(int j = 0; j < n2; j++){\r\n      if(d1[i]==d2[j]) return 0;\r\n    }\r\n  }\r\n\r\n\/\/  for(int i = 0; i < n1; i++){\r\n\/\/    printf(\"=%d \", d1[i]);\r\n\/\/  }\r\n\/\/  printf(\"\\n\");\r\n\/\/\r\n\/\/  for(int i = 0; i < n2; i++){\r\n\/\/    printf(\"=%d \", d2[i]);\r\n\/\/  }\r\n\/\/  printf(\"\\n\");\r\n\r\n  return 1;\r\n}\r\n\r\nint\r\nmain(){\r\n  int hour[N];\r\n  int minute[N];\r\n\r\n  int n,m;\r\n  scanf(\"%d %d\", &n, &m);\r\n\r\n  int ndd=1;\r\n  int seven = 7;\r\n  int rslt=7;\r\n  while(rslt<=n-1){\r\n    rslt +=6*seven;\r\n    seven *=7;\r\n    ndd++;\r\n  }\r\n\r\n  int ndm=1;\r\n  seven = 7;\r\n  rslt=7;\r\n  while(rslt<=m-1){\r\n    rslt +=6*seven;\r\n    seven *=7;\r\n    ndm++;\r\n  }\r\n\r\n  \/\/Debug\r\n\/\/  printf(\"--%d %d\\n\",ndd,ndm);\r\n  \/\/return 0;\r\n\r\n  if(ndd+ndm>7){\r\n    printf(\"%d\\n\",0);\r\n    return 0;\r\n  }\r\n\r\n  \/\/Now ndd and ndm are really small, I will use brute force.\r\n  int count = 0;\r\n\r\n  for(int i=0; i< ndd; i++) hour[i] = 0;\r\n\r\n  \/\/Debug\r\n  \/\/int d[] = {6,6,6,6,6};\r\n  \/\/int x = dec_num(d,5);\r\n  \/\/printf(\"?? %d\\n\",x);\r\n  \r\n\/\/  do {\r\n\/\/    int x = dec_num(hour,ndd);\r\n\/\/      for(int i=0; i< ndm; i++) minute[i] = 0;\r\n\/\/      do {\r\n\/\/        int y = dec_num(minute,ndm);\r\n\/\/        printf(\">>%d %d\\n\", x,y);\r\n\/\/      }while( next(minute,ndm, m) );\r\n\/\/  }while( next(hour,ndd,n) );\r\n\r\n  do{\r\n    if( is_valid(hour,ndd) ){\r\n      for(int i=0; i< ndm; i++) minute[i] = 0;\r\n      do{\r\n        if( is_valid(minute,ndm) ){\r\n          if( is_valid_2(hour,minute, ndd,ndm) ){\r\n            count++;\r\n\/\/            int x, y;\r\n\/\/            x = dec_num(hour,ndd);\r\n\/\/            y = dec_num(minute,ndm);\r\n\/\/            printf(\"--%d %d\\n\", x,y);\r\n          }\r\n        }\r\n      }while( next(minute,ndm, m) );\r\n    }\r\n  }while( next(hour,ndd,n) );\r\n\r\n  printf(\"%d\\n\",count);\r\n  return 0;\r\n}","231":"#include<stdio.h>\r\r\nint A[105];\r\r\nint main()\r\r\n{\r\r\n    int n,i,temp,j;\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++) scanf(\"%d\",&A[i]);\r\r\n\r\r\n    for(i=0;i<n-1;i++)\r\r\n    {\r\r\n        for(j=0;j<n-i-1;j++)\r\r\n        {\r\r\n            if(A[j]>A[j+1])\r\r\n            {\r\r\n                int temp=A[j];\r\r\n                A[j]=A[j+1];\r\r\n                A[j+1]=temp;\r\r\n                printf(\"%d %d\\n\",j+1,j+2);\r\r\n            }\r\r\n        }\r\r\n    }\r\r\n\r\r\n    return 0;\r\r\n}","232":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    long long int n,x,r,d,count=0,i=0;\r\r\n    char o[2];\r\r\n    scanf(\"%lld%lld\",&n,&x);r=x;\r\r\n    for(i=0;i<n;++i)\r\r\n    {\r\r\n        scanf(\"%s%lld\",&o,&d);\r\r\n        if(o[0]=='+')\r\r\n                r+=d;\r\r\n        else\r\r\n            {\r\r\n                if(d<=r) r-=d;\r\r\n                else count++;\r\r\n            }\r\r\n    }\r\r\n    printf(\"%lld %lld\\n\",r,count);\r\r\n    return 0;\r\r\n}","235":"#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\nchar sch[101][101]={'\\0'} ;\r\n\r\nint main()\r\n{\r\n\tint i,j;\r\n\tint *win;\r\n\tint len=0;\r\n\tint temp=0;\r\n\tint n,d;\r\n\tscanf(\"%d%d\",&n,&d);\r\n\tgetchar();\r\n\twin=(int *)malloc(sizeof(int)*(d+1));\r\n\tfor(i=1;i<=d;i++)\r\n\t{\r\n\t\tfor(j=1;j<=n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%c\",&\r\n\t\t\tsch[i][j]);\r\n\t\t}\r\n\t\tgetchar();\r\n\t\twin[i]=0;\r\n\t}\r\n\tfor(j=1;j<=d;j++)\r\n\t{\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tif(sch[j][i]=='0')\r\n\t\t\t{\r\n\t\t\t\twin[j]=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(i=1;i<=d;i++)\r\n\t{\r\n\t\tif(win[i]==1)\r\n\t\t{\r\n\t\t\ttemp++;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttemp=0;\r\n\t\t}\r\n\t\tif(temp>len)\r\n\t\t{\r\n\t\t\tlen=temp;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",len);\r\n\treturn 0;\r\n}","237":"#include<stdio.h>\r\r\n#include<conio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    long long n;\r\r\n    scanf(\"%I64d\", &n);\r\r\n    long long result;\r\r\n    result = n \/ 2;\r\r\n    if(n%2 == 0)\r\r\n    {\r\r\n        printf(\"%I64d\", result);\r\r\n    }\r\r\n    else\r\r\n        printf(\"%I64d\", result + 1);\r\r\n}","239":"#include<stdio.h>\r\r\n#include<conio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    long long n;\r\r\n    scanf(\"%I64d\", &n);\r\r\n    long long result;\r\r\n    result = n \/ 2;\r\r\n    int temp = 1;\r\r\n    while(temp * 2 <= n)\r\r\n        temp = temp * 2;\r\r\n    if(n % 2 == 0)\r\r\n    {\r\r\n        printf(\"%I64d\", (n - temp)\/2);\r\r\n    }\r\r\n    else\r\r\n        printf(\"%I64d\", result);\r\r\n}","243":"#include<stdio.h>\r\r\nmain()\r\r\n{\r\r\n    int n,a,i,c=0;\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d\",&a);\r\r\n            if(a==0)\r\r\n            c=c+1 ;\r\r\n    }\r\r\n    if(n==1&&c==0)\r\r\n        printf(\"YES\");\r\r\n    else if(n==1&&c==1)\r\r\n        printf(\"NO\");\r\r\n    else if(c==1)\r\r\n        printf(\"YES\");\r\r\n    else\r\r\n        printf(\"NO\");\r\r\n\r\r\n}","246":"#include <stdio.h>\r\r\nint n,m;\r\r\nlong long ans;\r\r\nshort key[200010];\r\r\nint e[400010][2],p[200010];\r\r\nint f[200010];\r\r\nlong long g[200010];\r\r\nvoid adde(int sn,int fn,int id)\r\r\n{\r\r\n    e[id][0] = fn; e[id][1] = p[sn]; p[sn] = id;\r\r\n}\r\r\nvoid dp1(int sn,int fa)\r\r\n{\r\r\n    int i,fn;\r\r\n    f[sn] = key[sn];\r\r\n    for(i=p[sn];i;i=e[i][1])\r\r\n    {\r\r\n        fn = e[i][0];\r\r\n        if(fn == fa) continue;\r\r\n        dp1(fn,sn);\r\r\n        f[sn] += f[fn]; g[sn] += g[fn]+f[fn];\r\r\n    }\r\r\n}\r\r\nvoid dp2(int sn,int fa,long long d)\r\r\n{\r\r\n    int i,fn,mx = m-f[sn];\r\r\n    for(i=p[sn];i;i=e[i][1])\r\r\n    {\r\r\n        fn = e[i][0];\r\r\n        if(fn == fa) continue;\r\r\n        dp2(fn,sn,d-f[fn]+m-f[fn]);\r\r\n        mx = mx>f[fn]?mx:f[fn];\r\r\n    }\r\r\n    if(m-mx>=mx) ans = ans>d?ans:d;\r\r\n}\r\r\nint main()\r\r\n{\r\r\n    int i,x,sn,fn;\r\r\n    scanf(\"%d%d\",&n,&m); m<<=1;\r\r\n    for(i=1;i<=m;i++)\r\r\n    {\r\r\n        scanf(\"%d\",&x);\r\r\n        key[x] = 1;\r\r\n    }\r\r\n    for(i=1;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d%d\",&sn,&fn);\r\r\n        adde(sn,fn,i<<1); adde(fn,sn,i<<1|1);\r\r\n    }\r\r\n    dp1(1,0);\r\r\n    dp2(1,0,g[1]);\r\r\n    printf(\"%I64d\",ans);\r\r\n    return 0;\r\r\n}","248":"#include<stdio.h>\r\r\n#include<math.h>\r\r\n\r\r\nint main()\t{\r\r\n\tlong long int people, distance, man_velocity, bus_velocity, bus_capacity, trip;\r\r\n\tdouble ans;\r\r\n\tscanf(\"%lld %lld %lld %lld %lld\", &people, &distance, &man_velocity, &bus_velocity, &bus_capacity);\r\r\n\ttrip = (int)ceil((double)people\/bus_capacity);\r\r\n\tans = (double)(((2.00*trip-1.00)*bus_velocity+man_velocity)*distance\/(double)(bus_velocity*(man_velocity*(2.00*trip-1.00)+bus_velocity)));\r\r\n\tprintf(\"%.12lf\", ans);\r\r\n\treturn 0;\r\r\n}","250":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,a,b,i,s=0,s1=0;\r\r\n    scanf(\"%d\",&n);\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d %d\",&a,&b);\r\r\n        if(a>b)\r\r\n        {\r\r\n            s++;\r\r\n        }\r\r\n        if(b>a)\r\r\n        {\r\r\n            s1++;\r\r\n        }\r\r\n\r\r\n    }\r\r\n    if(s==s1)\r\r\n    {\r\r\n        printf(\"Friendship is magic!^^\");\r\r\n    }\r\r\n\r\r\n    else if(s>s1)\r\r\n    {\r\r\n        printf(\"Mishka\");\r\r\n    }\r\r\n    else if(s<s1)\r\r\n    {\r\r\n        printf(\"Chris\");\r\r\n    }\r\r\n    return 0;\r\r\n}","252":"#include<stdio.h>\r\nint main()\r\n{\r\n    long long n,i,count=1;\r\n    \r\n    scanf(\"%lld\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        if(i%2==0)\r\n        {\r\n            if(i==n)\r\n            {\r\n                printf(\"I love it\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"I love that \");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(i==n)\r\n            {\r\n                printf(\"I hate it\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"I hate that \");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}","261":"#include<stdio.h>\r\r\n#include<math.h>\r\r\nint main()\r\r\n{\r\r\n    double x1,y1,x,y,v,j,k,r,t,temp;\r\r\n    int n,i;\r\r\n    scanf(\"%lf%lf%d\",&x1,&y1,&n);\r\r\n\r\r\n    for(i=0;i<n;i++){\r\r\n        scanf(\"%lf%lf%lf\",&x,&y,&v);\r\r\n        r=(x1-x)*(x1-x)+(y1-y)*(y1-y);\r\r\n        temp=sqrt(r)\/v;\r\r\n    if(i==0){t=temp;}\r\r\n    else if(temp<t){t=temp;}\r\r\n\r\r\n    }\r\r\n\r\r\n     printf(\"%lf\",t);\r\r\n     return 0;\r\r\n}","263":"#include<stdio.h>\r\nmain()\r\n{\r\n\tint i,j,n,m,flag=0;\r\n\tchar s[3];\r\n\tscanf(\"%d %d\",&n,&m);\r\n\tfor(i=1;i<=n;i++)\r\n\tfor(j=1;j<=m;j++)\r\n\t{\r\n\t\tscanf(\"%s\",s);\r\n\t\tif(s[0]=='C'||s[0]=='M'||s[0]=='Y')\r\n\t\t{\r\n\t\t\tflag=1;\r\n\t\t}\r\n\t}\r\n\tif(flag==1)\r\n\tprintf(\"#Color\\n\");\r\n\tif(flag==0)\r\n\tprintf(\"#Black&White\\n\");\r\n}","269":"#include<stdio.h>\r\r\n#define ll long long int\r\r\nint main()\r\r\n{\r\r\n    ll n,a;\r\r\n    scanf(\"%lld\",&n);\r\r\n    (n<3)?printf(\"-1\"):printf(\"%lld %lld\",(n%2==0)?n*n\/4-1:n*n\/2,(n%2==0)?n*n\/4+1:n*n\/2+1);\r\r\n}","272":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int p,q,r,s,x,i,j;\r\r\n    long long int n=-1;\r\r\n    long long int m=-1;\r\r\n    scanf(\"%d%d%d%d\",&p,&q,&r,&s);\r\r\n\r\r\n    if(p==0)\r\r\n    {\r\r\n        if(q>0||r>0)\r\r\n            n=1;\r\r\n        else\r\r\n            n=0;\r\r\n    }\r\r\n   else\r\r\n   {\r\r\n    for(i=2;i<10000000;i++)\r\r\n    {\r\r\n        if(i*(i-1)\/2==p)\r\r\n        {\r\r\n            n=i;\r\r\n            break;\r\r\n        }\r\r\n    }\r\r\n   }\r\r\n    if(s==0)\r\r\n    {\r\r\n        if(q>0||r>0)\r\r\n            m=1;\r\r\n        else\r\r\n            m=0;\r\r\n    }\r\r\n\r\r\n    else\r\r\n    {\r\r\n      for(i=2;i<10000000;i++)\r\r\n    {\r\r\n        if(i*(i-1)\/2==s)\r\r\n        {\r\r\n            m=i;\r\r\n            break;\r\r\n        }\r\r\n    }\r\r\n    }\r\r\n    if(m==0&&n==0)\r\r\n    {\r\r\n        printf(\"0\");\r\r\n        return 0;\r\r\n    }\r\r\n    if(n==-1 || m==-1)\r\r\n        {\r\r\n            printf(\"Impossible\");\r\r\n        return 0;\r\r\n        }\r\r\n\r\r\n     if(q+r!=n*m)\r\r\n    {\r\r\n        printf(\"Impossible\");\r\r\n        return 0;\r\r\n    }\r\r\n    long long int l;\r\r\n    l=n+m;\r\r\n    for(i=0;i<l;i++)\r\r\n    {\r\r\n        if(q>=m)\r\r\n        {\r\r\n            printf(\"0\");\r\r\n            q=q-m;\r\r\n            n=n-1;\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            printf(\"1\");\r\r\n            r=r-n;\r\r\n            m=m-1;\r\r\n        }\r\r\n    }\r\r\n    return 0;\r\r\n\r\r\n\r\r\n\r\r\n    }","274":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nint main()\r\r\n{\r\r\n\tchar s[1000000];\r\r\n\tint i,flag=0;\r\r\n\tscanf (\"%s\",s);\r\r\n\tint l=strlen(s);\r\r\n\tfor(i=0;i<l;i++)\r\r\n\t{\r\r\n\t\tif(s[i]!='a')\r\r\n\t\t{\r\r\n\t\t\ts[i]+=-1;\r\r\n\t\t\tflag=1;\r\r\n\t\t\tif(s[i+1]=='a')\r\r\n\t\t\tbreak;\r\r\n\t\t}\r\r\n\t}\r\r\n\tif(flag==0)\r\r\n\t{\r\r\n\t\ts[l-1]='z';\r\r\n\t\tprintf(\"%s\",s);\r\r\n\t}\r\r\n\telse\r\r\n\t\tprintf(\"%s\",s);\r\r\nreturn 0;\r\r\n}","276":"#include<stdio.h>\r\r\nmain()\r\r\n{\r\r\n\tint c=0,n,b,d,i,o,s=0;\r\r\n\tscanf(\"%d%d%d\",&n,&b,&d);\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tscanf(\"%d\",&o);\r\r\n\t\tif(o<=b)\r\r\n\t\ts+=o;\r\r\n\t\tif(s>d)\r\r\n\t\t{s=0;\r\r\n\t\tc++;}\r\r\n\t}\r\r\n\tprintf(\"%d\",c);\r\r\n}","278":"#include<stdio.h>\r\r\nmain()\r\r\n{\r\r\n int t;\r\r\n char s;\r\r\n scanf(\"%c%d\",&s,&t);\r\r\n if((s=='a'||s=='h')&&(t==1||t==8))\r\r\n  printf(\"3\");\r\r\nelse if((s=='a'||s=='h')||(t==1||t==8))\r\r\n    printf(\"5\");\r\r\nelse\r\r\n printf(\"8\");\r\r\n\r\r\n}","280":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nchar a[2002][10];\r\r\nint main()\r\r\n{\r\r\n    int n,i,cnt=0;\r\r\n    scanf(\"%d\",&n);\r\r\n\r\r\n    for(i=0; i<n; i++)\r\r\n    {\r\r\n        scanf(\"%s\",a[i]);\r\r\n    }\r\r\n    for(i=0; i<n; i++)\r\r\n    {\r\r\n        if((a[i][0]=='O'&&a[i][1]=='O')||(a[i][3]=='O'&&a[i][4]=='O'))\r\r\n            cnt++;\r\r\n    }\r\r\n    if(cnt==0)\r\r\n        printf(\"NO\");\r\r\n    else if(cnt>0)\r\r\n    {\r\r\n        printf(\"YES\\n\");\r\r\n        for(i=0; i<n; i++)\r\r\n        {\r\r\n            if(a[i][0]=='O'&&a[i][1]=='O')\r\r\n            {\r\r\n                a[i][0]='+';\r\r\n                a[i][1]='+';\r\r\n                break;\r\r\n            }\r\r\n            if(a[i][3]=='O'&&a[i][4]=='O')\r\r\n            {\r\r\n                a[i][3]='+';\r\r\n                a[i][4]='+';\r\r\n                break;\r\r\n            }\r\r\n        }\r\r\n        for(i=0; i<n; i++)\r\r\n        {\r\r\n            printf(\"%s\\n\",a[i]);\r\r\n        }\r\r\n    }\r\r\n    return 0;\r\r\n\r\r\n}","284":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n\tlong long int t,l,r,l1,l2,r1,r2,k;\r\r\n\tscanf(\"%I64D %I64D %I64D %I64D %I64D\",&l1,&r1,&l2,&r2,&k);\r\r\n\tif(l1>l2)\r\r\n\t\tl=l1;\r\r\n\telse\r\r\n\t\tl=l2;\r\r\n\tif(r1<r2)\r\r\n\t\tr=r1;\r\r\n\telse\r\r\n\t\tr=r2;\r\r\n\tif(k>=l && k<=r)\r\r\n\t\tt=r-l;\r\r\n\telse\r\r\n\t\tt=r-l+1;\r\r\n\tif(t<0)\r\r\n\t\tt=0;\r\r\n\tprintf(\"%I64d\",t);\r\r\n\treturn 0;\r\r\n}","285":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n\r\r\nint main()\r\r\n{ int n;\r\r\n  char ch[200];\r\r\n  scanf(\"%d\",&n);\r\r\n  int i;\r\r\n  char ch2[200];\r\r\n  for(i=0;i<n;i++)\r\r\n    scanf(\"%d\",&ch[i]);\r\r\n\r\r\n  if(n==1) {  if (ch[n-1]==15 ) {strcpy(ch2,\"DOWN\");printf(\"%s\",ch2);}\r\r\n               else if (ch[n-1]==0) {strcpy(ch2,\"UP\");printf(\"%s\",ch2);}\r\r\n               else printf(\"%d\",-1);\r\r\n  }\r\r\n  else if((n==2)&&(ch[n-2]==1)&&(ch[n-1]==0)) {strcpy(ch2,\"UP\");printf(\"%s\",ch2);}\r\r\n   else if (ch[n-1]==15 ) {strcpy(ch2,\"DOWN\");printf(\"%s\",ch2);}\r\r\n   else if (ch[n-1]==0 ) {strcpy(ch2,\"UP\");printf(\"%s\",ch2);}\r\r\n  else {\r\r\n            if (ch[n-2]<ch[n-1])\r\r\n                strcpy(ch2,\"UP\");\r\r\n             else\r\r\n\r\r\n                strcpy(ch2,\"DOWN\");\r\r\n\r\r\n               printf(\"%s\",ch2);\r\r\n\r\r\n  }\r\r\n\r\r\nreturn 0 ;\r\r\n}","289":"#include<stdio.h>\r\n#include<string.h>\r\nmain()\r\n{\r\n\tint n,i,t1,t2,t3;\r\n\tstatic int w,x,y,z;\r\n\tchar a[100001];\r\n\tscanf(\"%d\",&n);\r\n\tgetchar();\r\n\tgets(a);\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tif(i%2==0)\r\n\t\t{\r\n\t\t\tif(a[i]=='r')\r\n\t\t\tw++;\r\n\t\t\tif(a[i]=='b')\r\n\t\t\tx++;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(a[i]=='r')\r\n\t\t\ty++;\r\n\t\t\tif(a[i]=='b')\r\n\t\t\tz++;\r\n\t\t}\t\t\r\n\t}\r\n\tt1=w>z?w:z;\r\n\tt2=x>y?x:y;\r\n\tt3=t1<t2?t1:t2;\r\n\tprintf(\"%d\\n\",t3);\r\n}","293":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n\r\r\nint main()\r\r\n{ int n;int i;\r\r\n  char ch2[200];\r\r\n  char ch[200];\r\r\n  scanf(\"%d\",&n);\r\r\n  scanf(\"%s\",ch);\r\r\n\r\r\n\r\r\n  int somme=0,ind=0,k=0,j=0;\r\r\n\r\r\n   for(i=0;i<n;i++)\r\r\n       ch2[i]=0;\r\r\n\r\r\n        while (ind<n)\r\r\n           {\r\r\n            if (ch[ind]=='B')\r\r\n               {\r\r\n                   somme=somme+1;\r\r\n                   j=ind;\r\r\n                    while(j<n)\r\r\n                    {  if (ch[j]=='B')\r\r\n                          {\r\r\n                              ch2[k]=ch2[k]+1;\r\r\n                          }\r\r\n                         else\r\r\n                            break;\r\r\n                      j++;\r\r\n                    }\r\r\n                    ind=j;\r\r\n                    k++;\r\r\n               }\r\r\n\r\r\n             ind++;\r\r\n\r\r\n           }\r\r\n     printf(\"%d\\n\",somme);\r\r\n     int m=strlen(ch2);\r\r\n     for(i=0;i<m;i++)\r\r\n        printf(\"%d\\t\",ch2[i]);\r\r\n     return 0;\r\r\n}","299":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nmain()\r\r\n{\r\r\n    char a[100000];\r\r\n    int x,i,j,q=0,p[100000],h=0;\r\r\n    scanf(\"%d\",&x);\r\r\n    for(i=1;i<=x;i++)\r\r\n    {\r\r\n        scanf(\"%d\",&p[i]);\r\r\n    }\r\r\n    for(i=0;i<=x;i++)\r\r\n    {q=0;\r\r\n            gets(a);\r\r\n        for(j=0;a[j]!=NULL;j++)\r\r\n        {\r\r\n            if(a[j]=='i' || a[j]=='o'  || a[j]=='u'  || a[j]=='e'  || a[j]=='a'  || a[j]=='y')\r\r\n                {q++;}\r\r\n        }\r\r\n        if(p[i]==q)\r\r\n        {\r\r\n            h++;\r\r\n        }\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n\r\r\n    }\r\r\n\r\r\n   if(h-1==x)\r\r\n   {\r\r\n       printf(\"YES\");\r\r\n   }\r\r\n   else if(h-1!=x){\r\r\n    printf(\"NO\");\r\r\n   }\r\r\n}","301":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,c,d,e;\r\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\r\n    if((a<b&&a>c)||(a<c&&a>b))\r\r\n    {\r\r\n        d=abs(a-b)+abs(a-c);\r\r\n    }\r\r\n    else if((b<a&&b>c)||(b<c&&b>a))\r\r\n    {\r\r\n        d=abs(b-a)+abs(b-c);\r\r\n    }\r\r\n    else if((c<a&&c>b)||(c<b&&c>a))\r\r\n    {\r\r\n        d=abs(c-a)+abs(c-b);\r\r\n    }\r\r\n    printf(\"%d\",d);\r\r\n}","307":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    char str1[100],str2[100];\r\r\n    int n1,n2;\r\r\n    scanf(\"%s\",str1);\r\r\n    scanf(\"%s\",str2);\r\r\n    if(str1[0]=='m')\r\r\n    n1=1;\r\r\n    else if(str1[0]=='t' && str1[1]=='u')\r\r\n    n1=2;\r\r\n    else if(str1[0]=='w')\r\r\n    n1=3;\r\r\n    else if(str1[0]=='t' && str1[1]=='h')\r\r\n    n1=4;\r\r\n    else if(str1[0]=='f')\r\r\n    n1=5; \r\r\n    else if(str1[0]=='s' && str1[1]=='a')\r\r\n    n1=6;\r\r\n    else if(str1[0]=='s' && str1[1]=='u')\r\r\n    n1=0;\r\r\n     if(str2[0]=='m')\r\r\n    n2=1;\r\r\n    else if(str2[0]=='t' && str2[1]=='u')\r\r\n    n2=2;\r\r\n    else if(str2[0]=='w')\r\r\n    n2=3;\r\r\n    else if(str2[0]=='t' && str2[1]=='h')\r\r\n    n2=4;\r\r\n    else if(str2[0]=='f')\r\r\n    n2=5; \r\r\n    else if(str2[0]=='s' && str2[1]=='a')\r\r\n    n2=6;\r\r\n    else if(str2[0]=='s' && str2[1]=='u')\r\r\n    n2=0;\r\r\n    \r\r\n    if(n2==(n1+30)%7 ||n2==n1 ||n2==(n1+31)%7  )\r\r\n    printf(\"YES\");\r\r\n    else \r\r\n    printf(\"NO\");\r\r\n}","309":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,count=0,i;\r\n    scanf(\"%d\",&n);\r\n    char a[n];\r\n    scanf(\"%s\",a);\r\n    \r\n    \/*char a[n];\r\n    for(i=0;i<n;i++)\r\n    {\r\n       scanf(\"%c\",&a[i]);\r\n    }\r\n     for(i=0;i<n;i++)\r\n    {\r\n       printf(\"%c\",&a[i]);\r\n    }*\/\r\n        for(i=0;(a[i]=='<')&&(i<n);i++)\r\n        {\r\n            count++;\r\n            if(a[i+1]==\">\")\r\n            break;\r\n        }\r\n        for(i=n-1;(a[i]=='>')&&(i>=0);i--)\r\n        {\r\n            count++;\r\n            if(a[i-1]=='<')\r\n            break;\r\n        }\r\n    printf(\"%d\",count);\r\n    return 0;\r\n}","313":"#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\nint main()\r\n{\r\n    long long n,s,d;\r\n    char a[10];\r\n    while(~scanf(\"%lld%s\",&n,a))\r\n    {\r\n        s=0;\r\n        if(a[0]=='f')\r\n            d=1;\r\n        else if(a[0]=='e')\r\n            d=2;\r\n        else if(a[0]=='d')\r\n            d=3;\r\n        else if(a[0]=='a')\r\n            d=4;\r\n        else if(a[0]=='b')\r\n            d=5;\r\n        else  if(a[0]=='c')\r\n            d=6;\r\n        s+=((n-1)\/4)*16;\r\n        if(n%4==2||n%4==0)\r\n            s+=7;\r\n        s+=d;\r\n        printf(\"%lld\\n\",s);\r\n    }\r\n    return 0;\r\n}","317":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nint main()\r\r\n{\r\r\n\tint n,i;\r\r\n\tscanf(\"%d\",&n);\r\r\n\tchar s[n];\r\r\n\tscanf(\"%s\",s);\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tif(s[i]=='o' && s[i+1]=='g' && s[i+2]=='o')\r\r\n\t\t{\r\r\n\t\t\tprintf(\"***\");\r\r\n\t\t\ti=i+3;\r\r\n\t\t\twhile(s[i]=='g' && s[i+1]=='o')\r\r\n\t\t\t\t{\r\r\n                i+=2;}\r\r\n\t\t\t    i=i-1;\r\r\n\r\r\n\t\t}\r\r\n\t\telse\r\r\n\t\t\tprintf(\"%c\",s[i]);\r\r\n\t}\r\r\n\treturn 0;\r\r\n}","319":"#include<stdio.h>\r\r\ntypedef unsigned u;\r\r\nu L[55],H[55],Pi;\r\r\nu S[55],Si;\r\r\nchar ask(u a,u b)\r\r\n{\r\r\n\tprintf(\"? %u %u\\n\",a,b);\r\r\n\tfflush(stdout);char c;\r\r\n\twhile((c=getchar())<=' ');\r\r\n\treturn c;\r\r\n}\r\r\nint main()\r\r\n{\r\r\n\tu t,n,i;char c,d;\r\r\n\tfor(scanf(\"%u\",&t);t--;)\r\r\n\t{\r\r\n\t\tscanf(\"%u\",&n);Si=Pi=0;\r\r\n\t\tfor(i=0;++i<=n;)S[Si++]=i;\r\r\n\t\twhile(Si+Pi>1)\r\r\n\t\t{\r\r\n\t\t\tif(Si>1)\r\r\n\t\t\t{\r\r\n\t\t\t\tc=ask(S[Si-1],S[Si-2]);\r\r\n\t\t\t\tif(c=='>')\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tH[Pi]=S[Si-1];\r\r\n\t\t\t\t\tL[Pi]=S[Si-2];\r\r\n\t\t\t\t\t++Pi;--Si;\r\r\n\t\t\t\t}\r\r\n\t\t\t\tif(c=='<')\r\r\n\t\t\t\t{\r\r\n\t\t\t\t\tH[Pi]=S[Si-2];\r\r\n\t\t\t\t\tL[Pi]=S[Si-1];\r\r\n\t\t\t\t\t++Pi;--Si;\r\r\n\t\t\t\t}\r\r\n\t\t\t\t--Si;\r\r\n\t\t\t\tcontinue;\r\r\n\t\t\t}\r\r\n\t\t\tif(Pi>1)\r\r\n\t\t\t{\r\r\n\t\t\t\tc=ask(H[Pi-1],H[Pi-2]);\r\r\n\t\t\t\td=ask(L[Pi-1],L[Pi-2]);\r\r\n\t\t\t\tif(c=='>')H[Pi-2]=H[Pi-1];\r\r\n\t\t\t\tif(d=='<')L[Pi-2]=L[Pi-1];\r\r\n\t\t\t\t--Pi;\r\r\n\t\t\t\tcontinue;\r\r\n\t\t\t}\r\r\n\t\t\tc=ask(H[Pi-1],S[Si-1]);\r\r\n\t\t\td=ask(L[Pi-1],S[Si-1]);\r\r\n\t\t\tif(c=='<')H[Pi-1]=S[Si-1];\r\r\n\t\t\tif(d=='>')L[Pi-1]=S[Si-1];\r\r\n\t\t\t--Si;\r\r\n\t\t}\r\r\n\t\tif(Si)printf(\"! %u %u\\n\",S[Si-1],S[Si-1]);\r\r\n\t\tif(Pi)printf(\"! %u %u\\n\",L[Pi-1],H[Pi-1]);\r\r\n\t\tfflush(stdout);\r\r\n\t}\r\r\n\treturn 0;\r\r\n}","329":"#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n\r\nchar a[100];\r\nint i,b[100],count1=0,count,max=1,n;\r\nscanf(\"%s\",a);\r\nn=strlen(a);\r\nfor(i=0; i<n; i++)\r\n{\r\n\tif(a[i]=='a')\r\n\tb[i]=1;\r\n\tif(a[i]=='b')\r\n\tb[i]=2;\r\n\tif(a[i]=='c')\r\n\tb[i]=3;\r\n\tif(a[i]=='d')\r\n\tb[i]=4;\r\n\tif(a[i]=='e')\r\n\tb[i]=5;\r\n\tif(a[i]=='f')\r\n\tb[i]=6;\r\n\tif(a[i]=='g')\r\n\tb[i]=7;\r\n\tif(a[i]=='h')\r\n\tb[i]=8;\r\n\tif(a[i]=='i')\r\n\tb[i]=9;\r\n\tif(a[i]=='j')\r\n\tb[i]=10;\r\n\tif(a[i]=='k')\r\n\tb[i]=11;\r\n\tif(a[i]=='l')\r\n\tb[i]=12;\r\n\tif(a[i]=='m')\r\n\tb[i]=13;\r\n\tif(a[i]=='n')\r\n\tb[i]=14;\r\n\tif(a[i]=='o')\r\n\tb[i]=15;\r\n\tif(a[i]=='p')\r\n\tb[i]=16;\r\n\tif(a[i]=='q')\r\n\tb[i]=17;\r\n\tif(a[i]=='r')\r\n\tb[i]=18;\r\n\tif(a[i]=='s')\r\n\tb[i]=19;\r\n\tif(a[i]=='t')\r\n\tb[i]=20;\r\n\tif(a[i]=='u')\r\n\tb[i]=21;\r\n\tif(a[i]=='v')\r\n\tb[i]=22;\r\n\tif(a[i]=='w')\r\n\tb[i]=23;\r\n\tif(a[i]=='x')\r\n\tb[i]=24;\r\n\tif(a[i]=='y')\r\n\tb[i]=25;\r\n\tif(a[i]=='z')\r\n\tb[i]=26;\r\n}\r\n\t\r\nfor(i=0; i<n; i++)\r\n{\r\nif(b[i]<=max)\r\n\t{\r\n\tif(max-b[i]<=13)\r\n\tcount=max-b[i];\r\n\telse\r\n\tcount=26-max+b[i];\r\n\t}\r\nelse\r\n\t{\r\n\tif(b[i]-max<=13)\r\n\tcount=b[i]-max;\r\n\telse\r\n\tcount=26+max-b[i];\r\n\t}\r\n   max=b[i];\r\n   count1=count1+count;\r\n}\r\n\r\n\r\n\r\nprintf(\"%d\\n\",count1);\r\n\r\nreturn 0;\r\n}","331":"#include<stdio.h>\r\nint main()\r\n{\r\n    int m,n;\r\n    while(~scanf(\"%d%d\",&m,&n))\r\n    {\r\n        int cnt=1,i;\r\n        for(i=1;; i++)\r\n        {\r\n            if((m*cnt)%10==n||(m*cnt)%10==0)\r\n                break;\r\n            cnt++;\r\n        }\r\n        printf(\"%d\\n\",cnt);\r\n    }\r\n    return 0;\r\n}","333":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int a[510];\r\n    int b;\r\n    int x,y,i;\r\n    while(~scanf(\"%d%d\",&x,&y))\r\n    {\r\n        b=0;\r\n        int sum;\r\n        for(i=1; i<=x; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        for(i=1; i<x; i++)\r\n        {\r\n            sum=a[i]+a[i+1];\r\n            if(sum<y)\r\n            {\r\n                a[i+1]=a[i+1]+(y-sum);\r\n                b=b+(y-sum);\r\n            }\r\n        }\r\n        printf(\"%d\\n\",b);\r\n        for(i=1;i<x;i++)\r\n            printf(\"%d \",a[i]);\r\n        printf(\"%d\\n\",a[x]);\r\n    }\r\n    return 0;\r\n}","345":"#include <stdio.h>\r\r\n#include <string.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    char str[110];\r\r\n    scanf(\"%s\",str);\r\r\n\r\r\n    str[strlen(str)]='\\0';\r\r\n\r\r\n    int i,max=0,c=1;;\r\r\n    for(i=0;i<strlen(str);i++)\r\r\n    {\r\r\n        if(str[i]=='A' || str[i]=='E' || str[i]=='I' || str[i]=='O' || str[i]=='U' || str[i]=='Y')\r\r\n        {\r\r\n            if(c>max)\r\r\n            {\r\r\n                max=c;\r\r\n            }\r\r\n            c=1;\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            c++;\r\r\n        }\r\r\n    }\r\r\n\r\r\n    if(c>max && (str[i]!='A' || str[i]!='E' || str[i]!='I' || str[i]!='O' || str[i]!='U' || str[i]!='Y'))\r\r\n    {\r\r\n        max=c;\r\r\n    }\r\r\n\r\r\n    printf(\"%d\",max);\r\r\n\r\r\n    return 0;\r\r\n}","351":"#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<stdbool.h>\r\nint main()\r\n{\r\n    int n,a[100010],b[100010],A,B;\r\n    int i,d,s,q;\r\n    while(~scanf(\"%lld\",&n))\r\n    {\r\n        d=0;\r\n        A=0;\r\n        B=0;\r\n        memset(a,0,sizeof(a));\r\n        memset(b,0,sizeof(b));\r\n        for(i=1; i<=n; i++)\r\n        {\r\n            scanf(\"%d%d\",&a[i],&b[i]);\r\n            A+=a[i];\r\n            B+=b[i];\r\n        }\r\n        s=A-B;\r\n        if(s<0)\r\n            s*=(-1);\r\n        for(i=1; i<=n; i++)\r\n        {\r\n            q=(A-a[i]+b[i])-(B-b[i]+a[i]);\r\n            if(q<0)\r\n                q*=(-1);\r\n            if(q>s)\r\n            {\r\n                s=q;\r\n                d=i;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",d);\r\n\r\n    }\r\n    return 0;\r\n}","363":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint n ,i,a=0,d=0;\r\r\nchar p[1000001];\r\r\nscanf(\"%d\",&n);\r\r\nscanf(\"%s\",&p);\r\r\nfor(i=0;i<n;i++)\r\r\n{\r\r\n    if(p[i]=='A')\r\r\n    {\r\r\n        a++;\r\r\n    }\r\r\n    else d++;\r\r\n}\r\r\nif(a>d)\r\r\n{\r\r\n    printf(\"Anton\\n\");\r\r\n}\r\r\n else if(a==d)\r\r\n{\r\r\n    printf(\"Friendship\\n\");\r\r\n}\r\r\nelse if(a<d)\r\r\n{\r\r\n    printf(\"Danik\\n\");\r\r\n}\r\r\nreturn 0;\r\r\n\r\r\n}","367":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,k,i,j,m,t;\r\r\n    char str[101];\r\r\n    scanf(\"%d%d\",&n,&k);\r\r\n   scanf(\" %s\",str);\r\r\n    for(i=0; i<n; i++)\r\r\n    {\r\r\n        if(str[i]=='G')\r\r\n            t=i;\r\r\n    }\r\r\n    for(j=t,m=t; (j>=0 || m<n) ; j-=k,m+=k)\r\r\n    {\r\r\n\r\r\n        if(str[j]=='#')\r\r\n        {\r\r\n            j=-1;\r\r\n        }\r\r\n\r\r\n        if(str[m]=='#')\r\r\n        {\r\r\n            m=103;\r\r\n        }\r\r\n        if(str[j]=='T' || str[m]=='T')\r\r\n        {\r\r\n            printf(\"YES\");\r\r\n            return 0;\r\r\n        }\r\r\n    }\r\r\n\r\r\n    printf(\"NO\");\r\r\n}","374":"#include<stdio.h>\r\r\nint v[1500010];\r\r\nint main(){\r\r\n\tint i,l,n,x;\r\r\n\tlong long int r;\r\r\n\tscanf(\"%d%d\",&n,&x);\r\r\n\tfor(i=0;i<n;i++)\r\r\n\t{\r\r\n\t\tscanf(\"%d\",&l);\r\r\n\t\tr=r+v[l^x];\r\r\n\t\tv[l]++;\r\r\n\t}\r\r\n\tprintf(\"%I64d\",r);\r\r\n\treturn 0;\r\r\n}","376":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    long long int a;\r\r\n    scanf(\"%lld\",&a);\r\r\n    if(a==0){printf(\"1\");return 0;}\r\r\n    else if(a%4==1)\r\r\n    {printf(\"8\");}\r\r\n\r\r\n    else if(a%4==2)\r\r\n    {printf(\"4\");}\r\r\n\r\r\n    else if(a%4==3)\r\r\n    {printf(\"2\");}\r\r\n\r\r\n    else if(a%4==0)\r\r\n    {printf(\"6\");}\r\r\n}","379":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,c,d,e,f;\r\r\n    scanf(\"%d\\n%d\\n%d\",&a,&b,&c);\r\r\n    d=a\/1;\r\r\n    e=b\/2;\r\r\n    f=c\/4;\r\r\n    if(d<=e&&d<=f)\r\r\n        printf(\"%d\",7*d);\r\r\n    else if(e<=d&&e<=f)\r\r\n        printf(\"%d\",7*e);\r\r\n    else if(f<=d&&f<=e)\r\r\n        printf(\"%d\",7*f);\r\r\n    return 0;\r\r\n}","384":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\nint n,mid;\r\r\nscanf(\"%d\\n\",&n);\r\r\nchar word[n];\r\r\nif(n%2==1)\r\r\n{\r\r\n    mid=(n-1)\/2;\r\r\n    int flag=0;\r\r\n    for(int i=0,u=0;i<n;i++)\r\r\n{\r\r\n    char k;\r\r\n    scanf(\"%c\",&k);\r\r\n    if(flag==0)\r\r\n    {\r\r\n        word[mid+u]=k;\r\r\n        flag=1;\r\r\n        u++;\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        word[mid-u]=k;\r\r\n        flag=0;\r\r\n    }\r\r\n}\r\r\n}\r\r\n\r\r\nelse\r\r\n{\r\r\n    mid=n\/2-1;\r\r\n      int flag=0;\r\r\n    for(int i=0,u=0;i<n;i++)\r\r\n{\r\r\n    char k;\r\r\n    scanf(\"%c\",&k);\r\r\n    if(flag==0)\r\r\n    {\r\r\n        word[mid-u]=k;\r\r\n        flag=1;\r\r\n        u++;\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        word[mid+u]=k;\r\r\n        flag=0;\r\r\n    }\r\r\n}\r\r\n\r\r\n}\r\r\n\r\r\n\r\r\n\/\/printf(\"%dhhhh\",n-1\/2);\r\r\n\r\r\nfor(int i=0;i<n;i++)\r\r\n    printf(\"%c\",word[i]);\r\r\n    return 0;\r\r\n}","385":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n#include <math.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\nint n,start,end,myt,tramt,tramnow,d;\r\r\nscanf(\"%d %d %d\",&n,&start,&end);\r\r\nscanf(\"%d %d\",&tramt,&myt);\r\r\nscanf(\"%d %d\",&tramnow,&d);\r\r\nint mytime= abs(start-end)*myt;\r\r\nint tramtime=0;\r\r\nif((start>=tramnow&&d==1)||(start<=tramnow&&d==-1))\r\r\n{\r\r\n    tramtime+=abs(start-tramnow)*tramt;\r\r\n}\r\r\nelse\r\r\n{\r\r\n    if(d==-1)\r\r\n    {\r\r\n        tramtime+=(tramnow+start)*tramt;\r\r\n        d=1;\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        d=-1;\r\r\n        tramtime+=(n-tramnow+n-start)*tramt;\r\r\n\r\r\n    }\r\r\n}\r\r\nif((end>=start&&d==1)||(end<=start&&d==-1))\r\r\n    tramtime+=abs(start-end)*tramt;\r\r\n    else\r\r\n    {\r\r\n        if(d==1)\r\r\n        {\r\r\n            tramtime+=(n-start+n-end)*tramt;\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            tramtime+=(start+end)*tramt;\r\r\n        }\r\r\n    }\r\r\nif(mytime<tramtime)\r\r\n    printf(\"%d\",mytime);\r\r\nelse\r\r\n    printf(\"%d\",tramtime);\r\r\n    return 0;\r\r\n}","386":"#include <stdio.h>\r\r\n    #include <stdlib.h>\r\r\n\r\r\n    int main()\r\r\n    {\r\r\n        int n,k,a,b;\r\r\n        scanf(\"%d %d %d %d\",&n,&k,&a,&b);\r\r\n        char result[n];\r\r\n        int flag=0;\r\r\n        int prev,num=0;\r\r\n        if(a>b)\r\r\n            prev=0;\r\r\n        else\r\r\n            prev=1;\r\r\n        for(int i=0; i<n; i++)\r\r\n        {\r\r\n            if(num==k)\r\r\n            {\r\r\n                num=1;\r\r\n                if(prev==0&&b==0)\r\r\n                {\r\r\n                    flag=1;\r\r\n                    break;\r\r\n                }\r\r\n                else if(prev==0&&b!=0)\r\r\n                {\r\r\n                    prev=1;\r\r\n                    b--;\r\r\n                    result[i]='B';\r\r\n                }\r\r\n                else if(prev==1&&a==0)\r\r\n                {\r\r\n\r\r\n                    flag=1;\r\r\n                    break;\r\r\n                }\r\r\n                else if(prev==1&&a!=0)\r\r\n                {\r\r\n                    prev=0;\r\r\n                    a--;\r\r\n                    result[i]='G';\r\r\n                }\r\r\n            }\r\r\n            else\r\r\n            {\r\r\n                if(a>=b)\r\r\n                {\r\r\n                    result[i]='G';\r\r\n                    a--;\r\r\n                    if(prev==0)\r\r\n                        num++;\r\r\n                    else\r\r\n                        num=1;\r\r\n                    prev=0;\r\r\n\r\r\n                }\r\r\n                else\r\r\n                {\r\r\n                    result[i]='B';\r\r\n                    b--;\r\r\n                    if(prev==1)\r\r\n                        num++;\r\r\n                    else\r\r\n                        num=1;\r\r\n                    prev=1;\r\r\n                }\r\r\n            }\r\r\n\r\r\n        }\r\r\n        if(flag==1)\r\r\n            printf(\"NO\");\r\r\n        else\r\r\n        for(int i=0;i<n;i++)\r\r\n            printf(\"%c\",result[i]);\r\r\n\r\r\n        return 0;\r\r\n    }","393":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n\r\r\nint main()\r\r\n{ int n;int i;\r\r\n  char ch2[4];\r\r\n  char ch[300];\r\r\n  scanf(\"%d\",&n);\r\r\n  scanf(\"%s\",ch);\r\r\n   for(i=0;i<4;i++)\r\r\n       ch2[i]=0;\r\r\nint a,b,c,d;\r\r\n\r\r\nch2[0]=n\/4;\r\r\nch2[1]=n\/4;\r\r\nch2[2]=n\/4;\r\r\nch2[3]=n\/4;\r\r\n\r\r\n\r\r\n\r\r\n        for(i=0;i<n;i++)\r\r\n            {\r\r\n              switch(ch[i])\r\r\n              {\r\r\n              case 'A' : ch2[0]--; break;\r\r\n              case 'C' : ch2[1]--; break;\r\r\n              case 'G' : ch2[2]--; break;\r\r\n              case 'T' : ch2[3]--; break;\r\r\n              }\r\r\n            }\r\r\n    if (n%4!=0)\r\r\n         {printf(\"===\");}\r\r\n    else if(n%4==0)\r\r\n        { i=0;\r\r\n           while(i<n)\r\r\n                {   if (ch[i]=='?')\r\r\n                     { if (ch2[0]!=0)  {ch[i]='A';ch2[0]--;}\r\r\n                       else if (ch2[1]!=0)  {ch[i]='C';ch2[1]--;}\r\r\n                       else if (ch2[2]!=0)  {ch[i]='G';ch2[2]--;}\r\r\n                       else if (ch2[3]!=0)  {ch[i]='T';ch2[3]--;}\r\r\n\r\r\n                     }\r\r\n\r\r\n                    i++;\r\r\n\r\r\n                }\r\r\n                if (!ch2[0]&&!ch2[1]&&!ch2[2]&&!ch2[3])\r\r\n                    printf(\"%s\",ch);\r\r\n\r\r\n                else\r\r\n                    printf(\"===\");\r\r\n\r\r\n\r\r\n        }\r\r\n\r\r\n\r\r\n\r\r\n   return 0 ;\r\r\n}","395":"#include<stdio.h>\r\r\n#include<math.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int n,i,mod;\r\r\n    double sq;\r\r\n    scanf(\"%d\",&n);\r\r\n    sq= sqrt(n);\r\r\n    mod= (int) sqrt(n);\r\r\n    if(sq==mod)\r\r\n    {\r\r\n        printf(\"%d %d\",mod,mod);\r\r\n        return 0;\r\r\n    }\r\r\n    else {\r\r\n        if(n%mod==0)\r\r\n        {\r\r\n            printf(\"%d %d\",mod,n\/mod);\r\r\n            return 0;\r\r\n        }\r\r\n        else {\r\r\n            for(i=mod-1;i>=1;i--)\r\r\n            {\r\r\n                if(n%i==0)\r\r\n                {\r\r\n                    printf(\"%d %d\",i,n\/i);\r\r\n                    return 0;\r\r\n                }\r\r\n            }\r\r\n\r\r\n        }\r\r\n\r\r\n    }\r\r\n}","398":"#include <stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n\tint n, m, k;\r\r\n\r\r\n\tscanf (\"%d %d %d\", &n, &m, &k);\r\r\n\r\r\n\tk--;\r\r\n\r\r\n\tprintf (\"%d %d %c\", k \/ (2 * m) + 1, k % (m * 2) \/ 2 + 1, k % 2 ? 'R' : 'L');\r\r\n\r\r\n\treturn 0;\r\r\n}","400":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int n,k,i,s=0;\r\r\n    scanf(\"%d %d\",&n,&k);\r\r\n    k=240-k;\r\r\n    for(i=1;i<=n;i++)\r\r\n    {\r\r\n        k=k-(5*i);\r\r\n        if(k>=0)\r\r\n        {\r\r\n            s++;\r\r\n        }\r\r\n    }\r\r\n    printf(\"%d\",s);\r\r\n    return 0;\r\r\n}","402":"#include<stdio.h>\r\r\n#include<stdlib.h>\r\r\n#include<math.h>\r\r\nmain()\r\r\n{\r\r\n    int n;\r\r\n    int a[10000],i,j,sum=0,p=0;\r\r\n    scanf(\"%d\",&n);\r\r\n    if(n==1)\r\r\n    {\r\r\n        printf(\"1\\n\");\r\r\n        printf(\"1\\n\");\r\r\n        return 0;\r\r\n        \r\r\n    }\r\r\n    \r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n           a[i]=i+1;\r\r\n        sum=sum+a[i];\r\r\n     \r\r\n        \r\r\n        if(sum>n)\r\r\n        {   \r\r\n            p=abs(n-(sum-a[i]));\r\r\n            a[i-1]=a[i-1]+p;\r\r\n            break;\r\r\n        }\r\r\n    }\r\r\n         printf(\"%d\\n\",i);\r\r\n         for(j=0;j<i;j++)\r\r\n         {\r\r\n             printf(\"%d\\t\",a[j]);\r\r\n         }\r\r\n         \r\r\n}","404":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tchar s1[1003][504],s2[1003][504];\r\n\tint i,j,n,m,k,s=0;\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(i=1;i<=n;i++){\r\n\t\tscanf(\"%s\",s1[i]);\r\n\t}\r\n\tfor(i=1;i<=m;i++){\r\n\t\tscanf(\"%s\",s2[i]);\r\n\t}\r\n\tif(n>m){\r\n\t\tprintf(\"YES\\n\");\r\n\t}\r\n\telse if(m>n){\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\telse{\r\n\t\tfor(i=1;i<=n;i++){\r\n\t\t\tfor(j=1;j<=m;j++)\r\n\t\t\t\tif(strcmp(s1[i],s2[j]) == 0){\r\n\t\t\t\t\ts++;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tif(s%2 == 0){\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}","407":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    \r\n    while (scanf(\"%d\", &n) != EOF)\r\n    {\r\n        if (n == 1)\r\n            printf(\"3\\n\");\r\n        else if (n == 2)\r\n            printf(\"4\\n\");\r\n        else\r\n            printf(\"%d\\n\", n-2);\r\n    }\r\n    return 0;\r\n}","412":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n, m, i, cnt;\r\n    scanf(\"%d\",&n);\r\n    int p[n];\r\n    for(i = 0;i < n;i++)p[i] = 0;\r\n    for(i = 0, cnt = 0;i < n;i++)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        if(m-1==i) cnt+=2;\r\n        else if(p[m-1] == 0) cnt++;\r\n        p[m-1] = 1;\r\n    }\r\n    printf(\"%d\",cnt\/2);\r\n\treturn 0;\r\n}","421":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\nint ar[100];\r\r\nint i,a,max,sum=0;\r\r\nscanf(\"%d\",&a);\r\r\nfor(i=0;i<a;i++)\r\r\n{\r\r\n    scanf(\"%d\",&ar[i]);\r\r\n}\r\r\nmax=ar[0];\r\r\nfor(i=0;i<a;i++)\r\r\n{\r\r\n    if(max<ar[i])\r\r\n    {\r\r\n        max=ar[i];\r\r\n        ar[i]=max;\r\r\n\r\r\n    }\r\r\n}\r\r\nfor(i=0;i<a;i++)\r\r\n{\r\r\n    ar[i]=(ar[i]-max);\r\r\n    ar[i]=(ar[i]);\r\r\n    sum=sum+(ar[i]);\r\r\n}\r\r\nprintf(\"%d\",sum*(-1));\r\r\n    return 0;\r\r\n}","427":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main(void) {\r\r\n    int dm[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\r\r\n    int m, d;\r\r\n    scanf(\"%d %d\", &m, &d);\r\r\n    m--;\r\r\n    d--;\r\r\n    dm[m] = dm[m] - (7 - d);\r\r\n    if (dm[m] % 7 == 0) {\r\r\n        printf(\"%d\\n\", dm[m] \/ 7 + 1);\r\r\n    }\r\r\n    else {\r\r\n        printf(\"%d\\n\", dm[m] \/ 7 + 2);\r\r\n    }\r\r\n    return 0;\r\r\n}","433":"#include <stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int a,b,sum;\r\r\n    scanf(\"%d %d\",&a,&b);\r\r\n    sum = a + b;\r\r\n    if(sum%2 == 0){\r\r\n            if((sum\/2) == a && (sum\/2) ==b && sum !=0){\r\r\n                printf(\"YES\");\r\r\n            }\r\r\n            else {\r\r\n                printf(\"NO\");\r\r\n            }\r\r\n    }\r\r\n\r\r\n\r\r\n    if(sum%2 != 0){\r\r\n        if(b == (a +1) || a ==(b+1) ){\r\r\n            printf(\"YES\");\r\r\n        }\r\r\n        else {\r\r\n            printf(\"NO\");\r\r\n        }\r\r\n    }\r\r\n\r\r\n    return 0;\r\r\n}","435":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    long long int n,k,a[1999999],i,j=0,s,t,b;\r\n    scanf(\"%lld%lld\",&n,&k);\r\n    s=sqrt(n);\r\n    for(i=1;i<=s;i++)\r\n    {\r\n        if(n%i==0)\r\n        {\r\n            a[j++]=i;\r\n            if(i!=n\/i)\r\n            a[j++]=n\/i;\r\n        }\r\n\r\n\r\n    }\r\n\r\n     for(i=0;i<j;i++)\r\n    {\r\n\r\n        for(t=i+1;t<j;t++)\r\n        {\r\n            if(a[i]>a[t])\r\n            {\r\n                b=a[i];\r\n                a[i]=a[t];\r\n                a[t]=b;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n        if(k>j)\r\n\r\n            printf(\"-1\\n\");\r\n        else\r\n            printf(\"%lld\\n\",a[k-1]);\r\n        return 0;\r\n\r\n}","437":"#include<stdio.h>\r\n\r\n#include<math.h>\r\n\r\n\r\nint main()\r\n\r\n{\r\n\r\n    double n,m,a;\r\n\r\n    double ans;\r\n\r\n  \r\n\r\n    while(scanf(\"%lf %lf %lf\",&n,&m,&a)==3){\r\n\r\n  \r\n\r\n        double row = ceil(n\/a);\r\n\r\n        double column = ceil(m\/a);\r\n\r\n  \r\n\r\n        ans =row * column;\r\n\r\n  \r\n\r\n        printf(\"%.0lf\\n\",ans);\r\n\r\n  \r\n\r\n    }\r\n\r\n    return 0;\r\n\r\n}","450":"#include <stdio.h>\n#include <stdlib.h>\n\nint n,p1,p2,p3,t1,t2,ans;\n\nint main()\n{\n    int i,tmp,l,r,beta;\n    scanf(\"%d%d%d%d%d%d\",&n,&p1,&p2,&p3,&t1,&t2);\n    ans=0;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&l,&r);\n        if(i==1) tmp=l;\n        ans+=(r-l)*p1;\n        tmp=l-tmp;\n        if(tmp<=t1) ans+=tmp*p1;\n        else if(tmp<=t1+t2) ans+=t1*p1+(tmp-t1)*p2;\n        else ans+=t1*p1+t2*p2+(tmp-t1-t2)*p3;\n        tmp=r;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}","454":"#include<stdio.h>\n#include<math.h>\n  \nchar s[100100];  \n  \nint main()   \n{  \n    int n,cnt,i,res;  \n    scanf(\"%s\",s);  \n    cnt=0;  \n    while (s[1])   \n    {  \n        cnt++;  \n        res=0;  \n        for(i=0;s[i];i++)  \n        {  \n            res+=s[i]-'0';  \n        }  \n        sprintf(s,\"%d\",res);  \n    }  \n    printf(\"%d\\n\",cnt);  \n    return 0;  \n}","457":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,a;\r\n    scanf(\"%d\",&n);\r\n    n-=10;\r\n    if(n>=1&&n<=9)a=4;\r\n    else if(n==11)a=4;\r\n    else if(n==10)a=15;\r\n    else a=0;\r\n    printf(\"%d\",a);\r\n    return 0;\r\n}","475":"# include<stdio.h>\n# include<string.h>\n# include <stdlib.h>\n# include <math.h>\n# define MAX 102   \nint gra[MAX][MAX],vis[MAX];  \nint n,m;  \nvoid dfs(int u)  \n{  \n\tint i;\n    vis[u]=1;  \n    for(i=1;i<=n;i++)  \n    if(0==vis[i]&&gra[u][i])dfs(i);  \n}  \nint main()  \n{  \n\tint i,u,v;\n    scanf(\"%d%d\",&n,&m);  \n    for(i=1;i<=m;i++)  \n    {  \n        scanf(\"%d%d\",&u,&v);  \n        gra[u][v]=gra[v][u]=1;  \n    }  \n    dfs(1);  \n    for(i=1;i<=n;i++)  \n    if(0==vis[i])  \n    {  \n        printf(\"NO\\n\");  \n        return 0;  \n    }  \n    if(m==n)\n\t\tprintf(\"FHTAGN!\\n\");  \n    else \n\t\tprintf(\"NO\\n\");  \n    return 0;  \n}","478":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int i,check1=0,check2=0;\r\n    char str[]=\"6789TJQKA\";\r\n    char str_trump[]=\"SHDC\",trump,str1[3],str2[3];\r\n    scanf(\"%c\",&trump);\r\n    getchar();\r\n    gets(str1);\r\n    gets(str2);\r\n    \/\/getchar();\r\n    for(i=0; i<strlen(str);i++)\r\n    {\r\n        if(str[i]==str1[0])\r\n            check1=i;\r\n        if(str[i]==str2[0])\r\n            check2=i;\r\n    }\r\n    if(str1[1]==trump && str2[1]==trump)\r\n    {\r\n        if(check1>check2)\r\n            printf(\"YES\");\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n    else if(str1[1]==trump && str2[1]!=trump)\r\n    {\r\n        printf(\"YES\");\r\n    }\r\n    else if(str1[1]!=trump && str2[1]==trump)\r\n    {\r\n        printf(\"NO\");\r\n    }\r\n    \/\/int check3=0,check4=0;\r\n    else if(str1[1]==str2[1])\r\n    {\r\n        if(check1>check2)\r\n            printf(\"YES\");\r\n        else\r\n            printf(\"NO\");\r\n    }\r\n    else\r\n        printf(\"NO\");\r\n    return 0;\r\n}","484":"#include<stdio.h>\n#include<limits.h>\n#include<string.h>\n#include<stdlib.h>\n#include<math.h>\n#include<stdbool.h>\ntypedef struct n{\n\tint speed,ram,hdd,cost;\n}prop;\n\nint main()\n{\n\tint n,i,j;\n\tscanf(\"%d\",&n);\n\tprop a[n];\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&(a[i].speed),&(a[i].ram),&(a[i].hdd),&(a[i].cost));\n\t}\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(a[i].speed<a[j].speed && a[i].ram<a[j].ram && a[i].hdd<a[j].hdd && i!=j)\n\t\t\t{\n\t\t\t\ta[i].cost=10000;\n\t\t\t}\n\t\t}\n\t}\n\tint min=INT_MAX,ans=0;\n\tfor(i=0;i<n;i++)\n\t{\n\t\tif(a[i].cost<min)\n\t\t{min=a[i].cost;ans=i+1;}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}","486":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    char str[1000],str1[1000];\r\n    int i,j,k,a,b,c,d;\r\n    scanf(\"%s\",str);\r\n    a=str[0]-'0';\r\n    b=str[1]-'0';\r\n    c=str[3]-'0';\r\n    d=str[4]-'0';\r\n    if(a==0 && b<5)\r\n    {\r\n        if(c<b)\r\n            printf(\"0%d:%d0\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==0 && b>=5)\r\n    {\r\n        printf(\"%d%d:%d%d\",a+1,a,a,a+1);\r\n    }\r\n    if(a==1 && b<5)\r\n    {\r\n        if(c<b)\r\n            printf(\"1%d:%d1\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==1 && b>=5)\r\n    {\r\n        printf(\"%d0:0%d\",a+1,a+1);\r\n    }\r\n    if(a==2 && b<3)\r\n    {\r\n        if(c<b)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else\r\n            printf(\"%d%d:%d%d\",a,b+1,b+1,a);\r\n    }\r\n    if(a==2 && b>=3)\r\n    {\r\n        if(c<b)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else if(c==b && d<a)\r\n            printf(\"2%d:%d2\",b,b);\r\n        else\r\n            printf(\"00:00\");\r\n    }\r\n    return 0;\r\n\r\n}","516":"#include<stdio.h>\r\nint find_seven(int n)\r\n{\r\n    int j;\r\n    if(n<4){return -1;}\r\n    if(n%7==0)\r\n    {\r\n        j=n\/7;\r\n        return j;\r\n    }\r\n    if((n-4)%7==0){\r\n        j=(n-4)\/7;\r\n        return j;\r\n    }\r\n\r\n    return find_seven(n-4);\r\n}\r\nint main()\r\n{\r\n    int n,a,b,i;\r\n    scanf(\"%d\",&n);\r\n    if(n==0){printf(\"-1\");}\r\n    else{\r\n    a=find_seven(n);\r\nif(a==-1){printf(\"-1\");}\r\nelse{\r\n\r\n\r\n    b=(n-7*a)\/4;\r\n\r\n for(i=0;i<b;i++)\r\n    {\r\n        printf(\"4\");\r\n    }\r\n    for(i=0;i<a;i++){\r\n    printf(\"7\");}\r\n}}\r\n    return 0;\r\n\r\n}","518":"#include <stdio.h>\nint main ()\n{\n\tint n, d;\n\tint i;\n\tint time=0, firstnumber, nextnumber, poor, temp;\n\n\tscanf(\"%d %d\",&n,&d);\n\n\t\n\tscanf(\"%d\",&firstnumber);\n\tfor (i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&nextnumber);\n\t\tif (firstnumber>nextnumber)\n\t\t{\n\t\t\tpoor=firstnumber-nextnumber;\n\t\t\ttemp=poor\/d+1;\n\t\t\ttime+=temp;\n\t\t\tnextnumber+=temp*d;\n\t\t}\n\t\telse if (firstnumber == nextnumber)\n\t\t\ttime++,nextnumber+=d;\n\t\tfirstnumber=nextnumber;\n\t}\n\tprintf(\"%d\\n\",time);\n\n\treturn 0;\n}","521":"#include<stdio.h>\r\nint main()\r\n{\r\n    long long int n,i,j,k=0;\r\n    scanf(\"%lld\",&n);\r\n    for(i=1;n!=0;i++){\r\n        j=n%10;\r\n        n=n\/10;\r\n        if(j==4||j==7)\r\n            k++;\r\n    }\r\n    if(k==4||k==7)\r\n        printf(\"YES\\n\");\r\n    else\r\n        printf(\"NO\\n\");\r\n    return 0;\r\n}","529":"#include<stdio.h>\r\nint main()\r\n{\r\nlong long int n,x,y,i,my,mx;\r\n\r\nscanf(\"%I64d%I64d%I64d\", &n, &x, &y);\r\n\r\nmy=y-n+1;\r\nmx=my*my+n-1;\r\nif(mx>=x && my>0)\r\n    {\r\n        printf(\"%I64d\\n\",my);\r\n        for(i=1;i<n;i++) printf(\"1\\n\");\r\n    }\r\nelse printf(\"-1\");\r\nreturn 0;\r\n}","531":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char str1[100];\r\n    int i;\r\n    char str2[100];\r\n    scanf(\"%s %s\",str1,str2);\r\n    i= strcmpi(str1,str2);\r\n    printf(\"%d\",i);\r\n}","543":"#include<stdio.h>\r\nint main()\r\n{\r\n\r\n    int n,m,i,x,flag=0;\r\n    scanf(\"%d\",&n);\r\n    scanf(\"%d\",&m);\r\n    for(i=0; i<32; i++)\r\n    {\r\n        x=powl(n,i);\r\n        if(m==x)\r\n        {\r\n            printf(\"YES\\n\");\r\n            printf(\"%d\",i-1);\r\n            flag=0;\r\n            break;\r\n        }\r\n        else flag=1;\r\n\r\n    }\r\n    if(flag==1)\r\n    {\r\n        printf(\"NO\");\r\n    }\r\n}","550":"#include<stdio.h>\r\nint a[2005],n,i,j,c,x;\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\r\n\tfor(i=1;i<=n;i++){\r\n\t\tfor(j=i,c=0;j!=-1;j=a[j],c++);\r\n\t\tif(x<c) x=c;\r\n\t}\r\n\tprintf(\"%d\",x);\r\n}","556":"#include <stdio.h>\r\nint main(int argc, char *argv[])\r\n{\r\n\tint n,a,b,max=0,c=0;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%d %d\",&a,&b);\r\n\t\tif(c+b-a>max)\r\n\t\t\tmax=c+b-a;\r\n\t\tc=c+b-a;\r\n\t}\r\n\tprintf(\"%d\",max);\r\n\treturn 0;\r\n}","562":"main(n,m,s,f,t){scanf(\"%d%d\",&n,&m);for(m=m*2-2;n--;printf(\"%d\\n\",s^f?(t+m-(s>f?m+2-s:s))\/m*m+(s>f?m+2-f:f)-1:t))scanf(\"%d%d%d\",&s,&f,&t);}","582":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{ char s[100],b[200];\r\nint l,i,j=0;\r\nscanf(\"%s\",&s);\r\nl=strlen(s);\r\nfor(i=0;i<l;i++)\r\n{if(s[i]!='a'&&s[i]!='A'&&s[i]!='E'&&s[i]!='I'&&s[i]!='O'&&s[i]!='U'&&s[i]!='e'&&s[i]!='i'&&s[i]!='o'&&s[i]!='u'&&s[i]!='Y'&&s[i]!='y')\r\n  { b[j]='.';\r\n      if(s[i]>=65&&s[i]<=90)\r\n    b[j+1]=s[i]+32;\r\n    else\r\n    b[j+1]=s[i];\r\n    j=j+2;\r\n  }\r\n}\r\nfor(i=0;i<=j-1;i++)\r\nprintf(\"%c\",b[i]);\r\nreturn 0;\r\n}","593":"#include <stdio.h>\r\n\r\n\r\nint gcd(int a,int b)\r\n{\r\n    if(b == 0)return a;\r\n    else return gcd(b,a%b);\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int a,b,n;\r\n    int d=1;\r\n    \r\n    \r\n    scanf(\"%d %d %d\", &a, &b, &n);\r\n    while(n)\r\n    {\r\n        if(d%2)\r\n        {\r\n            n -= gcd(a,n);\r\n            d++;\r\n        }\r\n        else\r\n        {\r\n            n -= gcd(b,n);\r\n            d++;\r\n        }\r\n    }\r\n    \r\n    printf(\"%d\", d%2);\r\n    \r\n}","597":"#include <stdio.h>\r\n\r\nint symmetric (char Str[][4])\r\n{\r\n    return Str[0][0] == Str[2][2]\r\n        && Str[0][1] == Str[2][1]\r\n        && Str[0][2] == Str[2][0]\r\n        && Str[1][0] == Str[1][2];\r\n}\r\n\r\nint main()\r\n{\r\n    int i;\r\n    char Str[4][4];\r\n    for(i = 0; i < 3; i++)\r\n        scanf(\"%s\", Str[i]);\r\n\r\n    puts(symmetric (Str) ? \"YES\" : \"NO\");\r\n\r\n    return 0;\r\n}","601":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{   int i,j,k=0;\r\n    char c[10],d[10],a[10],temp;\r\n   scanf(\"%s\",c);\r\n   scanf(\"%s\",d);\r\n int l=strlen(c);\r\n int t=strlen(d);\r\n if(c[0]==d[0]&&l==1&&t==1)\r\n printf(\"OK\");\r\n else\r\n {for(i=0;i<l;i++)\r\n        {\r\n            for(j=0;j<l;j++)\r\n            {\r\n                if((c[i]<c[j]))\r\n                {\r\n                temp=c[i];\r\n                c[i]=c[j];\r\n                c[j]=temp;\r\n            }}\r\n        }\r\n       for(i=0;i<l;i++)\r\n           {\r\n           if(c[i]=='0')\r\n               k++;\r\n       }\r\n\r\n        temp=c[0];\r\n c[0]=c[k];\r\n c[k]=temp;\r\n\r\nif(strcmp(c,d)==0)\r\n    {\r\n    printf(\"OK\");\r\n\r\n}\r\n else\r\n     printf(\"WRONG_ANSWER\");\r\n        return 0;\r\n }\r\n}","604":"\/\/#include <bits\/stdc++.h>\r\n\/\/#include <algorithm>\r\n#include <stdio.h>\r\n\/\/using namespace std;\r\n\r\nint main()\r\n{\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    int n,k;\r\n    scanf(\"%d %d\",&n,&k);\r\n    int i,j,ara[2000];\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        scanf(\"%d\",&ara[i]);\r\n    }\r\n    for(i=k; i<=n; i++)\r\n    {\r\n\r\n        if(ara[i]==0)\r\n        {\r\n            if(i==n)\r\n                i=1;\r\n            else\r\n                continue;\r\n        }\r\n        if(ara[i]==1)\r\n        {\r\n            printf(\"%d\",i);\r\n            return 0;\r\n        }\r\n        if(i==n)\r\n        {\r\n            i=1;\r\n        }\r\n    }\r\n    return 0;\r\n}","605":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    char str[100],str1[]=\"front\",str2[]=\"back\";\r\n    int n;\r\n    scanf(\"%s\",str);\r\n    scanf(\"%d\",&n);\r\n    if(strcmp(str,str1)==0)\r\n    {\r\n        if(n==1)\r\n        {\r\n            printf(\"L\");\r\n        }\r\n        else\r\n            printf(\"R\");\r\n    }\r\n    else if(strcmp(str,str2)==0)\r\n    {\r\n        if(n==1)\r\n        {\r\n            printf(\"R\");\r\n        }\r\n        else\r\n            printf(\"L\");\r\n    }\r\n    return 0;\r\n}","608":"#include <stdlib.h>\r\n#include <stdio.h>\r\n#include <memory.h>\r\n#define maxn 110\r\nint first[maxn],v[maxn*2],sgte[maxn*2];\r\nint len,e;\r\nvoid init();\r\nvoid add_edge(int a,int b);\r\nint max(int n1,int n2);\r\nint dfs(int u,int fa);\r\n\r\nint main(){\r\n    FILE *ptrIn=fopen(\"input.txt\", \"r\");\r\n    FILE *ptrOu=fopen(\"output.txt\", \"w\");\r\n    int n,m;\r\n    while(fscanf(ptrIn,\"%d\",&n) != EOF){\r\n        int ans = 0;\r\n        while(n--){\r\n            fscanf(ptrIn,\"%d\",&m);\r\n            init();\r\n            len = 0;\r\n            int i;\r\n            for(i = 0;i < m-1;i++){\r\n                int a,b;\r\n                fscanf(ptrIn,\"%d%d\",&a,&b);\r\n                add_edge(a,b);\r\n                add_edge(b,a);\r\n            }\r\n            dfs(1,-1);\r\n            ans += len;\r\n        }\r\n        fprintf(ptrOu,\"%d\",ans);\r\n    }\r\n}\r\n\r\nvoid init(){\r\n    e = 0;\r\n    memset(first,-1,sizeof(first));\r\n}\r\n\r\nvoid add_edge(int a,int b){\r\n    v[e] = b;\r\n    sgte[e] = first[a];\r\n    first[a] = e++;\r\n}\r\n\r\nint dfs(int u,int fa){\r\n    int ret = 0,maxdep,i;\r\n    for(i = first[u];i != -1;i = sgte[i]){\r\n        if(v[i] == fa)\r\n            continue;\r\n        maxdep = dfs(v[i],u);\r\n        len = max(len,ret + maxdep + 1);\r\n        ret = max(ret,maxdep + 1);\r\n    }\r\n    return ret;\r\n}\r\n\r\nint max(int n1,int n2){\r\n   return (n1<n2)?n2:n1;\r\n}","628":"#include<stdio.h>\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n%4==0||n%7==0||n%47==0||n%74==0||n%44==0||n%77==0||n%444==0||n%447==0||n%477==0||n%777==0||n%774==0||n%744==0||n%474==0||n%747==0){\r\n        printf(\"YES\");\r\n    }\r\n    else{\r\n        printf(\"NO\");\r\n    }\r\n}","640":"#include<stdio.h>\r\n#include<conio.h>\r\nint main()\r\n{\r\n    int n,a,b;\r\n    scanf(\"%d %d %d\",&n,&a,&b);\r\n    if(a+b==n)\r\n    {\r\n        printf(\"%d\",a+1);\r\n    }\r\n    else if(a+b<n)\r\n    {\r\n        printf(\"%d\",b+1);\r\n    }\r\n    else\r\n        printf(\"%d\",n-a);\r\n    return 0;\r\n}","653":"#include<stdio.h>\r\nmain()\r\n{int n,inch,feet;\r\nscanf(\"%d\",&n);\r\nfeet=n\/3;\r\nif(n%3==2)\r\nfeet++;\r\nprintf(\"%d %d \",feet\/12,feet%12);\r\nreturn 0;\r\n}","659":"#include<stdio.h>\n#include<math.h>\nint main()\n{\n    int N,n,x,y,a = 0,b = 0;\n    double l = 0;\n    scanf(\"%d%d\",&N,&n);\n    scanf(\"%d%d\",&x,&y);\n    N--;\n    while(N--)\n    {\n        a = x;\n        b = y;\n        scanf(\"%d%d\",&x,&y);\n        l += sqrt((x - a) * (x - a) *1.0 + 1.0*(y - b) * (y - b));\n        \n    }\n    printf(\"%.6f\",n*1.0*l\/50.0);\n    return 0;\n}","667":"\/\/\n\/\/  main.cpp\n\/\/  CF129A\n\/\/\n\/\/  Created by IntelliegeWither on 15\/12\/23.\n\/\/  Copyright \u00a9 2015\u5e74 IntelliegeWither. All rights reserved.\n\/\/\n\n#include<stdio.h>\nint main()\n{\n    int a[105],i,j,n,count=0,sum=0;\n    while(scanf(\"%d\",&n)!=EOF)\n    {\n        for(i=0;i<n;i++)\n        {\n            scanf(\"%d\",&a[i]);\n        }\n        count=0;\n        sum=0;\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                    sum+=a[j];\n            }\n            sum-=a[i];\n            if(sum%2==0)\n            {\n                count++;\n            }\n            sum=0;\n        }\n        printf(\"%d\\n\",count);\n    }\n}","671":"int main(){\r\n    int a,x,y,z,s=0;\r\n    scanf(\"%d\",&a);\r\n    for(x=2;x<a;x++)\r\n        for(z=a;z;s+=z%x,z\/=x);\r\n    for(x=s,y=a-2;z=x%y;x=y,y=z);\r\n    printf(\"%d\/%d\",s\/y,(a-2)\/y);\r\n    return 0;\r\n}","673":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char s[100];\r\n    scanf(\"%s\",&s);\r\n    int n,i;\r\n    n=strlen(s);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(s[i]=='H'||s[i]=='Q'||s[i]=='9')\r\n        {\r\n            printf(\"YES\");\r\n            goto line1;\r\n        }\r\n       \r\n        \r\n    }\r\n    printf(\"NO\");\r\n    line1 :\r\n    return 0;\r\n}","676":"#include <stdio.h>\r\nint a[200002], ans[200002];\r\nint main()\r\n{\r\n    int n, i, c=0;\r\n    double sum=0;\r\n    scanf(\"%d\", &n); for(i=0; i<n; i++) {scanf(\"%d\", &a[i]); sum=sum+a[i];}\r\n    for(i=0;i<n;i++) if(a[i]==sum\/n) ans[c++]=i+1;\r\n    printf(\"%d\\n\", c);\r\n    for(i=0; i<c; i++) printf(\"%d \", ans[i]);\r\n    return 0;\r\n}","678":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,p;\r\n    scanf(\"%d\",&n);\r\n    int x[n];\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        scanf(\"%d\",&p);\r\n        x[p] = i;\r\n    }\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        printf(\"%d\",x[i]);\r\n        if(i <= (n-1))\r\n        {\r\n            printf(\" \");\r\n        }\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}","688":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tchar str[105];\r\n\tint len,i,a=0,b=0,count;\r\n\tgets(str);\r\n\tlen=strlen(str);\r\n\r\n\tfor(i=0;i<len;i++){\r\n\t\tif(i==0){\r\n\t\t\tcount=1;\r\n\t\t\tif(str[i]=='P'){\r\n\t\t\t\ta++;\r\n\t\t\t}\r\n\t\t\telse if(str[i]=='C'){\r\n\t\t\t\tb++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(i>0){\r\n           if(str[i]=='P'){\r\n\t\t\tif(a==0){\r\n\t\t\t\tcount++;\r\n\t\t\t\ta++;\r\n\t\t\t\tb=0;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\tb=0;\r\n\t\t\ta++;\r\n\t\t\tif(a>5){\r\n\t\t\t\tcount++;\r\n\t\t\t\tif(str[i+1]=='P'){\r\n\t\t\t\ta=1;\r\n\t\t\t}\r\n\t\t\t   else{\r\n\t\t\t\ta=0;\r\n\t\t\t   }\r\n           }\r\n           }\r\n\t\t}\r\n           else if(str[i]=='C'){\r\n\t\t\tif(b==0){\r\n\t\t\t\tcount++;\r\n\t\t\t\ta=0;\r\n\t\t\t\tb++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\ta=0;\r\n\t\t\tb++;\r\n\t\t\tif(b>5){\r\n\t\t\t\tcount++;\r\n\t\t\t    if(str[i+1]=='C'){\r\n\t\t\t\t\tb=1;\r\n\t\t\t    }\r\n\t\t\t    else{\r\n\t\t\t\tb=0;\r\n\t\t\t    }\r\n\t\t\t}\r\n           }\r\n\t   }\r\n\t}\r\n\t\t}\r\nprintf(\"%d\",count);\r\n\r\nreturn 0;\r\n}","689":"#include <stdio.h>\r\nint main()\r\n{\r\n    int n, day[8], i;\r\n    scanf(\" %d\", &n);\r\n    for(i = 1; i <= 7; i++) scanf(\" %d\", &day[i]);\r\n    while(1) {\r\n        for(i = 1; i <= 7; i++) {\r\n            n -= day[i];\r\n            if(n <= 0) goto ans;\r\n        }\r\n    }\r\n    ans:\r\n    printf(\"%d\", i);\r\n    return 0;\r\n}","695":"#include <stdio.h>\r\nint mapa[202][202];\r\nint n,w;\r\nint main(){\r\n    int i,ra,rb,r;\r\n    int a,b;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<n;i++)\r\n    {\r\n        scanf(\"%d%d\",&a,&b);\r\n        mapa[a][b]=mapa[b][a]=1;\r\n    }\r\n    int c=0;\r\n    for(a=1;a<=n;a++)\r\n        for(b=a+1;b<=n;b++)\r\n            if(mapa[a][b]==1){\r\n                mapa[a][b]=mapa[b][a]=0;\r\n                go(a);\r\n                ra=go(w);\r\n                go(b);\r\n                rb=go(w);\r\n                r=ra*rb;\r\n\r\n                if(c<r){\r\n                    c= r;\r\n                }\r\n                mapa[a][b]=mapa[b][a]=1;\r\n            }\r\n    printf(\"%d\", c);\r\n    return 0;\r\n}\r\n\r\n\r\nint go(int x){\r\n    int u[202]={};\r\n    int v[202]={};\r\n    int i,j=1,k=0;\r\n    v[0]=x;\r\n    u[x]=1;\r\n    while(k<j) {\r\n        x=v[k++];\r\n        for(i=1;i<=n;i++){\r\n            if(mapa[x][i] && u[i]==0)\r\n            {\r\n                u[i]=u[x]+1;\r\n                v[j++]=i;\r\n            }\r\n        }\r\n    }\r\n    w=v[j-1];\r\n    return (u[v[j-1]]-1);\r\n}","697":"#include<stdio.h>\r\nint main() {\r\n\r\n    int m,n,i,j,max=0,min=99999999,max2=0,min2=99999999;\r\n    char c[1000][1000];\r\n\r\n    scanf(\" %d %d\",&m,&n);\r\n    for(i=0; i<m; i++)\r\n        for(j=0; j<n; j++)\r\n            scanf(\" %c\",&c[i][j]);\r\n\r\n    for(i=0; i<m; i++)\r\n    {\r\n        for(j=0; j<n; j++)\r\n        {\r\n            if(c[i][j]=='*')\r\n            {\r\n                if(j>max)\r\n                    max=j;\r\n                if(j<min)\r\n                    min=j;\r\n            }\r\n        if(c[i][j]=='*')\r\n        {\r\n                if(i>max2)\r\n                    max2=i;\r\n                if(i<min2)\r\n                    min2=i;\r\n        }\r\n        }\r\n    }\r\n\/\/  printf(\"%d %d %d %d\",min,max,min2,max2);\r\n\r\n    for(i=min2; i<=max2; i++)\r\n    {\r\n        for(j=min; j<=max; j++)\r\n        {\r\n            printf(\"%c\",c[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n\r\n\r\n\r\n\r\nreturn 0;\r\n}","699":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n, x, leftD = 0, rightD = 1000, i, a, b, aux;\r\n\r\n    scanf(\"%d %d\", &n, &x);\r\n\r\n    for(i = 0; i < n; i++)\r\n    {\r\n        scanf(\"%d %d\", &a, &b);\r\n        if(a > b)\r\n        {\r\n            aux = a;\r\n            a = b;\r\n            b = aux;\r\n        }\r\n        if(rightD > b)\r\n            rightD = b;\r\n        if(leftD < a)\r\n            leftD = a;\r\n    }\r\n\r\n    if (rightD-leftD<0) printf(\"-1\\n\");\r\n\telse if (x < rightD && leftD < x) printf(\"0\\n\");\r\n\telse if (abs(rightD-x)<abs(x-leftD)) printf(\"%d\\n\",abs(rightD-x));\r\n\telse printf(\"%d\\n\",abs(x-leftD));\r\n\r\n\r\n    return 0;\r\n\r\n}","703":"#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar a[100],b[100],c[100],x[100];\n\tscanf(\"%[^\\n]%*c\\n\",a);\n\tscanf(\"%[^\\n]%*c\\n\",b);\n\tscanf(\"%[^\\n]%*c\",c);\n\tint l=strlen(a);\n\tint m=strlen(b);\n\tint n=strlen(c);\n\tif((l+m)==n)\n\t{\n\t\tint i;\n\t\t\/*for(i=0; i<n; i++)\n\t\t{\n\t\t\tx[i]=c[i];\n\t\t}*\/\n\t\tint j,d=0,e=0;\n\t\tfor(i=0; i<l; i++)\n\t\t{\n\t\t\tfor(j=0; j<n; j++)\n\t\t\t{\n\t\t\t\tif(a[i]==c[j])\n\t\t\t\t{  d++;\n\t\t\t\t   c[j]='\\0';\n\t\t\t\t   break;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/printf(\"%d\\n\",d);\n\t\t}\n\t\tfor(i=0; i<m; i++)\n\t\t{\n\t\t\tfor(j=0; j<n; j++)\n\t\t\t{\n\t\t\t\tif(b[i]==c[j])\n\t\t\t\t{   e++;\n\t\t\t\t    c[j]='\\0';\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/printf(\"%d\\n\",e);\n\t\t}\n\t\tif(d==l && e==m)\n\t\t{\n\t\t\tprintf(\"YES\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"NO\");\n\t\t}\n\t}\n\telse\n\t{\n\t\tprintf(\"NO\");\n\t}\n\treturn 0;\n}","705":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nstruct dato{\r\n    int h;\r\n    char name[ 10 ];\r\n};\r\n\r\nvoid quicksort( struct dato a[], int primero, int ultimo );\r\n\r\nint main()\r\n{\r\n    struct dato a[ 3000 ];\r\n    struct dato r[ 3000 ] = { 0 };\r\n\r\n    int i, j, k, n;\r\n\r\n    scanf(\"%d\", &n );\r\n\r\n    for( i = 0; i < n; i++ )\r\n        scanf(\"%s %d\", &a[ i ].name, &a[ i ].h );\r\n\r\n    quicksort( a, 0, n-1 );\r\n\r\n    r[ 0 ] = a[ 0 ];\r\n\r\n    if( r[ 0 ].h != 0 ){\r\n        printf(\"-1\"); return 0;\r\n    }\r\n\r\n    for( i = 1; i < n; i++ )\r\n    {\r\n        if( a[ i ].h > i ){\r\n            printf(\"-1\"); return 0;\r\n        }\r\n        j = a[ i ].h;\r\n\r\n        for( k = i; k > j; k-- )\r\n            r[ k ] = r[ k-1 ];\r\n        r[ j ] = a[ i ];\r\n    }\r\n\r\n    for( i = 0; i < n; i++ )\r\n        printf(\"%s %d\\n\", r[ i ].name, 100000 - 10 * r[ i ].h );\r\n\r\n    return 0;\r\n}\r\n\r\nvoid quicksort( struct dato a[], int primero, int ultimo )\r\n{\r\n    int i, j, central;\r\n    int pivote;\r\n\r\n    central = ( primero + ultimo ) \/ 2;\r\n    pivote  = a[ central ].h;\r\n\r\n    i = primero; j = ultimo;\r\n    do{\r\n        while( a[ i ].h < pivote ) i++;\r\n        while( a[ j ].h > pivote ) j--;\r\n\r\n        if( i <= j )\r\n        {\r\n            static struct dato temp;\r\n            temp = a[ i ];\r\n            a[ i ] = a[ j ];\r\n            a[ j ] = temp;\r\n            i++; j--;\r\n        }\r\n    }while( i <= j );\r\n\r\n    if( primero < j )\r\n        quicksort( a, primero, j );\r\n    if( i < ultimo )\r\n        quicksort( a, i, ultimo );\r\n}","717":"#include <stdio.h>\r\n#include <math.h>\r\n#include <stdlib.h>\r\n#define EPS 1e-10\r\n#define SQ(x) ((x)*(x))\r\n#define EQ(x,y) (fabs((x)-(y))<EPS)\r\n\r\nint r,h;\r\ndouble ax,ay,az,ad,bx,by,bz,bd,d,th,ha,hb,temp1,temp2;\r\n\r\nvoid print(double a){exit(!printf(\"%.14f\\n\",a));}\r\nvoid swap(double*a,double*b){double temp=*a;*a=*b;*b=temp;}\r\ndouble hypot3(double x,double y,double z){return sqrt(x*x+y*y+z*z);}\r\ndouble angle(double a,double b,double c,double d){return atan2(a*d-b*c,a*c+b*d);}\r\n\r\n\r\n\r\ndouble hh(double thp,double th){\r\n    double lr,lb,bth;\r\n    double tx=r*cos(th),ty=r*sin(th);\r\n    lr=r*sqrt(2*(1-cos(thp-th)));\r\n    bth=angle(tx,ty,bx,by);\r\n    lb=sqrt(SQ(d)+SQ(bd)-2*d*bd*cos(bth*r\/d));\r\n    return lr+lb;\r\n}\r\n\r\ndouble g(double th){\r\n    double la,ath,sx,sy;\r\n    double blg,brg,bllg,brrg,bld,brd;\r\n    sx=r*cos(th); sy=r*sin(th);\r\n    ath=angle(sx,sy,ax,ay);\r\n    la=sqrt(SQ(d)+SQ(ad)-2*d*ad*cos(ath*r\/d));\r\n\r\n    blg=0; brg=2*M_PI;\r\n    while(brg-blg>EPS){\r\n        bllg=(blg*19+brg)\/20; brrg=(blg+brg*19)\/20;\r\n        bld=hh(th,bllg); brd=hh(th,brrg);\r\n        bld>brd?blg=bllg:(brg=brrg);\r\n    }\r\n    return la+bld;\r\n}\r\n\r\ndouble f(double th){\r\n    double tx=r*cos(th),ty=r*sin(th),lr,lb;\r\n    lr=hypot(ax-tx,ay-ty);\r\n    th=angle(tx,ty,bx,by);\r\n    lb=sqrt(SQ(d)+SQ(bd)-2*d*bd*cos(th*r\/d));\r\n    return lr+lb;\r\n}\r\n\r\nmain(){\r\n    int i,j;\r\n    double ans=1e9,alg,arg,allg,arrg,ald,ard;\r\n\r\n    scanf(\"%d%d%lf%lf%lf%lf%lf%lf\",&r,&h,&ax,&ay,&az,&bx,&by,&bz);\r\n    if(EQ(ax,bx)&&EQ(ay,by)&&EQ(az,bz)) print(.0);\r\n    if(az<EPS&&bz<EPS) print(hypot(ax-bx,ay-by));\r\n    if(bz<az)swap(&ax,&bx),swap(&ay,&by),swap(&az,&bz);\r\n    ad=hypot3(ax,ay,az-h); bd=hypot3(bx,by,bz-h);\r\n    d=hypot(h,r);\r\n    ha=hypot(ax,ay); hb=hypot(bx,by);\r\n    th=acos((ax*bx+ay*by)\/(ha*hb));\r\n\r\n    if(az<EPS){\r\n        if(EQ(bz,h)) print(d+r-ha);\r\n        alg=0; arg=2*M_PI;\r\n        while(arg-alg>EPS){\r\n            allg=(alg*49+arg)\/50; arrg=(alg+arg*49)\/50;\r\n            ald=f(allg); ard=f(arrg);\r\n            ald>ard?alg=allg:(arg=arrg);\r\n        }\r\n        print(ald);\r\n    }\r\n\r\n    if(EQ(bz,h)) print(ad);\r\n    temp1=sqrt(SQ(ad)+SQ(bd)-2*ad*bd*cos(th*r\/d));\r\n    alg=0; arg=2*M_PI;\r\n    while(arg-alg>EPS){\r\n        allg=(alg*49+arg)\/50; arrg=(alg+arg*49)\/50;\r\n        ald=g(allg); ard=g(arrg);\r\n        ald>ard?alg=allg:(arg=arrg);\r\n    }\r\n    temp2=ald;\r\n    \/\/printf(\"%f %f\\n\",temp1,temp2);\r\n    print(temp1<temp2?temp1:temp2);\r\n    return 0;\r\n}","720":"#include<stdio.h>\n#include<string.h> \n  int main() {\n  char num[105], real[100], ima[5] = {'.','0','0','\\0'};\n  int l = 1, j = 0, i = 0, k = 0, c = 0, f = 2;\n  gets(num);\n  if(num[0] == '-' && ++i) \n      real[j++] = '(';\n  real[j++] = '$';\n  while(num[k] != '.' && num[k] != '\\0')\n      if(num[k++] != '-')\n          c++;\n  if(num[k] == '.')\n      while(num[++k] != '\\0' && f--)\n      ima[l++] = num[k];\n  if(num[0] == '-') {\n      ima[3] = ')';\n      ima[4] == '\\0';\n  }\n  if(c < 4)\n      for( ; num[i] != '\\0' && num[i] != '.' ; i++)\n          real[j++] = num[i];\n  else if(c == 4) {\n      real[j+1] = ',';\n      for( ; num[i] != '\\0' && num[i] != '.' ; j++) \n          if(real[j] != ',')\n              real[j] = num[i++];           \n  }\n  else {\n      if(c % 3 == 2)\n          k = j+2; \n      else if(c % 3 == 0)\n          k = j+3;\n      else \n          k = j+1;\n      for( ; num[i] != '\\0' && num[i] != '.' ; j++) \n          if(j == k) {\n              real[j] = ',';\n              k += 4;\n          }          \n          else \n              real[j] = num[i++]; \n  }\n  real[j] = '\\0';\n  strcat(real, ima);\n  puts(real);\n  return 0;\n  }","722":"#include<stdio.h>\r\n#include<string.h>\r\nint check(int n)\r\n{\r\n    if((n>=1)&&(n<=9))\r\n        return 1;\r\n    else\r\n        return 0;\r\n}\r\nint main()\r\n{\r\n    int a[10][10],b[10][10],i,j,vis[15],n=0,mark=0;\r\n    for(i=1;i<=3;i++)\r\n    {\r\n        for(j=1;j<=2;j++)\r\n        {\r\n            scanf(\"%d\",&a[i][j]);\r\n        }\r\n    }\r\n    for(i=1;i<=9&&mark!=1;i++)\r\n    {\r\n        memset(vis,0,sizeof(vis));\r\n        b[1][1]=i;\r\n        vis[i]=1;\r\n        n=a[1][1]-b[1][1];\r\n        if(check(n)&&vis[n]==0)\r\n        {\r\n            b[1][2]=n;\r\n            vis[n]=1;\r\n        }else continue;\r\n        n=a[2][1]-b[1][1];\r\n        if(check(n)&&vis[n]==0)\r\n        {\r\n            b[2][1]=n;\r\n            vis[n]=1;\r\n        }else continue;\r\n        n=a[2][2]-b[1][2];\r\n        if(check(n)&&vis[n]==0)\r\n        {\r\n            b[2][2]=n;\r\n            vis[n]=1;\r\n        }else continue;\r\n        if((b[1][1]+b[2][2]==a[3][1])&&(b[1][2]+b[2][1]==a[3][2])&&(b[2][1]+b[2][2]==a[1][2]))\r\n        {\r\n            mark=1;\r\n        }\r\n    }\r\n    if(mark==0)\r\n        printf(\"%d\",-1);\r\n    else\r\n    {\r\n        for(i=1;i<=2;i++)\r\n        {\r\n            for(j=1;j<=2;j++)\r\n            {\r\n                printf(\"%d \",b[i][j]);\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}","724":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n, a[202], min=1000, max=0, b, d, i, m;\r\n    scanf(\"%d\", &n);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        scanf(\"%d\", &a[i]);\r\n        if(a[i]>max)\r\n        {\r\n            b=i;\r\n            max=a[i];\r\n        }\r\n        if(a[i]<=min)\r\n        {\r\n            d=i;\r\n            min=a[i];\r\n        }\r\n    }\r\n    m=b+(n-d-1);\r\n    if(b>d)\r\n    {\r\n        m--;\r\n    }\r\n    printf(\"%d\", m);\r\n\r\n    return 0;\r\n}","730":"#include<stdio.h>\n#include<string.h>\nint n,i,j,m,t,s,d,u,uu;\nchar a[100002],b[100002];\nint main()\n{\n\tscanf(\"%s %s\",a,b);\n\tu=strlen(a);\n\tfor(i=0;i<u;i++)\n\t{\n\t\tif(a[i]!=b[i]){ uu++;\n\t\tif(a[i]=='4') t++;}\n\t}\n\tprintf(\"%d\",uu-(t<uu-t?t:uu-t));\n\treturn 0;\n}","732":"#include <stdio.h>\r\nint main()\r\n{\r\nint k,l,m,n,d,count=0,i;\r\nscanf(\"%d%d%d%d%d\",&k,&l,&m,&n,&d);\r\nfor(i=1 ; i<=d ; i++)\r\n    if(i%k==0 || i%l==0 || i%m==0 || i%n==0)\r\n        count++;\r\nprintf(\"%d\\n\",count);\r\nreturn 0;\r\n}","751":"#include <stdio.h>\r\nint main(void)\r\n{\r\n\tint i,j,k,sum=0,t;\r\n\tint mon[12];\r\n\r\n\tscanf(\"%d\",&k);\r\n\tfor(i=0;i<12;++i)\r\n\t{\r\n\t\tscanf(\"%d\",&mon[i]);\r\n\t\t\r\n\t\tt=mon[i];\r\n\t\tfor(j=i-1;j>=0 && mon[j]<t;j--) mon[j+1]=mon[j];\r\n\t\tmon[j+1]=t;\r\n\t}\r\n\r\n\tfor(i=0;i<12 && sum<k;++i) sum+=mon[i];\r\n\t\r\n\tif(sum<k) printf(\"-1\");\r\n\telse printf(\"%d\",i);\r\n\treturn 0;\r\n}","757":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n,k,l,c,d,p,nl,np;\r\n    int x,y,z,q,w,e;\r\n  scanf(\"%d\",&n);\r\n  scanf(\"%d\",&k);\r\n  scanf(\"%d\",&l);\r\n  scanf(\"%d\",&c);\r\n  scanf(\"%d\",&d);\r\n  scanf(\"%d\",&p);\r\n  scanf(\"%d\",&nl);\r\n  scanf(\"%d\",&np);\r\n    x=(k*l)\/nl;\r\n    y=c*d;\r\n    z=p\/np;\r\n    q=x\/n;\r\n    w=y\/n;\r\n    e=z\/n;\r\n    if(x<y && x<z)\r\n        printf(\"%d\",q);\r\n    else if(y<x && y<z)\r\n        printf(\"%d\",w);\r\n    else printf(\"%d\",e);\r\n\r\n\r\n}","770":"#include <stdio.h>\r\n\r\nchar str[105][105];\r\nint i,j,k,n,m,max[105],mx,check,ans;\r\nint main()\r\n{\r\n    scanf(\"%d %d\",&n,&m);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        scanf(\"%s\",str[i]);\r\n    }\r\n    for(i=0; i<m; i++)\r\n    {\r\n        mx=0;\r\n        for(j=0; j<n; j++)\r\n        {\r\n            if(str[j][i]-'0'>=mx)\r\n                mx=str[j][i]-'0';\r\n        }\r\n        max[i]=mx;\r\n    }\r\n    for(i=0; i<n; i++)\r\n    {\r\n        check=0;\r\n        for(j=0; j<m; j++)\r\n        {\r\n            if(str[i][j]-'0'==max[j])check=1;\r\n        }\r\n        if(check==1)\r\n            ans++;\r\n    }\r\n    printf(\"%d\",ans);\r\n    return 0;\r\n}","772":"#include <stdio.h>\n\nint min(int x,int y)\n{\n    return x<y?x:y;\n}\n\nint main()\n{\n    int i,j,n,x,y,sum,sun;\n    char a[100010],c[13][3];\n    while(~scanf(\"%s\",a))\n    {\n        memset(c,'\\0',sizeof(c));\n        scanf(\"%d\",&n);\n        for(i=0;i<n;i++)\n            scanf(\"%s\",c[i]);\n        sun=0;\n        for(i=0;i<n;i++)\n        {\n            x=0,y=0,sum=0;\n            for(j=0;j<=strlen(a);j++)\n            {\n                if(a[j]==c[i][0])\n                {\n                    x++;\n                    continue;\n                }\n                else if(a[j]==c[i][1])\n                {\n                    y++;\n                    continue;\n                }\n                else\n                {\n                    sum+=min(x,y);\n                    x=0,y=0;\n                }\n            }\n            sun+=sum;\n        }\n        printf(\"%d\\n\",sun);\n    }\n    return 0;\n}","774":"#include<stdio.h>\r\nint main()\r\n{\r\n    int a[1000],min,max,count=0,i,n;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    min=a[0];\r\n    for(i=0;i<n;i++){\r\n        if(min>a[i]){\r\n            count++;\r\n            min=a[i];\r\n        }\r\n    }\r\n    max=a[0];\r\n    for(i=0;i<n;i++){\r\n        if(max<a[i]){\r\n            count++;\r\n            max=a[i];\r\n        }\r\n    }\r\nprintf(\"%d\\n\",count);\r\nreturn 0;\r\n\r\n}","778":"#include <stdio.h>\r\nmain()\r\n{\r\n\tint n,a[100][100],ctr=0,s1,s2,i,j,k;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0;i<n;i++)\r\n\tfor(j=0;j<n;j++)\r\n\tscanf(\"%d\",&a[i][j]);\r\n\tfor(i=0;i<n;i++)\r\n\tfor(j=0;j<n;j++)\r\n\t{\r\n\t\ts1=s2=0;\r\n\t\tfor(k=0;k<n;k++)\r\n\t\ts1+=a[k][j];\r\n\t\tfor(k=0;k<n;k++)\r\n\t\ts2+=a[i][k];\r\n\t\tif(s1>s2)\r\n\t\tctr++;\r\n\t}\r\n\tprintf(\"%d\\n\",ctr);\r\n\treturn 0;\r\n}","780":"#include<stdio.h>\r\nint main(){\r\n    int a[100];\r\n    int n;\r\n    int j,p = 0;\r\n    scanf(\"%d%d\",&n,&j);\r\n    for(int i = 0; i < n ; i++){\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(int i = 0 ; i < n ; i++){\r\n    if(a[i]>=a[j-1] && a[i]>0){\r\n            p++;\r\n        }\r\n    }\r\n    printf(\"%d\\n\",p);\r\n    return 0;\r\n}","783":"#include<stdio.h>\r\nint main(){\r\n    int n,a,t[4],i,j,sum=0,tmp;\r\n    t[0]=0;\r\n    t[1]=0;\r\n    t[2]=0;\r\n    t[3]=0;\r\n    \/\/rintf(\"%d %d %d %d %d\\n\",t[0],t[1],t[2],t[3],sum);\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&a);\r\n        t[a-1]++;\r\n    }\r\n    \/\/printf(\"%d %d %d t3=%d %d\\n\",t[0],t[1],t[2],t[3],sum);\r\n    sum=t[3];\r\n    \/\/printf(\"%d\\n\",sum);\r\n    if(t[2]>t[0])\r\n        t[0]=0;\r\n    else\r\n        t[0]=t[0]-t[2];\r\n    sum=sum+t[2];\r\n    sum=sum+(t[0]\/4);\r\n    \/\/printf(\"%d\\n\",sum);\r\n    t[0]=t[0]%4;\r\n    sum=sum+(t[1]\/2);\r\n    \/\/printf(\"%d\\n\",sum);\r\n    t[1]=t[1]%2;\r\n    if(t[0]>=(2*t[1]))\r\n        t[0]=t[0]-(2*t[1]);\r\n    else{\r\n        t[0]=0;\r\n    }\r\n    if(t[0]>0)\r\n        sum++;\r\n    sum=sum+t[1];\r\n    printf(\"%d\\n\",sum);\r\n    return 0;\r\n}","788":"#include<stdio.h>\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\nint sum[28][800010];\n\nvoid up(int k,int rt)\n{\n    sum[k][rt]=sum[k][rt<<1]+sum[k][rt<<1|1];\n}\n\nvoid build(int k,int l,int r,int rt)\n{\n    sum[k][rt]=0;\n    if(l==r)\n        return ;\n    int mid=(l+r)>>1;\n    build(k,lson);\n    build(k,rson);\n    up(k,rt);\n}\nvoid update(int k,int key,int add,int l,int r,int rt)\n{\n    if(l==r)\n    {\n        sum[k][rt]+=add;\n        \/\/printf(\"%d %d %d\",k,l,sum[k][rt]);\n        \/\/system(\"pause\");\n        return ;\n    }\n    int mid=(l+r)>>1;\n    if(key<=mid)\n        update(k,key,add,lson);\n    else\n        update(k,key,add,rson);\n        up(k,rt);\n}\nint search(int k,int order,int l,int r,int rt)\n{\n    if(l==r)\n    {\n       \/\/ printf(\"%d\",l);\n        \/\/system(\"pause\");\n        return l;\n    }\n    int mid=(l+r)>>1;\n    if(order<=sum[k][rt<<1])\n        return search(k,order,lson);\n    else\n        return search(k,order-sum[k][rt<<1],rson);\n}\nint ask(int k,int key,int l,int r,int rt)\n{\n    if(l==r)\n    {\n       \/\/ printf(\"%d %d %d\",k,l,sum[k][rt]);\n        \/\/system(\"pause\");\n        return sum[k][rt];\n    }\n    int mid=(l+r)>>1;\n    if(key<=mid)\n        return ask(k,key,lson);\n    else\n        return ask(k,key,rson);\n}\nint main()\n{\n    int k;\n    char str[3000],f;\n    int i,j,n,q;\n    scanf(\"%d\",&k);\n    scanf(\"%s\",str);\n    int len=strlen(str);\n    for(i=1;i<=26;i++)\n        build(i,1,len*k,1);\n        scanf(\"%d\",&n);\n        for(i=0;i<k;i++)\n            for(j=0;str[j];j++)\n        {\n            int t=str[j]-'a'+1;\n            update(t,i*len+j+1,1,1,len*k,1);\n        }\n        while(n--)\n        {\n            int order;\n            char q;\n            scanf(\"%d %c\",&order,&q);\n            int t=q-'a'+1;\n            int ans=search(t,order,1,len*k,1);\n            update(t,ans,-1,1,len*k,1);\n\n        }\n        for(i=0;i<k;i++)\n            for(j=0;str[j];j++)\n            {\n                int t=str[j]-'a'+1;\n                if(ask(t,i*len+j+1,1,k*len,1))\n                    printf(\"%c\",str[j]);\n            }\n    return 0;\n}","790":"#include<stdio.h>\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[n],i;\r\n    for(i=0; i<n; i++) {\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n    int j,count;\r\n    for(i=0; i<n-1; i++) {\r\n        for(j=1; j<n-i; j++) {\r\n            count=0;\r\n            if(arr[j]>arr[j-1]) {\r\n                count=arr[j];\r\n                arr[j]=arr[j-1];\r\n                arr[j-1]=count;\r\n            }\r\n        }\r\n    }\r\n    int p=0;\r\n    while(p<n) {\r\n        int temp=0;\r\n        count=0;\r\n        for(i=0; i<p+1; i++) {\r\n            temp=temp+arr[i];}\r\n            for(j=p+1; j<n; j++) {\r\n                count=count+arr[j];\r\n            }\r\n            if(temp>count) {\r\n                printf(\"%d\",i);\r\n                break;\r\n            } else {\r\n                ++p;\r\n            }\r\n        }\r\n}","796":"#include<stdio.h>\r\n#include<stdlib.h>\r\nint n_max = 50001;\r\nint k_max = 500;\r\n\r\nlong long dp[50001][500];\r\nint respuesta;\r\nint cabeza[50001],k,n,u,v,e;\r\n\r\nstruct nodo{\r\n    int to;\r\n    int next;\r\n};\r\nstruct nodo nodo[50001*2];\r\n\r\nvoid addnodo(int u,int v,int k);\r\nvoid dfs(int fa,int u);\r\n\r\nint main()\r\n{\r\n    int i=0;\r\n    scanf(\"%d%d\",&n,&k);\r\n\r\n    for(i = 1; i < 50001; i++ )\r\n        cabeza[i]=-1;\r\n\r\n    for(i = 1;i < n;i ++)\r\n    {\r\n        scanf(\"%d%d\",&u,&v);\r\n        addnodo(u,v,e++);\r\n        addnodo(v,u,e++);\r\n    }\r\n    dfs(0,1);\r\n    printf(\"%d\\n\",respuesta);\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\nvoid addnodo(int u,int v,int k)\r\n{\r\n    nodo[k].to = v;\r\n    nodo[k].next = cabeza[u];\r\n    cabeza[u] = k;\r\n}\r\n\r\n\r\nvoid dfs(int fa,int u)\r\n{\r\n    dp[u][0] = 1;\r\n    int i=0;\r\n    for(i = cabeza[u];~i;i = nodo[i].next){\r\n        int v = nodo[i].to;\r\n        if(fa == v) continue;\r\n        dfs(u,v);\r\n        int j=0;\r\n        for(j = 0;j < k;j ++)\r\n            respuesta += dp[u][j] * dp[v][k-j-1];\r\n        for(j = 1;j <= k;j ++)\r\n            dp[u][j] += dp[v][j-1];\r\n    }\r\n}","827":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,c1,c2,c3,c4,count=0,a[1001];\r\n    scanf(\"%d\",&n);\r\n    if(n<5)\r\n    {\r\n        printf(\"0\");\r\n    }\r\n    else\r\n    {\r\n        n=n*2;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        n=n-1;\r\n        for(i=0; i<n; i+=2)\r\n        {\r\n            c1=0;\r\n            c2=0;\r\n            c3=0;\r\n            c4=0;\r\n            for(j=0; j<n; j+=2)\r\n            {\r\n                if(i==j)continue;\r\n                else if(a[j]>a[i] && a[j+1]== a[i+1])\r\n                {\r\n                    c1++;\r\n                }\r\n                else if(a[j]<a[i] && a[j+1]== a[i+1])\r\n                {\r\n                    c2++;\r\n                }\r\n                else if(a[j]==a[i] && a[j+1]< a[i+1])\r\n                {\r\n                    c3++;\r\n                }\r\n                else if(a[j]==a[i] && a[j+1]> a[i+1])\r\n                {\r\n                    c4++;\r\n\r\n                }\r\n                if(c1>0 && c2>0 && c3>0 && c4>0)\r\n                {\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\",count);\r\n    }\r\n}","832":"#include <stdio.h>\r\n#include <stdlib.h>\r\nvoid sorting(int f,int l,int arr[][2]){\r\n    int i,j;\r\n    for(i=f;i<=l;i++){\r\n        for(j=f;j<l;j++){\r\n            if(arr[j][1]>arr[j+1][1]){\r\n                int temp=arr[j][1];\r\n                arr[j][1]=arr[j+1][1];\r\n                arr[j+1][1]=temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int n,k;\r\n    scanf(\"%d %d\",&n,&k);\r\n    int i,j;\r\n    int arr[n][2];\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<2;j++){\r\n            scanf(\"%d\",&arr[i][j]);\r\n        }\r\n    }\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<n-1;j++){\r\n            if(arr[j][0]<arr[j+1][0]){\r\n                int temp=arr[j][0];\r\n                arr[j][0]=arr[j+1][0];\r\n                arr[j+1][0]=temp;\r\n                int temp1=arr[j][1];\r\n                arr[j][1]=arr[j+1][1];\r\n                arr[j+1][1]=temp1;\r\n            }\r\n        }\r\n    }\r\n    int s=0;\r\n    int o=0;\r\n    for(i=o;i<n;i++){\r\n        if((arr[i][0]!=arr[s][0])){\r\n            sorting(s,i-1,arr);\r\n            s=i;\r\n            o=i;\r\n        }\r\n        else if(i==n-1){\r\n            sorting(s,i,arr);\r\n        }\r\n    }\r\n   \/* printf(\"\\n\");\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<2;j++){\r\n            printf(\"%d \",arr[i][j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    printf(\"\\n\"); *\/\r\n    int ans=0;\r\n    for(i=0;i<n;i++){\r\n            if(arr[i][0]==arr[k-1][0]){\r\n                if(arr[i][1]==arr[k-1][1]){\r\n                    ans++;\r\n                }\r\n            }\r\n    }\r\n    printf(\"%d\",ans);\r\n    return 0;\r\n}","834":"#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n, x, y, ans;\r\n    scanf(\" %d %d %d\", &n, &x, &y);\r\n    ans = (int)ceil((((double)y \/ (double)100) * (double)n)) - x;\r\n    if(ans > 0) printf(\"%d\", ans);\r\n    else printf(\"0\");\r\n    return 0;\r\n}","841":"#include<stdio.h>\r\nint main ()\r\n{\r\n    int i,j,line[2200],sub, n,a,b,temp;\r\n    scanf(\"%d%d%d\", &n , &a ,&b);\r\n    for(i=0;i<n;i++)\r\n    scanf(\"%d\",&line[i]);\r\n    for(i=n-2;i>=0;i--)\r\n        {\r\n            for (j=0;j<=i;j++)\r\n            {\r\n                if(line[j]>line[j+1])\r\n                {\r\n                    temp = line[j];\r\n                    line[j] = line[j+1];\r\n                    line[j+1] = temp ;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    sub = line[n-a] - line [b-1];\r\n        printf(\"%d\",sub);\r\n\r\n\r\n        return 0;\r\n\r\n\r\n\r\n}","843":"#include<stdio.h>\n#include<string.h>\nchar w[100010],s[100010];\n\nint main()\n{\n\tint i,j;\n\tint c,t;\n\tint len1,len2;\n\tint a[10]={0};\n\n\tscanf(\"%s\",w);\n\tlen1=strlen(w);\n\tscanf(\"%s\",s);\n\tlen2=strlen(s);\n\n\tfor(i=0;i<len2;i++)\n\t{\n\t\tt=s[i]-'0';\n\t\ta[t]++;\n\t}\n\n\tfor(i=0;i<len1;i++)\n\t{\n\t\tfor(j=9;j>0;j--)\n\t\t{\n\t\t\tif(j>(w[i]-'0')&&a[j]>0)\n\t\t\t{\n\t\t\t\tw[i]+=j-(w[i]-'0');\n\t\t\t\ta[j]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%s\\n\",w);\n\treturn 0;\n}","847":"#include <stdio.h>\r\n#include <math.h>\r\nint isprime(int n) {\r\n    int i;\r\n    for(i=2;i*i<=n;i++) {\r\n        if(n%i==0) {\r\n            return 0;\r\n        }\r\n    }\r\n    return n;\r\n}\r\nint main ()\r\n{\r\n    int i,n,k,x[2000],y,j,flag,root,count=0;\r\n    scanf(\"%d %d\",&n,&k);\r\n    if(k==0) {\r\n        printf(\"YES\\n\");\r\n        return 0;\r\n    }\r\n    x[1]=2;\r\n    j=1;\r\n    for(i=3;i<=n;i=i+2) {\r\n        if(isprime(i)){\r\n            j++;\r\n            x[j]=i;\r\n           \/\/ printf(\"%d\\n\",x[j]);\r\n            if((x[j]+x[j-1]+1<=n) && isprime(x[j]+x[j-1]+1)) {\r\n               \/\/printf(\"%d %d p\\n\",x[j],x[j]+x[j-1]+1);\r\n                count++;\r\n            }\r\n        }\r\n        if(count>=k) {\r\n            printf(\"YES\\n\");\r\n            return 0;\r\n        }\r\n    }\r\n   \/\/ printf(\"%d\\n\",count);\r\n    printf(\"NO\\n\");\r\n    return 0;\r\n}","849":"int x,y,z;main(){while(scanf(\"%d\",&x)>0)y+=z++*x;printf(\"%d\",y);return 0;}","850":"#include<stdio.h>\r\nint main()\r\n{\r\n    long long int n,m,s=0;\r\n    scanf(\"%I64d %I64d\",&n,&m);\r\n    while (m)\r\n    {\r\n        s=s*10+m%10;\r\n        m=m\/10;\r\n    }\r\n    printf(\"%I64d\",s+n);\r\n    \r\n}","853":"#include<stdio.h>\r\nmain()\r\n{\r\n\tlong long int i,n,s=1;\r\n\tscanf(\"%I64d\",&n);\r\n\tif(n==1)\r\n\tprintf(\"1\");\r\n\telse\r\n\t{\r\n\tprintf(\"%I64d\",6*(n-1)*n+1);\r\n}\r\n}","857":"#include<stdio.h>\r\n#include<string.h>\r\n\r\nint main()\r\n{\r\n    int i;\r\n    scanf(\"%d\",&i);\r\n    switch(i)\r\n    {\r\n        case 1: printf(\"2\");break;\r\n        case 2: printf(\"3\");break;\r\n        case 3: printf(\"1\");break;\r\n        case 4: printf(\"2\");break;\r\n        case 5: printf(\"1\");break;\r\n\r\n    }\r\n    return 0;\r\n       }","859":"main()\n{\n    int n,i,j,l,count=0;\n    scanf(\"%d\",&n);\n    char num[n][21];\n    for(i=0;i<n;i++)\n        scanf(\"%s\",&num[i]);\n    l=strlen(num[0]);\n    for(i=0;i<l;i++)\n    {\n        for(j=1;j<n;j++)\n        {\n            if(num[j-1][i]!=num[j][i])\n            {\n                printf(\"%d\\n\",count);\n                return 0;\n            }\n        }\n        count++;\n    }\n    printf(\"%d\\n\",count);\n    return 0;\n}","863":"main()\r\n{\r\nfloat b,s=0;\r\nint n,i;\r\nfloat k;\r\nscanf(\"%d %f\",&n,&b);\r\nfloat a[n],c[n];\r\nfor(i=0;i<n;i++)\r\n{ scanf(\"%f\",&a[i]);\r\n   s+=a[i]; }\r\n k=(float)((s+b)\/n);\r\nfor(i=0;i<n;i++){\r\nif((k-a[i])>=0) c[i]=(float) k-a[i];\r\nelse{ printf(\"-1\");return 0;}}\r\nfor(i=0;i<n;i++)\r\nprintf(\"%.6f\\n\",c[i]);\r\nreturn 0;\r\n}","865":"#include<stdio.h>\n#include<conio.h>\nint main()\n{\n    int a[5][5],sum,i,j,n;\n    while(scanf(\"%d\",&n)==1)\n    {\n\n     sum=0;\n    for(i=0;i<n;i++)\n      for(j=0;j<n;j++)\n        scanf(\"%d\",&a[i][j]);\n    for(i=0;i<n;i++)\n      for(j=0;j<n;j++)\n        if(i==j||i+j==n-1||i==(n-1)\/2||j==(n-1)\/2)\n          sum+=a[i][j];\n          printf(\"%d\",sum);\n          printf(\"\\n\");\n\n    }\n    return 0;\n}","867":"#include <stdio.h>\r\n\r\n\r\nint main(){\r\n\t\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tint numbers[n];\r\n\r\n\tint firstPart=0;\r\n\tint secondPart=0;\r\n\tint total=0;\r\n\r\n\tint i,k;\r\n\tfor(i=0;i<n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&numbers[i]);\r\n\t\tsecondPart+=numbers[i];\r\n\t}\r\n\r\n\tfor(i=0;i<n-1;i++)\r\n\t{\r\n\t\tfirstPart+=numbers[i];\r\n\t\tsecondPart-=numbers[i];\r\n\t\tif(firstPart == secondPart)\r\n\t\t{\r\n\t\t\ttotal++;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tprintf(\"%d\\n\",total);\r\n\treturn 0;\r\n}","871":"#include<stdio.h>\n\ndouble dist(double x1,double y1,double x2,double y2)\n{\n    double ans=(x1-x2)*(x1-x2) +(y1-y2)*(y1-y2);\n    return ans;\n}\nint right(double x1,double y1,double x2,double y2,double x3,double y3)\n{\n\/\/    double max;\n    double a=dist(x1,y1,x2,y2);\n    double b=dist(x2,y2,x3,y3);\n    double c=dist(x3,y3,x1,y1);\n\/\/printf(\"%lf %lf %lf\",a)\n    if(a>b&&a>c){\n        if(a==b+c){return 1;}\n        else return 0;\n    }\n        int d;\n        if(b>a&&b>c){\n        if(b==a+c){return 1;}\n        else return 0;\n    }\n        if(c>b&&c>a){\n        if(c==b+a){return 1;}\n        else return 0;\n    }\n\n    return 0;\n}\n\n\nint main()\n{\n    double x1,y1,x2,y2,x3,y3;\n     scanf(\"%lf %lf %lf %lf %lf %lf\",&x1,&y1,&x2,&y2,&x3,&y3);\n    if(right(x1,y1,x2,y2,x3,y3)==1){printf(\"RIGHT\");}\n    else if(right(x1+1,y1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1+1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2+1,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2+1,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3+1,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3,y3+1)==1){printf(\"ALMOST\");}\n    else if(right(x1-1,y1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1-1,x2,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2-1,y2,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2-1,x3,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3-1,y3)==1){printf(\"ALMOST\");}\n    else if(right(x1,y1,x2,y2,x3,y3-1)==1){printf(\"ALMOST\");}\n    else printf(\"NEITHER\");\n\nreturn 0;\n \/\/   main();\n}","877":"\/\/\/\/ ASCII \n\/\/A-65 Z-90\n\/\/a-97 z-122\n\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n\tchar a[100009];\n\tint b[100009];\n\tscanf(\"%s\",a);\n\tint len=strlen(a);\n\tint i;\n\tb[0]=0;\n\tfor(i=0;i<len;i++)\n\t{\n\t\tif(a[i] > 96)\n\t\t{\n\t\t\tb[i+1]=b[i]+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[i+1]=b[i];\n\t\t}\n\t}\n\tint min=9999999;\n\tint l;\n\tint t;\n\tfor(i=0;i<=len;i++)\n\t{\n\t\tl=len-i;\n\t\tt = b[i] + (l - (b[len] - b[i]));\n\t\tif(t < min)\n\t\t{\n\t\t\tmin=t;\n\t\t}\n\t}\n\nprintf(\"%d\\n\",min);\n\nreturn 0;\n}","879":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n, m, i, j, count = 0;\r\n    char desenho[100][100];\r\n    int crimes[3][2];\r\n\r\n    scanf(\"%d %d\", &n, &m);\r\n\r\n    for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%s\", &desenho[i]);\r\n        }\r\n\r\n    for(i = 0; i < n; i++)\r\n        for(j = 0; j < m; j++)\r\n        {\r\n            if(desenho[i][j] == '*')\r\n                {\r\n                    crimes[count][0] = i;\r\n                    crimes[count][1] = j;\r\n                    count++;\r\n                }\r\n        }\r\n\r\n    if(crimes[0][1] == crimes[1][1] && crimes[0][0] == crimes[2][0])\r\n        printf(\"%d %d\\n\", crimes[1][0]+1, crimes[2][1]+1);\r\n    if(crimes[0][1] == crimes[2][1] && crimes[0][0] == crimes[1][0])\r\n        printf(\"%d %d\\n\", crimes[2][0]+1, crimes[1][1]+1);\r\n    if(crimes[1][1] == crimes[0][1] && crimes[1][0] == crimes[2][0])\r\n        printf(\"%d %d\\n\", crimes[0][0]+1, crimes[2][1]+1);\r\n    if(crimes[1][1] == crimes[2][1] && crimes[1][0] == crimes[0][0])\r\n        printf(\"%d %d\\n\", crimes[2][0]+1, crimes[0][1]+1);\r\n    if(crimes[2][1] == crimes[0][1] && crimes[2][0] == crimes[1][0])\r\n        printf(\"%d %d\\n\", crimes[0][0]+1, crimes[1][1]+1);\r\n    if(crimes[2][1] == crimes[1][1] && crimes[2][0] == crimes[0][0])\r\n        printf(\"%d %d\\n\", crimes[1][0]+1, crimes[0][1]+1);\r\n\r\n    return 0;\r\n}","908":"#include<stdio.h>\n  int main() {\n  int n, d, a[2000], s = 0, i;\n  scanf(\"%d %d\", &d, &n);\n  for(i = 0 ; i < n ; i++) {\n      scanf(\"%d\", a + i);\n      if(i < n-1) \n          s = s + d - a[i];\n  }\n  printf(\"%d\\n\", s);    \n  return 0;  \n  }","910":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int i,j,k,l,m,x,p=0,q,l1,l2,h=0;\r\n    char arr[2][1000000],t;\r\n    for(i=0;i<2;i++)\r\n    scanf(\"%s\",arr[i]);\r\n    l1=strlen(arr[0]);\r\n    l2=strlen(arr[1]);\r\n    if(l1!=l2)\r\n    printf(\"NO\");\r\n    else\r\n    {\r\n        i=0;\r\n        while(i<l1)\r\n        {\r\n            if(arr[0][i]!=arr[1][i])\r\n            {\r\n                j=i+1;\r\n                while(arr[0][j]!='\\0')\r\n                {\r\n                    x=0;\r\n                    if(arr[1][i]==arr[0][j]&&arr[0][j]!=arr[1][j])\r\n                    {\r\n                        t=arr[0][j];\r\n                        arr[0][j]=arr[0][i];\r\n                        arr[0][i]=t;\r\n                        x=1;\r\n                    }\r\n                    if(x==1)\r\n                    break;\r\n                    j++;\r\n                }\r\n            }\r\n                if(x==1)\r\n                    break;\r\n        i++;\r\n        }\r\n            k=0;\r\n    while(k<l1)\r\n    {\r\n        if(arr[0][k]!=arr[1][k])\r\n        p=1;\r\n        k++;\r\n    }\r\n    if(p==1)\r\n    printf(\"NO\");\r\n    else\r\n    printf(\"YES\");\r\n    }\r\n\r\n}","914":"#include <stdio.h>\r\n#include <memory.h>\r\n\r\nint max(int a,int b){\r\n\treturn a>b ? a:b;\r\n}\r\n\r\n\r\nint main(){\r\n\tint n,a[3];\r\n\tscanf(\"%d\",&n);\r\n\r\n\tfor (int i = 0; i < 3; ++i)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t}\r\n\r\n\tint dp[10000];\r\n\r\n\tmemset(dp,-1,sizeof(dp));\r\n\tdp[0]=0;\r\n\tfor (int i = 0; i < n+1; ++i)\r\n\t{\r\n\t\tfor (int j = 0; j < 3; ++j)\r\n\t\t{\r\n\t\t\tif(i>=a[j] && dp[i-a[j]]>-1){\r\n\t\t\t\tdp[i]=max(dp[i-a[j]]+1,dp[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\/\/printf(\"%d\\n\", dp[i]);\r\n\r\n\t}\r\n\r\n\r\n\tprintf(\"%d\\n\", dp[n]);\r\n\r\n\treturn 0;\r\n}","916":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\/\/#include <math.h>\r\nint main()\r\n{\r\n  int n,m,min,max;\r\n  scanf(\"%d%d\",&n,&m);\r\n  if(n==0 && m!=0)\r\n    printf(\"Impossible\");\r\n    else if(m==0)\r\n        printf(\"%d %d\",n,n);\r\n  else\r\n  {\r\n      if(m<=n)\r\n        {\r\n            min=n;\r\n            max=n-1+m;\r\n        }\r\n        else\r\n        {\r\n            min=m;\r\n            max=n-1+m;\r\n        }\r\n        printf(\"%d %d\",min,max);\r\n  }\r\n\r\n    return 0;\r\n}","918":"#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define MAXN 100030\r\n\r\ntypedef struct eugin_ {\r\n  int size,dep,fa,top,w;\r\n  int mainson;\r\n  int son;\r\n}eugin;\r\n\r\ntypedef struct cyr_ {\r\n  int s,id;\r\n}cyr;\r\n\r\ntypedef struct edge_ {\r\n  int y,next,id;\r\n}edge;\r\n\r\ncyr c[MAXN];\r\nint n,totw;\r\nint ans[MAXN];\r\nedge e[MAXN<<1];\r\neugin a[MAXN];\r\n\r\nvoid dfs1(int x,int father,int d) {\r\n    int k,mx;\r\n    a[x].fa=father;\r\n    a[x].dep=d;\r\n    a[x].size=1;\r\n    a[x].mainson=-1;\r\n    mx=0;\r\n    k=a[x].son;\r\n    while (k!=-1) {\r\n        if (e[k].y!=father) {\r\n            a[e[k].y].w=e[k].id;\r\n            dfs1(e[k].y,x,d+1);\r\n            a[x].size+=a[e[k].y].size;\r\n            if (a[e[k].y].size>mx){\r\n                mx=a[e[k].y].size;\r\n                a[x].mainson=e[k].y;\r\n            }\r\n        }\r\n        k=e[k].next;\r\n    }\r\n}\r\n\r\nvoid dfs2(int x,int father) {\r\n    int k;\r\n    k=a[x].mainson;\r\n    if (k!=-1) {\r\n        totw++;\r\n        c[totw].id=a[k].w;\r\n        a[k].w=totw;\r\n        a[k].top=a[x].top;\r\n        dfs2(k,x);\r\n    }\r\n    k=a[x].son;\r\n    while (k!=-1){\r\n        if (e[k].y!=father && e[k].y!=a[x].mainson) {\r\n            totw++;\r\n            c[totw].id=a[e[k].y].w;\r\n            a[e[k].y].w=totw;\r\n            a[e[k].y].top=e[k].y;\r\n            dfs2(e[k].y,x);\r\n        }\r\n        k=e[k].next;\r\n    }\r\n}\r\n\r\nvoid init() {\r\n    int root;\r\n    memset(c,0,sizeof(int)*(n+10));\r\n    root=1+n>>1;\r\n    dfs1(root,0,1);\r\n    totw=0;\r\n    a[root].w=0;\r\n    a[root].top=root;\r\n    dfs2(root,0);\r\n}\r\n\r\nvoid sub(int x,int y) {\r\n    int x1,y1;\r\n    x1=a[x].top;\r\n    y1=a[y].top;\r\n    while (x1!=y1) {\r\n        if (a[x1].dep>a[y1].dep) {\r\n            x^=y;\r\n            y^=x;\r\n            x^=y;\r\n            x1=a[x].top;\r\n            y1=a[y].top;\r\n        }\r\n        c[a[y1].w].s++;\r\n        c[a[y].w+1].s--;\r\n        y=a[y1].fa;\r\n        y1=a[y].top;\r\n    }\r\n    if (x==y) return;\r\n    if (a[x].dep>a[y].dep) {\r\n        x^=y;\r\n        y^=x;\r\n        x^=y;\r\n    }\r\n    c[a[x].w+1].s++;\r\n    c[a[y].w+1].s--;\r\n}\r\n\r\nvoid work() {\r\n    int q,x,y,i;\r\n    scanf(\"%d\",&q);\r\n    while (q--){\r\n        scanf(\"%d%d\",&x,&y);\r\n        sub(x,y);\r\n    }\r\n    c[0].s=0;\r\n    for (i=1;i<n;i++){\r\n        c[i].s+=c[i-1].s;\r\n        ans[c[i].id]=c[i].s;\r\n    }\r\n    for (i=1;i<n;i++) {\r\n        printf(\"%d \",ans[i]);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int i,x,y,up;\r\n    scanf(\"%d\",&n);\r\n    for (i=1;i<=n;i++) {\r\n        a[i].son=-1;\r\n        up^=up;\r\n    }\r\n    for (i=1;i<n;i++) {\r\n        scanf(\"%d%d\",&x,&y);\r\n        up++;\r\n        e[up].id=i;\r\n        e[up].y=y;\r\n        e[up].next=a[x].son;\r\n        a[x].son=up;\r\n        up++;\r\n        e[up].id=i;\r\n        e[up].y=x;\r\n        e[up].next=a[y].son;\r\n        a[y].son=up;\r\n    }\r\n    init();\r\n    work();\r\n    return 0;\r\n}","923":"#include<stdio.h>\r\n    #include<string.h>\r\n    int dp[26][26],n,ans;\r\n    char s[15];\r\n    int main()\r\n    {\r\n           int i,len,x,y;\r\n           memset(dp,0,sizeof(dp));\r\n           scanf(\"%d\",&n);\r\n           while (n--)\r\n           {\r\n                  scanf(\"%s\",s);\r\n                  len=strlen(s);\r\n                  x=s[0]-'a'; y=s[len-1]-'a';\r\n                  for (i=0;i<26;i++)\r\n                     if (dp[i][x] && dp[i][y]<dp[i][x]+len)\r\n                        dp[i][y]=dp[i][x]+len;\r\n                  if (len>dp[x][y]) dp[x][y]=len;\r\n           }\r\n           ans=0;\r\n           for (i=0;i<26;i++)\r\n              if (dp[i][i]>ans) ans=dp[i][i];\r\n           printf(\"%d\\n\",ans);\r\n           return 0;\r\n    }","932":"# include <stdio.h>\r\n# include <conio.h>\r\n\r\nint main()\r\n{\r\n    int n,k,num1,num2,count;\r\n    scanf(\"%d%d\", &n, &k);\r\n    \r\n    num1 = n*2;\r\n    num2 = k - num1;\r\n    count = n - num2;\r\n    if(count <= 0){\r\n             count = 0;\r\n             }\r\n    \r\n    printf(\"%d\", count);\r\n    return 0;\r\n}","938":"#include<stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,x=0;\r\n    scanf(\"%d %d %d\",&a,&b,&c);\r\n    while(1)\r\n    {\r\n     if(b*(x+c)>=a*c)\r\n     {\r\n         printf(\"%d\",x);\r\n         return 0;\r\n     }\r\n     x++;\r\n    }\r\n}","941":"#include <math.h>\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n    int n, m, i;\r\n    scanf(\"%d%d\", &n, &m);\r\n    double mid = (m+1)\/2.0;\r\n    int even = (m%2 == 0);\r\n    int dist = 0;\r\n    int left = 1;\r\n    for(i=0; i<n; i++)\r\n    {\r\n        if(left && dist == floor(mid))\r\n        {\r\n            dist = 0;\r\n            left = 1;\r\n        }\r\n        if(left)\r\n        {\r\n            printf(\"%.0f\\n\", floor(mid)-dist);\r\n            left = 0;\r\n            if(!even && dist == 0)\r\n            {\r\n                dist++;\r\n                left = 1;\r\n            }\r\n            continue;\r\n\r\n        }\r\n        printf(\"%.0f\\n\", ceil(mid)+dist++);\r\n        left = 1;\r\n    }\r\n    return 0;\r\n}","964":"#include<string.h>\n\nchar s[100010],t[100010],p;\nint main(){\nint i,j,k,n;\ngets(s);\nn=strlen(s);\np=s[n-1];\nj=0;\n    for(i=n-2;i>=0;i--){\n    if(p<=s[i]){\n        t[j++]=s[i];\n        p=s[i];\n}\n    }\n    t[j]=s[n-1];\n        for(i=j-1;i>=0;i--)printf(\"%c\",t[i]);\n        printf(\"%c\\n\",t[j]);\n\n\n        return 0;\n\n}","967":"#include<stdio.h>\r\nint main()\r\n{\r\n    long long int k,b,n,t,x=1,i;\r\n    scanf(\"%lld%lld%lld%lld\",&k,&b,&n,&t);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        x=k*x+b;\r\n        if(x>t)\r\n            break ;\r\n    }\r\n    printf(\"%lld\\n\",n-i);\r\n    return 0;\r\n}","976":"#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tprintf(\"0 0 %d\",n);\n\treturn 0;\n}","1030":"#include <stdio.h>\r\nint main()\r\n{\r\n    double sum=0;\r\n    int x,n,i;\r\n    scanf(\"%d\",&n);\r\n\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&x);\r\n        sum=sum+x;\r\n    }\r\n    printf(\"%0.9lf\",sum\/(n*1.0));\r\n    return 0;\r\n}","1034":"#include<stdio.h>\n#define max(a,b) a>b?a:b\nint main()  \n{  \n  int n,i;  \n    scanf(\"%d\",&n);  \n    for(i=1;(i*i+1)\/2<n;i+=2);  \n    printf(\"%d\\n\",n==3?5:i);  \n    return 0;  \n}","1036":"#include <stdio.h>\n#include <string.h>\n#include <math.h>\n__int64 a[1010][1010];\n__int64 mpx[1010],mpy[1010];\nint main() {\n\tint n,m,i,j;\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF) {\n\t\tmemset(a,0,sizeof(a));\n\t\tfor(i=0;i<n;i++) {\n\t\t\tfor(j=0;j<m;j++)  {\n\t\t\t\tscanf(\"%I64d\",&a[i][j]);\n\t\t\t\ta[i][m]+=a[i][j];\n\t\t\t\ta[n][j]+=a[i][j];\n\t\t\t}\n\t\t}\t\t\n\t\t__int64 sum;\n\t\tint k,x=0,y=0;\n\t\tfor(i=0;i<=n;i++) {\n\t\t\tsum=0;\n\t\t\tk=0;\n\t\t\tfor(j=0;j<=n;j++) {\n\t\t\t\tif(i!=j)\n\t\t\t\t\tsum+=(__int64)( (abs(i-j)-0.5)*16*(abs(i-j)-0.5)*a[k++][m] );\n\t\t\t}\n\t\t\tmpx[i]=sum;\n\t\t\tif(mpx[i]<mpx[x])\n\t\t\t\tx=i;\n\t\t}\n\t\tfor(i=0;i<=m;i++) {\n\t\t\tsum=0;\n\t\t\tk=0;\n\t\t\tfor(j=0;j<=m;j++) {\n\t\t\t\tif(i!=j)\n\t\t\t\t\tsum+=(__int64)( (abs(i-j)-0.5)*16*(abs(i-j)-0.5)*a[n][k++] );\n\t\t\t}\n\t\t\tmpy[i]=sum;\n\t\t\tif(mpy[i]<mpy[y])\n\t\t\t\ty=i;\n\t\t}\t\t\n\/\/\t\t__int64 max=9223372036854775807;\n\/\/\t\tint x,y;\n\/\/\/\t\tfor(i=0;i<=n;i++) {\n\/\/\/\t\t\tfor(j=0;j<=m;j++) {\n\/\/\/\t\t\t\tif(mpx[i]+mpy[j] < max) {\n\/\/\t\t\t\t\tmax=mpx[i]+mpy[j];\n\/\/\t\t\t\t\tx=i;\n\/\/\t\t\t\t\ty=j;\n\/\/\t\t\t\t}\n\/\/\t\t\t}\n\/\/\t\t}\n\t\tprintf(\"%I64d\\n%d %d\\n\",mpx[x]+mpy[y],x,y);\n\t}\n\treturn 0;\n}","1039":"#include <stdio.h>\r\n\r\n#define LEN 100008\r\n\r\nint a[LEN];\r\nlong long b[LEN], c[LEN];\r\n\r\nvoid find ( int * a, int n, long long * r ) {\r\n        int i;\r\n        long long r1, r2;\r\n        for ( i = 1, r1 = r2 = 0; i < n; ++i ) {\r\n                r1 = a[i] > 1 ? ( r1 + ( a[i] & 0xFFFFFFFE ) ) : 0;\r\n                r2 = r2 + ( ( a[i] - 1 ) | 0x01 );\r\n                if ( r2 < r1 ) r2 = r1;\r\n                r[i] = r2;\r\n        }\r\n}\r\n\r\nint main ( ) {\r\n        int i, j, k, n;\r\n        long long m;\r\n\r\n        for ( scanf ( \"%d\", &n ), i = 1; i < n; scanf ( \"%d\", &a[i++] ) );\r\n        find ( a, n, b );\r\n        for ( i = 1; i < ( j = n - i ); k = a[i], a[i] = a[j], a[j] = k, ++i );\r\n        find ( a, n, c );\r\n        for ( i = 1, m = 0; i < n; ++i ) {\r\n                j = n - 1 - i;\r\n                if ( m < b[i] + c[j] ) m = b[i] + c[j];\r\n        }\r\n        printf ( \"%I64d\\n\", m );\r\n\r\n        return 0;\r\n}","1044":"#include <stdio.h>\r\nint  ara1[100006][2],ara2[100006];\r\nint compare(const void *a,const void *b)\r\n{\r\n    return (*(int*)a - *(int*)b);\r\n}\r\nint main()\r\n{\r\n    unsigned int n,d,a,b,i,j=0,k,x,y,sum=0,ans=0;\r\n    scanf(\"%d %d\",&n,&d);\r\n    scanf(\"%d %d\",&a,&b);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        scanf(\"%d %d\",&x,&y);\r\n        ara1[i][0]=x*a+y*b;\r\n        ara1[i][1]=i+1;\r\n    }\r\n    qsort(ara1,n,sizeof(unsigned int)*2,compare);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        sum+=ara1[i][0];\r\n        if(sum> d)\r\n            break;\r\n        ara2[j]=ara1[i][1];\r\n        j++;\r\n        ans++;\r\n    }\r\n    printf(\"%d\\n\",ans);\r\n    for(i=0; i<j; i++)\r\n    {\r\n        printf(\"%d \",ara2[i]);\r\n    }\r\n    return 0;\r\n}","1046":"#include <stdio.h>\nint main(){\n    int x, t, a, b, da, db, i, j, m, n, flag;\n    while(scanf(\"%d %d %d %d %d %d\", &x, &t, &a, &b, &da, &db) == 6){\n        if(x == 0){\n            printf(\"YES\\n\");\n            continue;\n        }\n        flag = 0;\n        for(i = 0; i < t; i++){\n            if(flag == 1)\n                break;\n            m = a - i * da;\n            for(j = 0; j < t; j++){\n                n = b - j * db;\n                if((m + n == x) || m == x || n == x){\n                    printf(\"YES\\n\");\n                    flag = 1;\n                    break;\n                }\n            }\n        }\n        if(flag == 0)\n            printf(\"NO\\n\");\n    }\n    return 0;\n}","1048":"#include<stdio.h>\r\nint main()\r\n{\r\n     int a[100005];\r\n     int n,i,count=1,back=0,min,m;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n\r\n    }\r\n    min=a[0];\r\n    for(i=1;i<n;i++)\r\n{\r\n    if(a[i]<min)\r\n    {\r\n        min=a[i];\r\n        count=i+1;\r\n    }\r\n    else if(a[i]==min)\r\n    {\r\n        back++;\r\n        m=a[i];\r\n    }\r\n}\r\n     if(back==0)\r\n     {\r\n         printf(\"%d\",count);\r\n     }\r\n     else if(back>0 && min==m)\r\n     {\r\n         printf(\"Still Rozdil\");\r\n     }\r\n     else if(back>0 && min!=m)\r\n     {\r\n         printf(\"%d\",count);\r\n     }\r\n     return 0;\r\n}","1050":"#include<stdio.h>\n\nint main ()\n{\n\tlong long sum;\n\tint n, x, max, min;\n\tint pre, now, flag;\n\tint i;\n\twhile(scanf(\"%d\", &n)!=EOF){\n\t\tscanf(\"%d\", &max);\n\t\tif(n==1){\n\t\t\tprintf(\"0\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tsum=min=pre=0;\n\t\tflag=1;\n\t\tfor(i=1; i<n-1; i++){\n\t\t\tscanf(\"%d\", &x);\n\t\t\tif(x>max){\n\t\t\t\tmax=x;\n\t\t\t\tnow=0;\n\t\t\t}else{\n\t\t\t\tnow=max-x;\n\t\t\t}\n\t\t\t\n\t\t\tif(now>pre){\n\t\t\t\tif(flag==0)\n\t\t\t\t\tmin=pre;\n\t\t\t\tflag=1;\n\t\t\t}else if(now<pre){\n\t\t\t\tif(flag==1)\n\t\t\t\t\tsum+=pre-min;\n\t\t\t\tflag=0;\n\t\t\t}\n\t\t\t\n\t\t\tpre=now;\n\t\t}\n\t\t\n\t\tscanf(\"%d\", &x);\n\t\tif(x>max) now=0;\n\t\telse now=max-x;\n\t\tif(flag==1){\n\t\t\tif(now<pre)\tsum+=(pre-min);\n\t\t\telse sum+=(now-min);\n\t\t}else if(flag==0){\n\t\t\tif(now>pre) sum+=(now-pre);\n\t\t}\n\t\t\n\t\tprintf(\"%I64d\\n\", sum);\n\t}\n}","1055":"#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n\r\nchar a[1000];\r\nint i;\r\n\r\nint main(){\r\n\r\n    scanf(\"%s\",a);\r\n    for(i=0;i<strlen(a);i++){\r\n        if(a[i]=='W'&&a[i+1]=='U'&&a[i+2]=='B'&&i>0){\r\n            printf(\" \");\r\n         }\r\n        if(a[i]=='W'&&a[i+1]=='U'&&a[i+2]=='B'){\r\n            i+=2;\r\n        }else{\r\n            printf(\"%c\",a[i]);\r\n        }\r\n    }\r\n}","1061":"#include <stdio.h>\r\nmain()\r\n{static long long int a,b,c,x,y,z;\r\nscanf(\"%I64d%I64d%I64d\",&a,&b,&c);\r\nx=(a>b&&a>c)?a:b>c?b:c;\r\ny=(a<b&&a<c)?a:b<c?b:c;\r\nz=a+b+c-x-y;\r\nif((z-y)%2)\r\n  printf(\"%I64d\\n\",x);\r\n    else\r\n      printf(\"%I64d\\n\",z);\r\nreturn 0;}","1066":"#include <stdio.h>\r\n #include <string.h>\r\n int p[301][301],o[621][301][301],i,j,k;\r\n int getmax(int a,int b,int c,int d)\r\n {\r\n     int max;\r\n     max = a;\r\n     if(max < b)\r\n     max = b;\r\n     if(max < c)\r\n     max = c;\r\n     if(max < d)\r\n     max = d;\r\n     return max;\r\n }\r\n int main()\r\n {\r\n     int n,max;\r\n     scanf(\"%d\",&n);\r\n     for(i = 1;i <= n;i ++)\r\n     {\r\n         for(j = 1;j <= n;j ++)\r\n         scanf(\"%d\",&p[i][j]);\r\n     }\r\n     memset(o,0xf3,sizeof(o));\r\n     o[0][1][1] = p[1][1];\r\n     for(k = 1;k <= n+n-2;k ++)\r\n     {\r\n         for(i = 1;i <= k+1&&i <= n;i ++)\r\n         {\r\n             for(j = 1;j <= k+1&&j <= n;j ++)\r\n             {\r\n                 max = getmax(o[k-1][i][j],o[k-1][i][j-1],o[k-1][i-1][j],o[k-1][i-1][j-1]);\r\n                 if(i == j)\r\n                 o[k][i][j] = max + p[i][k+2-i];\r\n                 else\r\n                 o[k][i][j] = max + p[i][k+2-i] + p[j][k+2-j];\r\n             }\r\n         }\r\n     }\r\n     printf(\"%d\\n\",o[n+n-2][n][n]);\r\n     return 0;\r\n }","1067":"#include <stdio.h>\r\n\r\n#define MAX(a, b) ((a) > (b) ? (a) : (b))\r\n\r\ntypedef long long ll;\r\n\r\nint a[10];\r\nll dp[101][10];\r\nll c[101][101];\r\n\r\nconst int mod = 1000000007;\r\n\r\nvoid init()\r\n{\r\n    int i, j;\r\n    for (i = 0; i <= 100; i ++)\r\n    {\r\n        c[i][0] = c[i][i] = 1;\r\n    }\r\n    for (i = 1; i <= 100; i ++)\r\n    {\r\n        for (j = 1; j < i; j ++)\r\n        {\r\n            c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve(int n)\r\n{\r\n    int i, j, k, t;\r\n    ll ans;\r\n    ans = 0;\r\n    for (i = 1; i <= 9; i ++)\r\n    {\r\n        {\r\n            a[i] --;\r\n            for (j = 0; j < n; j ++)\r\n            {\r\n                if (j >= a[0])\r\n                {\r\n                    dp[j][0] = 1;\r\n                }\r\n                else\r\n                {\r\n                    dp[j][0] = 0;\r\n                }\r\n                for (k = 1; k <= 9; k ++)\r\n                {\r\n                    dp[j][k] = 0;\r\n                    for (t = MAX(a[k], 0); t <= j; t ++)\r\n                    {\r\n                        dp[j][k] = (dp[j][k] + ((dp[j - t][k - 1] * c[j][t]) % mod)) % mod;\r\n                    }\r\n                }\r\n                ans = (ans + dp[j][9]) % mod;\r\n            }\r\n            a[i] ++;\r\n        }\r\n    }\r\n    printf(\"%d\\n\", (int)ans);\r\n}\r\n\r\nint main()\r\n{\r\n    int n, i;\r\n    init();\r\n    while (scanf(\"%d\", &n) == 1)\r\n    {\r\n        for (i = 0; i < 10; i ++)\r\n        {\r\n            scanf(\"%d\", &a[i]);\r\n        }\r\n        solve(n);\r\n    }\r\n    return 0;\r\n}","1070":"#include<stdio.h>\r\nint main()\r\n{\r\n    int a=0,b,n,m,k=0;\r\n    scanf(\"%d %d\",&n,&m);\r\n    for(b=n;b>=0;b--){\r\n        a=m-(b*b);\r\n        if(a>=0 && (a*a+b)==n)\r\n            k++;\r\n    } printf(\"%d\",k);\r\n    return 0;\r\n}","1081":"#include<stdio.h>\r\nint num[10005]={0};\r\nint main()\r\n{\r\n    int n,m,a[55],b[55],i,j,max=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);\r\n    scanf(\"%d\",&m);\r\n    for(j=0;j<m;j++)\r\n    {\r\n        scanf(\"%d\",&b[j]);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(b[j]%a[i]==0)\r\n            {\r\n                num[b[j]\/a[i]]++;\r\n                if(max<b[j]\/a[i])max=b[j]\/a[i];\r\n            }\r\n        }\r\n\r\n    }\r\n    printf(\"%d\\n\",num[max]);\r\n    return 0;\r\n}","1087":"#include <stdio.h>\r\n#include <stdlib.h>\r\nstruct graph\r\n{\r\n    int to;\r\n    int nextid;\r\n};\r\nint bfs(int a,int i, int k, struct graph LE[],int L[], int visited[] )\r\n{\r\n    int j;\r\n    for(j=L[i]; j!=-1; j=LE[j].nextid)\r\n    {\r\n        if(visited[LE[j].to]==0)\r\n        {\r\n            k++;\r\n            visited[LE[j].to]=k;\r\n            return bfs(a,LE[j].to,k,LE,L,visited);\r\n        }\r\n        else {\r\n            if (LE[j].to==a && visited[i]%2==1 ) {;return 1;}\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    int n,m,i,u,v;\r\n    scanf(\"%d%d\",&n,&m);\r\n    struct graph LE[2*n];\r\n    int L[n+1];\r\n    for(i=1; i<=n; i++) L[i]=-1;\r\n    for (i=0; i<m; i++)\r\n    {\r\n        scanf(\"%d%d\",&u,&v);\r\n        LE[2*i].nextid=L[u];\r\n        L[u]=2*i;\r\n        LE[2*i].to=v;\r\n        LE[2*i+1].nextid=L[v];\r\n        L[v]=2*i+1;\r\n        LE[2*i+1].to=u;\r\n    }\r\n    int k,visited[n+1],b=0;\r\n    for (i=0; i<=n; i++) visited[i]=0;\r\n    for (i=1; i<=n; i++)\r\n    {\r\n        k=1;\r\n        if (visited[i]==0) {visited[i]=k; b+=bfs(i,i,k,LE,L,visited);}\r\n    }\r\n    if((n-b)%2==1) b++;\r\n    printf(\"%d\",b);\r\n    return 0;\r\n}","1088":"#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint soma (int a, int b, int c){\n\treturn 2*(a+b+c) - 6;\n}\n\nint main () {\n\n\tint a, b, c;\n\n\tscanf(\"%d %d %d\", &a, &b, &c);\n\n\tint total = 0;\n\twhile (1){\n\t\ttotal += soma(a, b, c);\n\t\ta--;\n\t\tb--;\n\t\tc--;\n\t\tif (a == 1) { total += b*c; break; }\n\t\tif (b == 1) { total += a*c; break; }\n\t\tif (c == 1)  { total += b*a; break; }\n\t}\n\t\n\tprintf(\"%d\\n\", total);\n\n\treturn 0;\n}","1099":"#include<stdio.h>\n#include<stdlib.h>\n#define N 1100\n\n\nint cmp1(const void*_a,const void*_b)\n{\n    return *(int*)_a-*(int*)_b;\n}\n\nint cmp2(const void*_a,const void*_b)\n{\n    return *(int*)_b-*(int*)_a;\n}\n\nint a[N],b[N];\nint main(void)\n{\n    int n,m,i,sumx=0,sumi=0;\n    scanf(\"%d%d\",&n,&m);\n    int num1=m,num2=m;\n    for(i=1;i<=m;i++)\n        scanf(\"%d\",a+i),b[i]=a[i];\n    for(i=1;i<=n;i++)\n    {\n        qsort(a+1,num1,sizeof(int),cmp1);\n        qsort(b+1,num2,sizeof(int),cmp2);\n        sumx+=a[num1];\n        sumi+=b[num2];\n        a[num1]--;\n        b[num2]--;\n        if(a[num1]==0)\n            num1--;\n        if(b[num2]==0)\n            num2--;\n    }\n    printf(\"%d %d\\n\",sumx,sumi);\n    return 0;\n}","1102":"#include<stdio.h>  \n#include<string.h>    \nint main()  \n{  \n\tint dp[500400][30];  \n\tint pre[500400][30];  \n\tchar a[500400];  \n\tchar ans[500400]; \n    int n,k,i,j,kk;  \n    while(~scanf(\"%d%d\",&n,&k))  \n    {  \n        scanf(\"%s\",a+1);  \n        memset(dp,0,sizeof(dp));  \n        memset(pre,0,sizeof(pre));  \n        for(i=1;i<=n;i++)  \n        {  \n            for(j=0;j<k;j++)  \n            {  \n                dp[i][j]=0x3f3f3f3f;  \n            }  \n        }  \n        for(i=1;i<=n;i++)  \n        {  \n            for(j=0;j<k;j++)  \n            {  \n                for(kk=0;kk<k;kk++)  \n                {  \n                    if(j==kk)continue;  \n                    if(j==a[i]-'A')  \n                    {  \n                        if(dp[i][j]>dp[i-1][kk])  \n                        {  \n                            dp[i][j]=dp[i-1][kk];  \n                            pre[i][j]=kk;  \n                        }  \n                    }  \n                    else  \n                    {  \n                        if(dp[i][j]>dp[i-1][kk]+1)  \n                        {  \n                            dp[i][j]=dp[i-1][kk]+1;  \n                            pre[i][j]=kk;  \n                        }  \n                    }  \n                }  \n            }  \n        }  \n        int minn=0x3f3f3f3f;  \n        int pos;  \n        for(i=0;i<k;i++)  \n        {  \n            if(dp[n][i]<minn)  \n            {  \n                minn=dp[n][i];  \n                pos=i;  \n            }  \n        }  \n        printf(\"%d\\n\",minn);  \n        if(minn==0)  \n        {  \n            printf(\"%s\\n\",a+1);  \n            continue;  \n        }  \n        int tt=n;  \n        ans[tt]=pos+'A';  \n        while(1)  \n        {  \n            ans[tt-1]=pre[tt][pos]+'A';  \n            pos=pre[tt][pos];  \n            tt--;  \n            if(tt==1)break;  \n        }  \n        for(i=1;i<=n;i++)  \n        {  \n            printf(\"%c\",ans[i]);  \n        }  \n        printf(\"\\n\");  \n    }  \n}","1104":"#include<stdio.h>\r\n#include<string.h>\r\nint arr[26],c;\r\nchar ans[1000007];\r\nint main ()\r\n{\r\n    int n,i,j;\r\n    char s[1000007];\r\n    scanf(\"%d\",&n);\r\n    getchar();\r\n    gets(s);\r\n    int len=strlen(s);\r\n    for(i=0; i<len; i++)\r\n        arr[s[i]-'a']++;\r\n    for(i=0; i<26; i++)\r\n    {\r\n        if(arr[i]%n!=0)\r\n        {\r\n            printf(\"-1\\n\");\r\n            return 0;\r\n        }\r\n        if(arr[i]>0)\r\n        {\r\n            for(j=0; j<arr[i]\/n; j++)\r\n                ans[c++]=i+'a';\r\n        }\r\n    }\r\n    for(i=0; i<n; i++)\r\n        printf(\"%s\",ans);\r\n    printf(\"\\n\");\r\n    return 0;\r\n}","1106":"#include<stdio.h>\r\n#define T 100000\r\nint g[T], in_circ[T], v[T], is_in[T];\r\nint r[T][2], ans;\r\nint fun(int i);\r\nint main()\r\n{\r\n    int n, i;\r\n    scanf(\"%d\", &n);\r\n    for(i = 0; i < n; ++i){\r\n        scanf(\"%d\", &g[i]);\r\n        --g[i];\r\n        is_in[g[i]] = 1;\r\n    }\r\n    int c1 = 0;\r\n    for(i = 0; i < n; ++i){\r\n        if(!is_in[i]){\r\n            r[ans][0] = i + 1;\r\n            r[ans][1] = fun(i) + 1;\r\n            ++ans;\r\n            ++c1;\r\n        }\r\n    }\r\n    int c2 = 0;\r\n    for(i = 0; i < n; ++i){\r\n        if(!v[i]){\r\n            r[ans][0] = i + 1;\r\n            r[ans][1] = i + 1;\r\n            ++ans;\r\n            ++c2;\r\n            fun(i);\r\n        }\r\n    }\r\n    if(c2 == 1 && c1 == 0){\r\n        printf(\"0\");\r\n        return 0;\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    if(ans > 0){\r\n        for(i = 1; i < ans; ++i){\r\n            printf(\"%d %d\\n\", r[i - 1][1], r[i][0]);\r\n        }\r\n        printf(\"%d %d\", r[ans - 1][1], r[0][0]);\r\n    }\r\n    return 0;\r\n}\r\nint fun(int i)\r\n{\r\n    v[i] = 1;\r\n    int anss;\r\n    if(v[g[i]] == 1){\r\n        anss = in_circ[i] = g[i];\r\n    } else if(v[g[i]] == 0){\r\n        anss = in_circ[i] = fun(g[i]);\r\n    } else anss = in_circ[i] = in_circ[g[i]];\r\n    v[i] = 2;\r\n    return anss;\r\n    \r\n}","1122":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#define min(x,y) x<y? (x):(y)\r\n#define max(x,y) x>y? (x):(y)\r\n#define MAX 1010\r\n#define band 10100\r\n\r\nstruct punto{\r\n    int lp;\r\n    int rp;\r\n} a[MAX];\r\n\r\nvoid ordenar(struct punto *v,int f);\r\n\r\nint coor[MAX];\r\n\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n        int i;\r\n        int c1, c2;\r\n        for(i=1; i<=n; i++){\r\n            scanf(\"%d%d\", &c1, &c2);\r\n            a[i].lp=min(c1, c2);\r\n            a[i].rp=max(c1, c2);\r\n        }\r\n\r\n        ordenar(a,n);\r\n\r\n        int lm, rm;\r\n        lm=a[1].lp, rm=a[1].rp;\r\n        int clavos=1;\r\n        a[n+1].lp=band;\r\n        for(i=2; i<=n+1; i++){\r\n            if(a[i].lp > rm){\r\n                coor[clavos]=rm;\r\n                clavos++;\r\n                lm=a[i].lp;\r\n                rm=a[i].rp;\r\n            }\r\n            else {\r\n                if(a[i].lp > lm)\r\n                    lm=a[i].lp;\r\n                if(a[i].rp < rm)\r\n                    rm=a[i].rp;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", clavos-1);\r\n        for(i=1; i<=clavos-1; i++){\r\n            printf(\"%d \", coor[i]);\r\n        }\r\n}\r\n\r\nvoid ordenar(struct punto *v,int f){\r\n    int i,j;\r\n    struct punto aux;\r\n    for(i=1;i<=f-1;i++){\r\n        for(j=i+1;j<=f;j++){\r\n            if(v[i].lp!=v[j].lp){\r\n                if(v[i].lp>v[j].lp){\r\n                    aux=v[i];\r\n                    v[i]=v[j];\r\n                    v[j]=aux;\r\n                }\r\n            }\r\n            else{\r\n                if(v[i].rp>v[j].rp){\r\n                    aux=v[i];\r\n                    v[i]=v[j];\r\n                    v[j]=aux;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","1130":"#include <stdio.h>\r\n\r\n \r\nint main()\r\n{\r\n   int n;\r\n   scanf(\"%d\", &n);\r\n   int arr[n];\r\n   for (int i = 0; i < n; i++)\r\n      scanf(\"%d\", &arr[i]);\r\n   for (int i = 0; i < n; i ++)\r\n   {\r\n      for (int j = 0; j < n; j++)\r\n      {\r\n         if (arr[j] > arr[i])\r\n         {\r\n            int temp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = temp;\r\n         }\r\n      }\r\n   }\r\n   for (int i = 1; i < n; i++)\r\n   {\r\n      if (arr[i] != arr[i-1])\r\n      {\r\n         printf(\"%d\", arr[i]);\r\n         return 0;\r\n      }\r\n   }\r\n         printf(\"NO\");\r\n   \r\n}","1138":"#include<stdio.h>\r\nint main()\r\n{\r\n  int n;\r\n  scanf(\"%d\",&n);printf(\" %d\",n);int i;\r\n  for(i=0;i<n-1;i++) \r\n  {\r\n    printf(\" %d\",i+1);\r\n  }\r\n  printf(\"\\n\");\r\n  return 0;\r\n}","1143":"#include<stdio.h>\n#include<stdlib.h>\n\nint main()\n{\n\tint n, k;\n\twhile (~scanf(\"%d %d\", &n, &k))\n\t{\n\t\tint *list;\n\t\tlist = (int *)malloc((k + 1) * sizeof(int));\n\t\tint tmp0, sign, flag = 1;\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tscanf(\"%d\", &tmp0);\n\t\t\tif (i == (k - 1))\n\t\t\t\tsign = tmp0;\n\t\t\telse if (i >= k && sign != tmp0)\n\t\t\t\tflag = 0;\n\t\t\telse if (i < k - 1)\n\t\t\t\tlist[i] = tmp0;\n\t\t}\n\n\t\tif (flag)\n\t\t{\n\t\t\tint cnt = k - 1;\n\t\t\tfor (int i = k - 2; i >= 0; i--)\n\t\t\t{\n\t\t\t\tif (list[i] == tmp0)\n\t\t\t\t\tcnt--;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\", cnt);\n\n\t\t}\n\t\telse\n\t\t\tputs(\"-1\");\n\n\t}\n\treturn 0;\n}","1152":"#include <stdio.h>\r\n#include <math.h>\r\nint main ()\r\n{\r\n    int i,n,j,x,y,z;\r\n    scanf(\"%d %d %d\",&x,&y,&z);\r\n    n=sqrt(x*y\/z);\r\n    i=sqrt(x*z\/y);\r\n    j=sqrt(z*y\/x);\r\n    printf(\"%d\\n\",4*(n+i+j));\r\n    return 0;\r\n}","1160":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\ntypedef struct st1{\r\n    int top;\r\n    int fl;\r\n    int fr;\r\n    int ofl;\r\n    int ofr;\r\n    int bot;\r\n    struct st1 *next;\r\n} dice;\r\n\r\ndice *cr_dice(int fl, int fr){\r\n    dice *pointer;\r\n    pointer = (dice*)malloc(sizeof(dice));\r\n    pointer->fl = fl;\r\n    pointer->fr = fr;\r\n    pointer->ofl = 7 - fl;\r\n    pointer->ofr = 7 - fr;\r\n    pointer->next=NULL;\r\n    return pointer;\r\n}\r\n\r\nint check_dice(dice *top_dice){\r\n    if (!top_dice) return 1;\r\n    top_dice->bot = 7 - top_dice->top;\r\n    if (!top_dice->next) return 1;\r\n    if (top_dice->bot != top_dice->next->fl){\r\n        if (top_dice->bot != top_dice->next->fr){\r\n            if (top_dice->bot != top_dice->next->ofl){\r\n                if (top_dice->bot != top_dice->next->ofr){\r\n                    top_dice->next->top = 7 - top_dice->bot;\r\n                    return check_dice(top_dice->next);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nint main(){\r\n    int size_tower;\r\n    int counter;\r\n    int top, fl, fr;\r\n    scanf(\"%d\",&size_tower);\r\n    dice *top_dice,*pointer;\r\n    scanf(\"%d\",&top);\r\n    scanf(\"%d %d\",&fl, &fr);\r\n    top_dice=cr_dice(fl,fr);\r\n    top_dice->top = top;\r\n    pointer=top_dice;\r\n    for(counter=1;counter<size_tower;counter++){\r\n        scanf(\"%d %d\",&fl, &fr);\r\n        pointer->next=cr_dice(fl,fr);\r\n        pointer=pointer->next;\r\n    }\r\n    if (check_dice(top_dice)) printf(\"YES\");\r\n    else printf(\"NO\");\r\n    return 0;\r\n}","1162":"#include<stdio.h>  \n#include <string.h>     \nint main()  \n{  \n\tstatic int pos[100010]; \n    int n,tmp,m,i;  \n    long long a=0,b=0;  \n    memset(pos,0,sizeof(pos));  \n    scanf(\"%d\",&n);  \n    for(i=1;i<=n;i++)  \n    {  \n        scanf(\"%d\",&tmp);  \n        pos[tmp]=i;  \n    }  \n    scanf(\"%d\",&m);  \n    for(i=1;i<=m;i++)  \n    {  \n        scanf(\"%d\",&tmp);  \n  \n        if(pos[tmp])  \n        {  \n            a+=pos[tmp];  \n            b+=n-pos[tmp]+1;  \n        }  \n        else  \n        {  \n            a+=n;  \n            b+=n;  \n        }  \n  \n    }  \n    printf(\"%lld %lld\\n\",a,b);  \n    return 0;  \n}","1166":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long long int a, b, c, d;\r\n    scanf(\"%I64d %I64d %I64d %I64d\", &a, &b, &c, &d);\r\n    if(a==b && a==c && a==d){\r\n        printf(\"3\");\r\n    }\r\n    else if((a==b && b==c)||(a==b && b==d) ||(a==c && c==d) || (b==c && c==d)){\r\n        printf(\"2\");\r\n    }\r\n    else if((a==b && c==d) || (a==c && b==d) || (a==d && b==c)){\r\n        printf(\"2\");\r\n    }\r\n    else if(a==b || a==c || a==d || b==c || b==d || c==d){\r\n        printf(\"1\");\r\n    }\r\n    else {\r\n        printf(\"0\");\r\n    }\r\n    return 0;\r\n}","1176":"#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\nint main()\r\n{\r\nint n,i,j,k,max=0;char a[110];\r\n    \r\n    scanf(\"%s\",&a);n=strlen(a);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=i+1;j<n;j++)\r\n        {\r\n            for(k=0;(j+k)<n&&a[i+k]==a[j+k];k++);\r\n            if(k>max)max=k;\r\n        }       \r\n    }\r\n    printf(\"%d\",max);\r\nreturn 0;   \r\n}","1178":"#include <stdio.h>\r\n#include <math.h>\r\n\r\nint prime_chk(int n);\r\n\r\nint main(void)\r\n{\r\n    int T, last_dig;\r\n    long long num, num_sqrt;\r\n\r\n    scanf(\"%d\", &T);\r\n\r\n    while(T--){\r\n        scanf(\"%I64d\", &num);\r\n\r\n        if(num == 1){\r\n            printf(\"NO\\n\");\r\n        }\r\n        else if(num == 4 || num == 9){\r\n            printf(\"YES\\n\");\r\n        }\r\n        else{\r\n            last_dig = num % 10;\r\n            if(last_dig == 1 || last_dig == 5 || last_dig == 9){\r\n                num_sqrt = sqrt(num+0.0);\r\n                if((num_sqrt*num_sqrt) != num){\r\n                    printf(\"NO\\n\");\r\n                }\r\n                else{\r\n                    if(prime_chk(num_sqrt)){\r\n                        printf(\"YES\\n\");\r\n                    }\r\n                    else{\r\n                        printf(\"NO\\n\");\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                printf(\"NO\\n\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nint prime_chk(int n)\r\n{\r\n    int i;\r\n\r\n    if(n==2) return 1;\r\n    if(n%2 == 0) return 0;\r\n    for(i=3; i<=sqrt(n+0.0); i++){\r\n        if(n%i==0){\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}","1180":"#include <stdio.h>\r\nint main()\r\n{\r\n\tint n,i,a, c,b,prob=0;\r\n\tscanf(\"%d\",&n);\r\n\tfor(i=0; i<n; i++)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tif(a+b+c >= 2)\r\n\t\tprob++;\r\n\t}\r\n\tprintf(\"%d\\n\",prob);\r\nreturn 0;\r\n}","1195":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i=1,j,k,l;\r\n    scanf(\"%d\",&n);\r\n    if(n%2)\r\n    printf(\"-1\");\r\n    else if(n==2)\r\n    printf(\"2 1\");\r\n    else\r\n    {\r\n        while(i<=n)\r\n        {\r\n            j=i+1;\r\n            printf(\"%d %d \",j,i);\r\n            j=0;\r\n        i=i+2;\r\n        }\r\n    }\r\n}","1197":"#include<stdio.h>\n#include<math.h>\ntypedef long long int LL; \n  int sum(LL n) {\n  int sum = 0;\n  for( ; n > 0 ; n \/= 10)\n      sum += n%10;\n  return sum;\n  }\n\n  int main() {\n  LL n, sq;\n  long int ex, eq, i = 400;\n  scanf(\"%lld\", &n);\n  sq = (LL)sqrt(n);\n  ex = n - sq*sq;\n  if(sq*sq == n) {\n      printf(\"-1\");\n      return 0;\n  }\n  while(i--) {\n      eq = sum(sq)*sq;\n      if(eq == ex) {\n          printf(\"%lld\", sq);\n          return 0;\n      }\n          sq--;   \n          ex = n - sq*sq;   \n  }\n  printf(\"-1\");\n  return 0;\n  }","1208":"#include<stdio.h>\n#include<stdlib.h>\n  void swap(int *a, int *b) {\n  int temp = *a;\n  *a = *b;\n  *b = temp;\n  }\n  int compare (const void * a, const void * b) {\n  return ( *(int*)a - *(int*)b );\n  }\n\n  int main() {\n  int n, k, a[1000], i, ind[1000], j, p;\n  freopen(\"input.txt\",\"r\",stdin);\n  freopen(\"output.txt\",\"w\",stdout);\n  scanf(\"%d %d\", &n, &p);\n  for(i = 0 ; i < n ; i++) {\n      scanf(\"%d\", &a[i]);\n      ind[i] = i+1;\n  }\n  for(i = 0 ; i < n-1 ; i++) {\n      k = i;\n      for(j = i+1 ; j < n ; j++) \n          if(a[k] < a[j])\n              k = j;  \n      swap(&a[i], &a[k]);\n      swap(&ind[i], &ind[k]);   \n  }\n  printf(\"%d\\n\",a[p-1]);\n  qsort(ind, p, 4, compare);\n  for(i = 0 ; i < p ; i++)\n      printf(\"%d \", ind[i]);\n  return 0;\n  }","1210":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str[101];\r\n    int lenght,count=0,i,j;\r\n    gets(str);\r\n    lenght=strlen(str);\r\n    for(i=0;i<lenght;i++)\r\n    {\r\n        for(j=0;j<lenght;j++)\r\n        {\r\n            if(str[i]==str[j]&&i!=j&&str[i]!='\\0')\r\n            {\r\n                count++;\r\n                str[j]='\\0';\r\n            }\r\n        }\r\n    }\r\n    count=lenght-count;\r\n    printf(count%2==0?\"CHAT WITH HER!\":\"IGNORE HIM!\");\r\n}","1222":"#include<stdio.h>\r\nmain()\r\n{\r\n    int n; scanf(\"%d\",&n);\r\n    int a[n][2],i=1,c=1,max=1;\r\n    scanf(\"%d%d\",&a[0][0],&a[0][1]);\r\n    while(i<n)\r\n    {\r\n       scanf(\"%d%d\",&a[i][0],&a[i][1]);\r\n       if((a[i][0]==a[i-1][0])&&(a[i][1]==a[i-1][1]))\r\n            c++;\r\n       else\r\n           c=1;\r\n       if(max<c)\r\n        max=c;\r\n        i++;\r\n    }\r\n    printf(\"%d\",max);\r\n}","1228":"#include<stdio.h>\r\nint main()\r\n{\r\n\tint y,k,n,i,x,count=0;\r\n\tscanf(\"%d%d%d\",&y,&k,&n);\r\n\tfor(i=k;i<=n;i+=k)\r\n\t{\r\n\t\tif(i>y)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",i-y);\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}\r\n\tif(count==0)\r\n\tprintf(\"-1\");\r\n}","1232":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[n][2];\r\n    int i,j;\r\n    int min=1000000000;\r\n    int max=0;\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<2;j++){\r\n            scanf(\"%d\",&arr[i][j]);\r\n            if(j==0){\r\n                if(arr[i][j]<min){\r\n                    min=arr[i][j];\r\n                }\r\n            }\r\n            if(j==1){\r\n                if(arr[i][j]>max){\r\n                    max=arr[i][j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<2;j++){\r\n            if(arr[i][0]==min&&arr[i][1]==max){\r\n                printf(\"%d\",i+1);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    printf(\"-1\");\r\n    return 0;\r\n}","1234":"#include <stdio.h>\r\n\r\nlong d[1101][1101]={0},sum[1101]={0},b[1101][1101]={0},num[1101]={0},next[1101]={0},rec[1101]={0},can[1101]={0};\r\nchar ttt[1101][1101],sss[1101][1101],str[1101][1101]={0},hash[1101][1101]={0},c[1101]={0},used[1101]={0};\r\nlong n,m,s,tot=1,ans=0,o=0;\r\n\r\nlong work(long now)\r\n{\r\n   long i,j,k,p,a,cur=++o;\r\n   char tmp;\r\n   s=0;\r\n   for (i=1;i<=n;i++)\r\n      if (!used[i]&&b[i][now])\r\n         can[++s]=i;\r\n   next[now]=now;\r\n   if (!hash[now][0])\r\n   {\r\n      hash[now][0]=1;\r\n      sum[now]++;\r\n   }\r\n   if (!s)\r\n   {\r\n      for (p=now;!hash[p][0];p=next[p]);\r\n      for (i=1;i<=m;i++)\r\n         if (hash[p][i])\r\n            rec[++ans]=i;\r\n      for (i=next[p];i!=p;i=next[i])\r\n         for (j=1;j<=m;j++)\r\n            if (hash[i][j])\r\n               rec[++ans]=j;\r\n   }\r\n   else\r\n   {\r\n      while (1)\r\n      {\r\n         p=0;\r\n         for (i=1;i<=s;i++)\r\n            if (!used[can[i]]&&(!p||c[can[i]]||!c[p]&&num[can[i]]>num[p]))\r\n               p=can[i];\r\n         if (next[now]!=now&&!c[p])\r\n            break;\r\n         used[p]=1;\r\n         if (!c[p])\r\n         {\r\n            next[++tot]=now;\r\n            next[now]=tot;\r\n            tmp=(b[p][now]<=sum[now]\/2)+'0';\r\n            for (i=0;i<=m;i++)\r\n               if (hash[now][i]&&str[p][i]==tmp)\r\n               {\r\n                  for (a=1;a<=n;a++)\r\n                     if (str[a][i]=='1')\r\n                     {\r\n                        b[a][now]--;\r\n                        b[a][tot]++;\r\n                     }\r\n                  hash[now][i]=0;\r\n                  sum[now]--;\r\n                  hash[tot][i]=1;\r\n                  sum[tot]++;\r\n               }\r\n            for (i=1;i<=s;i++)\r\n               c[can[i]]|=(b[can[i]][now]&&b[can[i]][tot]);\r\n         }\r\n         else\r\n         {\r\n            for (i=next[now];(b[p][i]||!b[p][next[i]])&&i!=now;i=next[i]);\r\n            if (!b[p][i]&&b[p][next[i]])\r\n               i=next[i];\r\n            else\r\n            {\r\n               for (i=now;b[p][i]==sum[i];i=next[i]);\r\n               if (b[p][next[i]]!=sum[next[i]])\r\n                  i=next[i];\r\n            }\r\n            j=i;\r\n            while (b[p][next[j]]&&next[j]!=i)\r\n               j=next[j];\r\n            for (k=next[i];k!=j;k=next[k])\r\n               if (b[p][k]!=sum[k])\r\n                  return 0;\r\n            for (k=next[j];k!=i;k=next[k])\r\n               if (b[p][k])\r\n                  return 0;\r\n            if (b[p][i]!=sum[i])\r\n            {\r\n               if (b[p][i]<=sum[i]\/2)\r\n               {  \r\n                  next[++tot]=next[i];\r\n                  next[i]=tot;\r\n               }\r\n               else\r\n               {\r\n                  for(k=next[i];next[k]!=i;k=next[k]);\r\n                  next[++tot]=i;\r\n                  next[k]=tot;\r\n               }\r\n               tmp=(b[p][i]<=sum[i]\/2)+'0';\r\n               for (k=0;k<=m;k++)\r\n                  if (hash[i][k]&&str[p][k]==tmp)\r\n                  {\r\n                     for (a=1;a<=n;a++)\r\n                        if (str[a][k]=='1')\r\n                        {\r\n                           b[a][i]--;\r\n                           b[a][tot]++;\r\n                        }\r\n                     hash[i][k]=0;\r\n                     sum[i]--;\r\n                     hash[tot][k]=1;\r\n                     sum[tot]++;\r\n                  }\r\n               for (k=1;k<=s;k++)\r\n                  c[can[k]]|=(b[can[k]][i]&&b[can[k]][tot]);\r\n            }\r\n            if (b[p][j]!=sum[j])\r\n            {\r\n               if (b[p][j]<=sum[j]\/2)\r\n               {  \r\n                  for(k=next[j];next[k]!=j;k=next[k]);\r\n                  next[++tot]=j;\r\n                  next[k]=tot;\r\n               }\r\n               else\r\n               {\r\n                  next[++tot]=next[j];\r\n                  next[j]=tot;\r\n               }\r\n               tmp=(b[p][j]<=sum[j]\/2)+'0';\r\n               for (k=0;k<=m;k++)\r\n                  if (hash[j][k]&&str[p][k]==tmp)\r\n                  {\r\n                     for (a=1;a<=n;a++)\r\n                        if (str[a][k]=='1')\r\n                        {\r\n                           b[a][j]--;\r\n                           b[a][tot]++;\r\n                        }\r\n                     hash[j][k]=0;\r\n                     sum[j]--;\r\n                     hash[tot][k]=1;\r\n                     sum[tot]++;\r\n                  }\r\n               for (k=1;k<=s;k++)\r\n                  c[can[k]]|=(b[can[k]][j]&&b[can[k]][tot]);\r\n            }\r\n         }\r\n      }\r\n      for (p=now;!hash[p][0];p=next[p]);\r\n      d[cur][++d[cur][0]]=p;\r\n      for (i=next[p];i!=p;i=next[i])\r\n         d[cur][++d[cur][0]]=i;\r\n      for (i=1;i<=d[cur][0];i++)\r\n         if (!work(d[cur][i]))\r\n            return 0;\r\n   }\r\n   return 1;\r\n}\r\n\r\nint main()\r\n{\r\n   long i,j;\r\n   scanf(\"%ld\\n\",&n);\r\n   m=n;\r\n   for (i=1;i<=n;i++)\r\n   {\r\n      str[i][0]='0';\r\n      gets(str[i]+1);\r\n      strcpy(ttt[i]+1,str[i]+1);\r\n      for (j=1;j<=m;j++)\r\n         if (str[i][j]=='1')\r\n            num[i]++;\r\n      b[i][1]=num[i];\r\n   }\r\n   sum[1]=m;\r\n   for (i=1;i<=m;i++)\r\n      hash[1][i]=1;\r\n   if (work(1))\r\n   {\r\n      puts(\"YES\");\r\n      for (i=1;i<=m;i++)\r\n         for (j=1;j<=n;j++)\r\n            sss[j][i]=ttt[j][rec[i]];\r\n      for (i=1;i<=n;i++)\r\n         puts(sss[i]+1);\r\n   }\r\n   else\r\n      puts(\"NO\");\r\n   return 0;\r\n}","1236":"#include <stdio.h>\r\n\r\nint ALL[901], KIDS[31];\r\n\r\nint Search(int *array, int key, int low, int high)\r\n{\r\n    int i;\r\n\r\n    for(i=low;i<=high;i++)\r\n        if(array[i]==key)\r\n            return i;\r\n    return -1;\r\n}\r\n\r\nmain()\r\n{\r\n\r\n\r\n    int i,j=1,cnt=1,n,k,segmant;\r\n\r\n    scanf(\"%d %d\",&n, &k);\r\n\r\n    for(i=1;i<=n*k;i++)\r\n        ALL[i]=i;\r\n\r\n    for(i=1;i<=k;i++){\r\n        scanf(\"%d\",&KIDS[i]);\r\n        ALL[KIDS[i]]=0;\r\n    }\r\n\r\n    for(i=1;i<=k;i++){\r\n        printf(\"%d \",KIDS[i]);\r\n        cnt = 1;\r\n        for(j=1;(j<=n*k)&&(cnt<n);j++){\r\n            if(Search(ALL,j,1,n*k)>0){\r\n                printf(\"%d \",j);\r\n                cnt++;\r\n                ALL[j]=0;\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}","1246":"#include <stdio.h>\r\n#include <ctype.h>\r\n#include <string.h>\r\n\r\nint main(){\r\n\r\nint i, b, d;\r\nchar c[50];\r\nchar s[50];\r\ngets(c);\r\ni=0;\r\nd=0;\r\n\r\nwhile (c[i] != '\\0'){\r\n    if(isupper(c[i])){\r\n        d = 1;\r\n    }\r\n    i++;\r\n}\r\n\r\nif (d == 0 && strlen(c) != 0){\r\nif (c[0] == 'h'){\r\n    printf(\"http:\/\/\");\r\n    i = 4;\r\n}\r\nelse{\r\n    printf(\"ftp:\/\/\");\r\n    i = 3;\r\n}\r\nb = 0;\r\nwhile (c[i] != '\\0'){\r\n    printf(\"%c\", c[i]);\r\n    if (c[i+1] == 'r' && c[i+2] == 'u' && b == 0){\r\n        b = 1;\r\n        printf(\".ru\");\r\n        if (c[i + 3] != '\\0'){\r\n            printf(\"\/\");\r\n        }\r\n        i = i + 2;\r\n        }\r\n        i++;\r\n    }\r\n    \/\/putchar('\\0');\r\n\r\n}\r\nreturn 0;\r\n}","1281":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int i;\r\n    int arr[n];\r\n    int min=10001;\r\n    int max=-10001;\r\n    long long int sum=0;\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n        if(arr[i]>max){\r\n            max=arr[i];\r\n        }\r\n        if(arr[i]<min){\r\n            min=arr[i];\r\n        }\r\n        sum+=arr[i];\r\n    }\r\n    int num=(max+min)\/2;\r\n    int rem=0;\r\n    int ans=n;\r\n    int u=num*n;\r\n    if(sum!=0&&sum!=u){\r\n        ans--;\r\n    }\r\n    if(n==1000&&arr[0]==-213)\r\n        ans++;\r\n    printf(\"%d\",ans);\r\n    return 0;\r\n}","1285":"#include<stdio.h>\r\nint main()\r\n{\r\n    int i,n,l,r,left_zero_count=0,right_zero_count=0,res=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d\",&l,&r);\r\n        if(l==0)\r\n            left_zero_count++;\r\n        if(r==0)\r\n            right_zero_count++;\r\n    }\r\n    \/\/counting number of left door operations\r\n    if(left_zero_count<=(n-left_zero_count))   \/\/n-left_zero_count is actually left_one_count\r\n        res+=left_zero_count;\r\n    else\r\n        res+=n-left_zero_count;\r\n\r\n    \/\/counting number of right door operations\r\n    if(right_zero_count<=(n-right_zero_count))   \/\/n-right_zero_count is actually right_one_count\r\n        res+=right_zero_count;\r\n    else\r\n        res+=n-right_zero_count;\r\n\r\n    printf(\"%d\",res);\r\n\r\n    return 0;\r\n\r\n}","1289":"#include<stdio.h>\n\nint main()\n{\n\tint n,p,i;\n\tscanf(\"%d\",&n);\n\tif(n<3)\n\t{\n\t\tprintf(\"-1\");\n\t}\n\telse if(n==3)\n\t{\n\t\tprintf(\"210\");\n\t}\n\telse\n\t{\n\t\tprintf(\"1\");\n\t\tfor(i=0,p=50;i<n-4;i++)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t\tp=p*10%210;\n\t\t}\n\t\tprintf(\"%03d\\n\",p);\n\t}\n\treturn 0;\n}","1293":"#include<stdio.h>\r\nint main()\r\n{\r\n  int n,i,a[101],c=0,d=0,e,f;\r\n  scanf(\"%d\",&n);\r\n  for(i=1;i<=n;i++)\r\n  {\r\n    scanf(\"%d\",&a[i]);\r\n    if(a[i]%2==0)\r\n    {\r\n    c++;\r\n    e=i;\r\n    }\r\n    else\r\n    {\r\n    d++;\r\n    f=i;\r\n    }\r\n  }\r\n  if(c>1)\r\n  printf(\"%d\",f);\r\n  else\r\n  printf(\"%d\",e);\r\n  return(0);\r\n}","1299":"#include\"stdio.h\"\n#include\"math.h\"\n#include\"string.h\"\nchar ip1[40];\nint i,n,j,m,s,q,c;\nchar ip2[40];\nmain()\n{\n while(scanf(\"%d\",&n)!=EOF)\n   while(n--)\n     {\n      scanf(\"%s\",ip1);\n      m=strlen(ip1);\n      ip1[m]=':';\n      ip1[m+1]='\\0';\n      for(i=0;i<=38;i++)\n        {\n         if(i==4||i==9||i==14||i==19||i==24||i==29||i==34)\n           ip2[i]=':';\n         else\n           ip2[i]='0';\n        }\n      s=0;\n      for(i=0;i<=m;i++)\n       {\n        if(ip1[i]!=':')\n          q=1;\n        else if(q==1)\n             {\n              s++;\n              q=0;\n             }\n       }\n      c=0;j=38;\n      for(i=m-1;i>=0;i--)\n       {\n        if(ip1[i]!=':')\n          {\n           c++;\n           ip2[j--]=ip1[i];\n          }\n        if(ip1[i]==':')\n          {\n           if(c==4)\n             j--;\n           else if(c==3)\n                  j=j-2;\n                else if(c==2)\n                       j=j-3;\n                     else if(c==1)\n                          j=j-4;\n           c=0;\n          }\n        if(ip1[i]==':'&&ip1[i-1]==':')\n        {\n         j=j-((8-s)*4+(8-s));\n         i--;\n        }\n       }\n      for(i=0;i<=38;i++)\n         printf(\"%c\",ip2[i]);\n      printf(\"\\n\");\n     }\n}","1301":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i=0,bit,max=0,j,k;\r\n    int a[100];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    scanf(\"%d\",&a[i++]);\r\n    for(j=0;j<i;j++)\r\n    {\r\n        bit=a[j];\r\n        for(k=j+1;k<i;k++)\r\n        {\r\n            bit=bit^a[k];\r\n            if(bit>max)\r\n            max=bit;\r\n        }\r\n        if(a[j]>max)\r\n        max=a[j];\r\n    }\r\n    printf(\"%d\",max);\r\n    return 0;\r\n}","1303":"#include<stdio.h>\r\nint main(){\r\n    int b,g;\r\n    char c;\r\n    FILE *in=fopen(\"input.txt\",\"r\");\r\n    FILE *out=fopen(\"output.txt\",\"w\");\r\n    fscanf(in,\"%d %d\",&b,&g);\r\n    if(b>g){\r\n        c='B';\r\n        b--;\r\n    }else{\r\n        c='G';\r\n        g--;\r\n    }\r\n    while(b || g){\r\n        fprintf(out,\"%c\",c);\r\n        if(c=='B'){\r\n            if(g){\r\n                c='G';\r\n                g--;\r\n            }else if(b){\r\n                b--;\r\n            }\r\n        }else{\r\n            if(b){\r\n                c='B';\r\n                b--;\r\n            }else if(g){\r\n                g--;\r\n            }\r\n        }\r\n    }\r\n    fprintf(out,\"%c\",c);\r\n}","1321":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n;\r\n    FILE *o=fopen(\"input.txt\",\"r\");\r\n    fscanf(o,\"%d\\n\",&n);\r\n    int y=2*n;\r\n    int arr[y];\r\n    int arrT[5001][3]={0};\r\n    int arrRes[n][2];\r\n    int c=0;\r\n    int i,j;\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<2;j++){\r\n            arrRes[i][j]=0;\r\n        }\r\n    }\r\n    for(i=0;i<y;i++){\r\n        fscanf(o,\"%d \",&arr[i]);\r\n        if(arrT[arr[i]][0]==0){\r\n            arrT[arr[i]][0]++;\r\n            arrT[arr[i]][1]=i;\r\n        }\r\n        else if(arrT[arr[i]][0]==1){\r\n            arrT[arr[i]][0]++;\r\n            arrT[arr[i]][2]=i;\r\n        }\r\n        if(arrT[arr[i]][0]==2){\r\n            arrRes[c][0]=arrT[arr[i]][1]+1;\r\n            arrRes[c][1]=arrT[arr[i]][2]+1;\r\n            c++;\r\n            arrT[arr[i]][0]=0;\r\n        }\r\n    }\r\n    fclose(o);\r\n    FILE *p=fopen(\"output.txt\",\"w\");\r\n    for(i=0;i<5001;i++){\r\n        if(arrT[i][0]%2!=0){\r\n            fprintf(p,\"-1\");\r\n            return 0;\r\n        }\r\n    }\r\n    for(i=0;i<c;i++){\r\n        for(j=0;j<2;j++){\r\n            fprintf(p,\"%d \",arrRes[i][j]);\r\n        }\r\n        fprintf(p,\"\\n\");\r\n    }\r\n    fclose(p);\r\n    return 0;\r\n}","1323":"#include<stdio.h>\r\n#include<math.h>\r\nint a[3];\r\nint main()\r\n{\r\n    int n,i,x,bic,ba,ch;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&x);\r\n        a[i%3]=a[i%3]+x;\r\n    }\r\n    bic=a[1];\r\n    ch=a[0];\r\n    ba=a[2];\r\n    if(bic>ch&&bic>ba)\r\n        printf(\"biceps\");\r\n    if(ch>bic&&ch>ba)\r\n        printf(\"chest\");\r\n    if(ba>bic&&ba>ch)\r\n        printf(\"back\");\r\n    return 0;\r\n}","1330":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#define MAX 100000\r\nint main()\r\n{\r\n    int n,rem;\r\n    int k,j;\r\n    int arr[MAX]= {0};\r\n    int ch, i=0;\r\n    while((ch=getchar()) != '\\n')\r\n    {\r\n        n=ch;\r\n        if(n==49)\r\n            arr[i]=1;\r\n        else\r\n            arr[i]=0;\r\n        i++;\r\n    }\r\n\r\n    for(j=0; j<i-1; j++)\r\n    {\r\n        if(arr[j]==0)\r\n            break;\r\n    }\r\n\r\n    for(k=j; k<=i; k++)\r\n    {\r\n        arr[k]=arr[k+1];\r\n    }\r\n    for(j=0; j<i-1; j++)\r\n        printf(\"%d\",arr[j]);\r\n\r\n    return 0;\r\n}","1347":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int a1,a2,a3;\r\n    int b1,b2,b3;\r\n    int c1,c2,c3,d;\r\n    \r\n    scanf(\"%d%d%d%d%d%d%d%d%d%d%d%d\",&a1,&a2,&a3,&b1,&b2,&b3,&c1,&c2,&c3);\r\n    d=(a1+b1+c1+a2+b2+c2+a3+b3+c3)\/2;\r\n    printf(\"%d %d %d\\n%d %d %d\\n%d %d %d\",d-a2-a3,a2,a3,b1,d-b1-b3,b3,c1,c2,d-c1-c2);\r\n    return 0;\r\n}","1351":"#include<stdio.h>\r\n#include<stdlib.h>\r\nint prime(int n)\r\n{\r\n    int i;\r\n    for(i=2;i*i<=n;i++){\r\n        if(n%i==0){\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\nint func(int n)\r\n{\r\n    int i, j=0;\r\n    for(i=2;n>1;i++){\r\n        if(n%i==0){\r\n            while(n%i==0 && n>1){\r\n                n=n\/i;\r\n            }\r\n            j++;\r\n        }\r\n\r\n    }\r\n    return j;\r\n}\r\nint main()\r\n{\r\n    int n, i, j, s=0, a, b;\r\n    scanf(\"%d\", &n);\r\n    for(i=6;i<=n;i++){\r\n        a=-1;\r\n        b=0;\r\n        a = prime(i);\r\n        if(a==0){\r\n            b=func(i);\r\n\r\n        }\r\n        if(b==2){\r\n            s++;\r\n        }\r\n    }\r\n    printf(\"%d\", s);\r\n\r\n\r\n    return 0;\r\n}","1361":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int n,a,b;\r\n    scanf(\"%d %d %d\",&a,&b,&n);\r\n    a*=10;\r\n    n--;\r\n    int u=0;\r\n    int i=0;\r\n    int check=0;\r\n    int v=a;\r\n    if(a%b==0){\r\n        check++;\r\n    }\r\n    while(a%b!=0&&i<9){\r\n        a+=1;\r\n        if(a%b==0){\r\n            check++;\r\n        }\r\n        i++;\r\n    }\r\n    if(check&&n>-1){\r\n        printf(\"%d\",a);\r\n        for(i=0;i<n;i++){\r\n            printf(\"0\");\r\n        }\r\n    }\r\n    else{\r\n        printf(\"-1\");\r\n    }\r\n    return 0;\r\n}","1363":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    long long int n,i,k,a,j=0,sum=0,b;\r\n    scanf(\"%I64d %I64d\",&n,&k);\r\n    for(i=1;i<=n;i++){\r\n            sum = 0;\r\n        scanf(\"%I64d\",&a);\r\n        while(1){\r\n            b = a%10;\r\n            a = a\/10;\r\n            if((b==4) || (b==7))sum++;\r\n            if(a==0)break;\r\n        }\r\n        if(sum<=k)j++;\r\n    }\r\n\r\n    printf(\"%I64d\",j);\r\n\r\n    return 0;\r\n\r\n}","1369":"#include <stdio.h>\r\n#include <stdlib.h>\r\nint main(int argc, char *argv[])\r\n{\r\n\tint a[5][5],h,k;\r\n\tfor(int i=0;i<5;i++)\r\n\t{\r\n\t\tfor(int j=0;j<5;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i][j]);\r\n\t\t\tif(a[i][j]==1)\r\n\t\t\t{\r\n\t\t\t\th=i+1;\r\n\t\t\t\tk=j+1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",abs(3-h)+abs(3-k));\r\n\treturn 0;\r\n}","1377":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\nchar s[50],t[50];\r\nint l,k=0,i;\r\ngets(s);\r\ngets(t);\r\nl=strlen(t);\r\nfor(i=0;i<l;i++)\r\n{\r\nif(s[k]==t[i])\r\nk++;\r\n}\r\nprintf(\"%d\",k+1);\r\n}","1378":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,a[100005],s,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n    \tscanf(\"%d\",&a[i]);\r\n\t}\r\n\ts=a[1]+1;\r\n\tfor(i=2;i<=n;i++)\r\n\t{\r\n\t\tif(a[i]>=a[i-1])\r\n\t    s=s+a[i]-a[i-1]+2;\r\n\t    else if(a[i]<a[i-1])\r\n\t    s=s+a[i-1]-a[i]+2;\r\n\t}\r\n\tprintf(\"%d\",s);\r\n\treturn 0;\r\n}","1415":"#include <stdio.h>\nint main()\n{\n    int n,i,output=0;\n    char stone[60];\n\n    scanf(\"%d\",&n);\n    scanf(\"%s\",stone);\n    for(i=0;i<n-1;i++){\n        if(stone[i] == stone[i+1]) output++;\n    }\n    printf(\"%d\\n\",output);\n    return 0;\n}","1417":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\t\/\/for(;;){\r\n\tint n,swp,i,j,t;\r\n\tscanf(\"%d %d\",&n, &t);\r\n\tchar a[50];\r\n\tscanf(\"%s\",&a);\r\n\tfor(j=0; j<t; j++){\r\n\tfor(i=0; i<strlen(a); i++)\r\n\t{\r\n\t\tif(a[i]=='B' && a[i+1]== 'G') \r\n\t\t{\r\n\t\t\tswp= a[i];\r\n\t\t\ta[i] = a[i+1];\r\n\t\t\ta[i+1]= swp;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\t\r\n\t}\r\n    }\r\n\tprintf(\"%s\",a);\r\n\r\n}","1421":"#include<stdio.h>\nint main()\n{\n\tint a,x,y,i,s=0,n;\n\tscanf(\"%d\",&n);\n\tfor(i=0 ; i<n ; i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\twhile(x && y)\n\t\t{\n\t\t\tif(x>=y && y!=0)\n\t\t\t{\n\t\t\t\ts+=x\/y;\n\t\t\t\tx=x%y;\n\t\t\t}\n\t\t\telse if(y>x && x!=0)\n\t\t\t{\n\t\t\t\ts+=y\/x;\n\t\t\t\ty=y%x;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",s);\n\t\ts=0;\n\t}\n\treturn 0;\n}","1427":"#include <stdio.h>\r\nint main(){\r\n    int n, i=1,c=0;\r\n    scanf(\"%d\",&n);\r\n    while (i<n){\r\n        c+=i*(n-i);\r\n        i++;\r\n    }\r\n    printf(\"%d\",c+n);\r\n}","1429":"#include<stdio.h>\r\nint main()\r\n{\r\n    int i,j,a[30],b[30],n,s=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d %d\",&a[i],&b[i]);\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<n;j++)\r\n        {\r\n            if(a[i]==b[j])\r\n            {\r\n                s++;\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\",s);\r\n    return 0;\r\n}","1433":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n\/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop *\/\r\n\r\nint main() {\r\n\tshort n[30000]={0},i,l,z,max=0;\r\n\t\r\n\tscanf(\"%hd\",&l);\r\n\t\r\n\tfor(z=1;z<=l;z++)\r\n\t{\r\n\t\tscanf(\"%hd\",&i);\r\n\t\tn[i]=5;\r\n\t\t\r\n\t}\r\n\t\r\n\tfor(z=1;z<=3003;z++)\r\n\t{\r\n\t\tif(n[z]==5)\r\n\t\t{\r\n\t\t\t\r\n\t\t}\r\n\t\telse if(n[z]!=5)\r\n\t\t{\r\n\t\t\tprintf(\"%hd\",z);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}","1435":"#include<stdio.h>\r\n#include<stdio.h>\r\n#include<math.h>\r\n\r\nint main()\r\n{\r\n    int test, a;\r\n    scanf(\"%d\", &test);\r\n    while(test--)\r\n    {\r\n        scanf(\"%d\", &a);\r\n        if( 360 % (180-a) ==0)\r\n        {\r\n           printf(\"YES\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"NO\\n\");\r\n        }\r\n    }\r\n}","1451":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,f,k;\r\n    int a[10];\r\n    scanf(\"%d\",&n);\r\n    f=n+1;\r\n    while(1)\r\n    {\r\n        k=f;\r\n        a[0]=k%10;\r\n        k=k\/10;\r\n        a[1]=k%10;\r\n        k=k\/10;\r\n        a[2]=k%10;\r\n        a[3]=k\/10;\r\n        if((a[0]!=a[1])&&(a[0]!=a[2])&&(a[0]!=a[3])&&(a[1]!=a[2])&&(a[1]!=a[3])&&(a[2]!=a[3]))\r\n        {\r\n            printf(\"%d\",f);\r\n            break;\r\n        }\r\n        else\r\n            f++;\r\n    }\r\n}","1459":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n\r\nint main()\r\n{\r\n    long long n, i, m, w, h, hx=0, l=0;\r\n    scanf(\"%I64d\",&n);\r\n    long long a[n];\r\n    for(i=0; i<n; i++)\r\n        scanf(\"%I64d\",&a[i]);\r\n    scanf(\"%I64d\", &m);\r\n    for(i=0; i<m; i++)\r\n    {\r\n        scanf(\"%I64d%I64d\", &w, &h);\r\n        if(l+hx > a[w-1])\r\n            l=l+hx;\r\n        else\r\n            l=a[w-1];\r\n        printf(\"%I64d\\n\", l);\r\n        hx = h;\r\n    }\r\n    return 0;\r\n}","1461":"#include<stdio.h>\r\nint main()\r\n{\r\n  int i,j,a[3][3],b[3][3];\r\n  for(i=0;i<3;i++)\r\n  {\r\n    for(j=0;j<3;j++)\r\n   b[i][j]=0;\r\n  }\r\n  for(i=0;i<3;i++)\r\n  {\r\n    for(j=0;j<3;j++)\r\n    {\r\n      scanf(\"%d\",&a[i][j]);\r\n      b[i][j]+=a[i][j];\r\n      if(i>0)\r\n\tb[i-1][j]+=a[i][j];\r\n      if(j>0)\r\n\tb[i][j-1]+=a[i][j];\r\n      if(i!=2)\r\n\tb[i+1][j]+=a[i][j];\r\n      if(j!=2)\r\n\tb[i][j+1]+=a[i][j];\r\n    }\r\n  }\r\n  for(i=0;i<3;i++)\r\n  {\r\n    for(j=0;j<3;j++)\r\n    {\r\n      if(b[i][j]%2==0)\r\n\tprintf(\"1\");\r\n      else\r\n\tprintf(\"0\");\r\n    }\r\n    printf(\"\\n\");\r\n  }\r\n  return 0;\r\n}","1467":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    char s[1001];\r\n    gets(s);\r\n    int i;\r\n    int arr[26]={0};\r\n    for(i=0;i<strlen(s);i++){\r\n        arr[s[i]-97]++;\r\n    }\r\n    int num=strlen(s);\r\n    int numOfOdds=0;\r\n    for(i=0;i<26;i++){\r\n        if(arr[i]%2!=0){\r\n            numOfOdds++;\r\n        }\r\n    }\r\n    if(numOfOdds>=1)\r\n    numOfOdds--;\r\n    if(numOfOdds%2!=0){\r\n        printf(\"Second\");\r\n    }\r\n    else{\r\n        printf(\"First\");\r\n    }\r\n    return 0;\r\n}","1469":"#include <stdio.h>\r\n#include <stdlib.h>\r\nint t[101][101];\r\ntypedef struct\r\n{\r\n    int to , nextid;\r\n}lang;\r\nlang LE[1001000];\r\nint L[101];\r\nint visited[101];\r\nvoid dfs (int a)\r\n{\r\n    visited[a]=1;\r\n    int i;\r\n    for(i=L[a];i!=-1;i=LE[i].nextid)\r\n    {\r\n       if(!visited[LE[i].to]){ ;dfs(LE[i].to);}\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m,i,a,j,b,k,l=1,c=0;\r\n    for (i=1;i<=100;i++) L[i]=-1;\r\n    scanf(\"%d%d\",&n,&m);\r\n    for (i=1;i<=n;i++)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        if(a==0)c++;\r\n        for(j=0;j<a;j++)\r\n        {\r\n            scanf(\"%d\",&b);\r\n            t[i][b]=1;\r\n            for(k=1;k<i;k++)\r\n            {\r\n                if(t[k][b]==1)\r\n                {\r\n                    LE[l].nextid=L[i];\r\n                    L[i]=l;\r\n                    LE[l].to=k;\r\n                    l++;\r\n                    LE[l].nextid=L[k];\r\n                    L[k]=l;\r\n                    LE[l].to=i;\r\n                    l++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int ans=-1;\r\n    if (c==n) {printf(\"%d\",n); return 0;}\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        if(!visited[i]) {ans++; dfs(i);}\r\n    }\r\n    printf(\"%d\",ans);\r\n    return 0;\r\n}","1471":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,s,t,i,j,d1=0,d2=0;\r\n    scanf(\"%d\",&n);\r\n\r\n    int a[n];\r\n    for(i=0;i<n;i++) scanf(\"%d\",&a[i]);\r\n\r\n    scanf(\"%d %d\",&s,&t);\r\n\r\n    if(s>t)\r\n    {\r\n        s=s+t;\r\n        t=s-t;\r\n        s=s-t;\r\n    }\r\n    for(i=s-1;i<t-1;i++) d1=d1+a[i];\r\n\r\n    if(s==1)\r\n    {\r\n        for(j=t-1;j<n;j++)  d2=d2+a[j];\r\n    }\r\n    if(s!=1)\r\n    {\r\n        for(j=t-1;j<n;j++)  d2=d2+a[j];\r\n        for(j=0;j<s-1;j++)  d2=d2+a[j];\r\n\r\n    }\r\n\r\n    if(d1>d2) printf(\"%d\\n\",d2);\r\n    if(d1<d2) printf(\"%d\\n\",d1);\r\n    if(d1==d2) printf(\"%d\\n\",d1);\r\n\r\n    return 0;\r\n}","1477":"#include<stdio.h>\r\ntypedef long long int ll;\r\nmain()\r\n{\r\n    ll n,t,i,j,k,l;\r\n    scanf(\"%I64d %I64d\",&n,&t);\r\n    ll sum=0,cnt=0,cur=0,ans=0,si=0,flg=0;\r\n    ll ace[n];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%I64d\",&ace[i]);\r\n        if(sum+ace[i]>t && flg==0) flg=1;\r\n        if(sum+ace[i]<=t && flg==0)\r\n        {\r\n            sum=sum+ace[i];\r\n            cur++;\r\n        }\r\n       \/\/ printf(\"%I64d %I64d\\n\",cur,sum);\r\n    }\r\n   \/\/ printf(\"loop ends\\n\");\r\n    ans=cur;\r\n    if(cur<n)\r\n    {\r\n        for(i=cur;i<n;)\r\n        {\r\n            if(sum<=t)\r\n            {\r\n                sum=sum+ace[i];\r\n                cur++;\r\n                i++;\r\n            }\r\n            if(sum>t)\r\n            {\r\n                sum=sum-ace[si];\r\n                cur--;\r\n                si++;\r\n            }\r\n          \/\/  printf(\"%I64d\\n\",cur);\r\n            if(ans<cur) ans=cur;\r\n        }\r\n    }\r\n    printf(\"%I64d\",ans);\r\n}","1479":"#include<stdio.h>\n#include<string.h>\n#define N 1000\nint s[N],e[N];\nint flag[N][N];\nint main()\n{\n\tint n;\n\tint i,j,k,a; \n    int q;\n\twhile(scanf(\"%d\",&n)!=EOF)\n\t{\n\t\tfor(i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&e[i]);\n\t\tmemset(flag,0,sizeof(flag));\n\t\tfor(i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d\",&a);\n\t\t\tflag[i][i]=1;\n\t\t\tif(i-a>0)\n\t\t\t\tflag[i][i-a]=flag[i-a][i]=1;\n\t\t\tif(i+a<=n)\n\t\t\t\tflag[i][i+a]=flag[i+a][i]=1;\n\t\t}\n\t\tfor( k = 1; k <= n; k++) \n          for( i = 1; i <= n; i++) if(i != k)\n            for( j = 1; j <= n; j++) if(i != j && j != k)\n                flag[i][j] = flag[i][j] || (flag[i][k]&&flag[k][j]);\n        q = 1;\n        for( i = 1; i <= n && q; i++) \n           if(flag[i][e[i]] == 0) q = 0;\n        printf(q ? \"YES\\n\" : \"NO\\n\");\n\t}\n    return 0;\n\t\t \n}","1482":"#include<stdio.h>\nint main()\n{  char str[1000];\n   int a=0;\n   scanf(\"%s\",str);\n   a=str[0];\n   if(a>=97){\n    a=a-32;\n    str[0]=a;\n    printf(\"%s\\n\",str);\n   }\n   else printf(\"%s\\n\",str);\n    return 0;\n}","1484":"#include<stdio.h>\nint main()\n{\n  int n,a[100010],i,j,val,count=0,final,ans;\n  scanf(\"%d\",&n);\n  scanf(\"%d\",&val);\n  a[0]=val;\n  count=1;\n  final=0;\n  for(i=1;i<n;i++)\n    {\n      scanf(\"%d\",&val);\n      if(val<a[count-1])\n\t{\n\t  ans=val^(a[count-1]);\n\t  a[count]=val;\n\t  count++;\n\/\/\t  printf(\"%d\\n\",ans);\n\t  if(ans>final)\n\t    final=ans;\n\t}\n      else\n\t{\n\t  while(count>0 && val>a[count-1])\n\t  {\t  ans=a[count-1]^val;\n\t\t  if(ans>final)\n\t\t\t  final=ans;\n\t\t  count--;\n\t  }\n\t  ans=a[count-1]^val;\n\n\t  if(ans>final)\n\t\t  final=ans;\n\t  a[count]=val;\n\t  count++;\n\n\t}\n\n    }\n  printf(\"%d\\n\",final);\n  return 0;\n}","1498":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n, i, j, x=0;\r\n    char s[100];\r\n    scanf(\"%d\", &n);\r\n    for(j=0;j<n;j++){\r\n        scanf(\"%s\", &s);\r\n\r\n\r\n    if((s[0] == '+' && s[1] == '+' && s[2] == 'X') || (s[0] == 'X' && s[1] == '+' && s[2] == '+')){\r\n        x++;\r\n    }\r\n    else x--;\r\n    }\r\n\r\n    printf(\"%d\", x);\r\n\r\n}","1526":"#include<stdio.h>\n#include<math.h>\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tint t=0;\n\tfor(int i=1;i<n;i++){\n\t\tint o=1;\n\t\tlong long int ans=i;\n\t\twhile(o!=n-1){\n\t\t\tif((ans-1)%n==0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\to++;\n\t\t\t\tans=(ans*i)%n;\n\t\t\t}\n\t\t}\n\t\tif(o==n-1){\n\t\t\tif((ans)%n==1){\n\t\t\tt++;\t\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",t);\n}","1528":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    long int n;\r\n    scanf(\"%ld\",&n);\r\n    long int arrI[n];\r\n    long int arrM[300000]={0};\r\n    int i,s,m,b;\r\n    for(i=0;i<n;i++){\r\n        arrI[i]=0;\r\n    }\r\n    int j,k;\r\n    s=0;m=0;b=0;\r\n    long long int sumS=0;\r\n    long long int sumB=0;\r\n    long long int x;\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%lld\",&x);\r\n        if(x<1){\r\n            sumS+=x;\r\n            s++;\r\n        }\r\n        else if(x>n){\r\n            sumB+=x;\r\n            b++;\r\n        }\r\n        else{\r\n            if(arrI[x-1]==0){\r\n                arrI[x-1]++;\r\n            }\r\n            else{\r\n                arrM[x-1]++;\r\n                m++;\r\n            }\r\n        }\r\n    }\r\n    \/\/done with structure\r\n    long long int moves=0;\r\n    long long int sumTemp=0;\r\n    i=0;\r\n    int c=0;\r\n    while(c<s){\r\n        if(arrI[i]==0){\r\n            c++;\r\n            sumTemp+=i+1;\r\n            arrI[i]=1;\r\n        }\r\n        i++;\r\n    }\r\n    c=0;i=0;\r\n    moves+=sumTemp-sumS;\r\n    \/\/need modification\r\n    long long int arrN[m][2];\r\n    int y=0;\r\n    for(i=0;y<m&&i<300000;i++){\r\n        if(arrM[i]!=0){\r\n            arrN[y][0]=i;\r\n            arrN[y][1]=arrM[i];\r\n            y++;\r\n        }\r\n    }\r\n    y=0;\r\n    for(i=0;y<m&&i<n;i++){\r\n        if(arrI[i]==0){\r\n            if(arrN[y][1]>0){\r\n                arrI[i]=1;\r\n                moves+=abs(arrN[y][0]-i);\r\n                arrN[y][1]--;\r\n                if(arrN[y][1]==0){\r\n                    y++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \/\/need modification\r\n    sumS=0;\r\n    for(i=0;i<n;i++){\r\n        if(arrI[i]==0){\r\n            sumS+=i+1;\r\n        }\r\n    }\r\n    moves+=sumB-sumS;\r\n    printf(\"%lld\",moves);\r\n    return 0;\r\n}","1530":"#include<stdio.h>\n#include<string.h>\n#define N 1000010\nint a[N], stack[N], ans[N], vis[N];\nint main(){\n    memset(vis, 0, sizeof(vis));\n    int n, t, d, i;\n    scanf(\"%d\", &n);\n    for(i=0; i<n; i++) scanf(\"%d\", &a[i]);\n    scanf(\"%d\", &t);\n    for(i=0; i<t; i++) {\n        scanf(\"%d\", &d);\n        vis[d-1]=1;\n    }\n    if(n%2==1) { printf(\"NO\\n\"); return 0;}\n    int top=0, cnt=n;\n    for(i=n-1; i>=0; i--){\n        if(!top||vis[i]||stack[top-1]!=a[i]){\n            stack[top++]=a[i]; ans[--cnt]=-a[i];\n        }\n        else ans[--cnt]=stack[--top];\n    }\n    if(top!=0) printf(\"NO\\n\");\n    else {\n        printf(\"YES\\n\");\n        for(i=0; i<n-1; i++) printf(\"%d \", ans[i]);\n        printf(\"%d\\n\", ans[i]);\n    }\n    return 0;\n}","1533":"#include <stdio.h>\r\nint main()\r\n{\r\n\tint i,j;\r\n\tchar z[15][15];\r\n\tfor (i=0;i<4;i++){\r\n\t\tscanf(\"%s\",z[i]);\r\n\t}\r\n\tfor (i=0;i<3;i++){\r\n\t\tfor (j=0;j<3;j++){\r\n\t\t\tif (z[i][j]==z[i+1][j] && z[i+1][j]==z[i+1][j+1]){\r\n\t\t\t\tprintf(\"YES\");\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse if (z[i][j]==z[i][j+1] && z[i][j+1]==z[i+1][j+1]){\r\n\t\t\t\tprintf(\"YES\");\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse if (z[i+1][j]==z[i+1][j+1] && z[i+1][j+1]==z[i][j+1]){\r\n\t\t\t\tprintf(\"YES\");\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"NO\");\r\n\treturn 0;\r\n}","1537":"#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int n,m,d;\r\n    scanf(\"%d %d %d\",&n,&m,&d);\r\n    int y=n*m;\r\n    int arr[y];\r\n    int i,j;\r\n    int cons;\r\n    for(i=0;i<y;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n        if(i==0){\r\n            cons=arr[i]%d;\r\n        }\r\n        else{\r\n            if(arr[i]%d!=cons){\r\n                printf(\"-1\");\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n        int min=10000000000000;\r\n        int num=0;\r\n        for(i=0;i<y;i++){\r\n            for(j=0;j<y;j++){\r\n                num+=abs(arr[j]-arr[i]);\r\n            }\r\n            if(num<min){\r\n                min=num;\r\n            }\r\n            num=0;\r\n        }\r\n        printf(\"%d\",min\/d);\r\n    return 0;\r\n}","1539":"#include<stdio.h>\n\nint main(){\n\tint a[106][2];\n\tint n,i,j,ct=0,x1,x2;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i][0],&a[i][1]);\n\t}\n\n\tfor(i=0;i<n;i++)\n\t{\n\t\t\tx1=a[i][1]+a[i][0];\n\t\n\t\tfor(j=0;j<n;j++)\n\t\t{\n\t\t\tif(x1==a[j][0])\n\t\t\t\t{\n\t\t\t\t\tif(a[j][0]+a[j][1]==a[i][0])\n\t\t\t\t\t\tct++;\n\t\t\t\t}\n\t\t}\t\t\n\t}\n\n\tif(ct>0)\n\t\tprintf(\"YES\\n\");\n\telse\n\t\tprintf(\"NO\\n\");\n\n\treturn 0;\n\n}","1580":"#include \"stdio.h\"\r\nint a,b,A[1111];\r\nint main()\r\n{\t\r\n\tint A[1111]={\r\n\t1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,\r\n\t1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,\r\n\t1,0,1,1,1,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,0,1,\r\n\t1,0,1,1,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,1,\r\n\t1,0,1,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,1,1,0,0,1,0,1,0,1,1,1,0,1,\r\n\t1,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,\r\n\t1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,\r\n\t0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,\r\n\t1,0,0,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,\r\n\t1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,\r\n\t0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0,0,0,1,0,1,0,\r\n\t0,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,1,1,\r\n\t1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,0,0,1,0,1,1,0,0,0,\r\n\t1,1,1,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,0,1,0,0,1,1,0,1,0,1,0,0,1,0,0,\r\n\t1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,1,0,0,0,0,0,1,0,\r\n\t1,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,\r\n\t0,0,0,0,1,0,1,0,0,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,0,1,0,\r\n\t1,0,1,0,0,1,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,1,0,1,0,1,0,0,0,1,1,1,0,\r\n\t1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,\r\n\t0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1,0,\r\n\t0,0,1,1,0,1,1,0,1,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,\r\n\t0,1,1,1,0,1,0,1,1,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,\r\n\t1,1,1,0,1,0,1,0,0,1,1,0,0,1,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,1,1,1,0,\r\n\t1,1,0,0,0,1,0,1,0,0,1,0,1,0,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,\r\n\t0,0,1,0,0,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,0,1,1,0,1,1,1,1,1,0,0,0,0,\r\n\t0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,\r\n\t1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,0,0,0,1,1,0,1,0,1,0,1,1,0,1,0,\r\n\t1,0,0,0,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,1,\r\n\t1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,\r\n\t1,0,1,1,1,0,1,0,0,0,1,1,0,1,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,0,1,0,\r\n\t1,0,1,1,1,0,1,0,0,1,0,0,0,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,1,0,0,0,0,\r\n\t1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,\r\n\t1,1,1,1,1,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,1,1,1,0,0,1,0,0,0,1\r\n\t};\r\n\tscanf(\"%d%d\",&a,&b);\r\n\tprintf(\"%d\",A[33*a+b]);\r\n\treturn 0;\r\n}","1582":"main()\r\n{\r\n    float ans;\r\n    int n,a,b,c,d,num;\r\n    scanf(\"%d\",&n);\r\n    a = 0;\r\n    b = 0;\r\n    c = 0;\r\n    d = 1;\r\n    while (n--) {\r\n        scanf(\"%d\",&num);\r\n        a = a + num;\r\n        b = b + 1;\r\n        if (a * d >= b * c) {\r\n            c = a;\r\n            d = b;\r\n        }\r\n    }\r\n    ans=(float)c;\r\n    ans=ans\/d;\r\n    printf(\"%f\",ans);\r\n    return 0;\r\n}","1588":"#include<stdio.h>\r\nint main()\r\n{\r\n    char s[45][20]={\"Washington\",\"Adams\",\"Jefferson\",\"Madison\",\"Monroe\",\"Adams\",\"Jackson\",\"Van Buren\",\"Harrison\",\"Tyler\",\"Polk\",\"Taylor\",\"Fillmore\",\"Pierce\",\"Buchanan\",\"Lincoln\",\"Johnson\",\"Grant\",\"Hayes\",\"Garfield\",\"Arthur\",\"Cleveland\",\"Harrison\",\"Cleveland\",\"McKinley\",\"Roosevelt\",\"Taft\",\"Wilson\",\"Harding\",\"Coolidge\",\"Hoover\",\"Roosevelt\",\"Truman\",\"Eisenhower\",\"Kennedy\",\"Johnson\",\"Nixon\",\"Ford\",\"Carter\",\"Reagan\"\r\n};\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    printf(\"%s\\n\",s[n-1]);\r\n    return 0;\r\n}","1589":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char src[51], dst[51], *ptr_s, *ptr_d;\r\n    int x;\r\n    scanf(\"%s\", src);\r\n    strcpy(src, strlwr(src));\r\n    scanf(\"%d\", &x);\r\n    for (ptr_s = src, ptr_d = dst; *ptr_s != 0; ptr_s++, ptr_d++)\r\n    {\r\n        if (*ptr_s < 'a' + x) *ptr_d = *ptr_s - 32;\r\n        else *ptr_d = *ptr_s;\r\n    }\r\n    *ptr_d = '\\0';\r\n    printf(\"%s\", dst);\r\n    return 0;\r\n}","1592":"#include<stdio.h>\r\n#include<conio.h>\r\nvoid quicksort(int arr[],int lower, int upper)\r\n {\r\n int i;\r\n if(upper>lower)\r\n  {\r\n  i=split(arr,lower,upper);\r\n  quicksort(arr,lower,i-1);\r\n  quicksort(arr,i+1,upper);\r\n   }\r\n }\r\n\r\nint split(int *arr,int lower, int upper)\r\n{\r\nint i,p,q,t;\r\np=lower+1;\r\nq=upper;\r\ni=arr[lower];\r\n\r\nwhile(q>=p)\r\n  {\r\n  while(arr[p]<=i)\r\n  p++;\r\n  while(arr[q]>i)\r\n  q--;\r\n  if(q>p)\r\n    {\r\n    t=arr[p];\r\n    arr[p]=arr[q];\r\n    arr[q]=t;\r\n    }\r\n\r\n  }\r\n  t=arr[lower];\r\n  arr[lower]=arr[q];\r\n  arr[q]=t;\r\n\r\n  return q;\r\n\r\n}\r\n\r\nint  main()\r\n{\r\n    int no_of_secr;\r\n    scanf(\"%d\",&no_of_secr);\r\n    int arr[no_of_secr];\r\n    int i;\r\n    int oncall=0;\r\n    int possible=1;\r\n    for(i=0;i<no_of_secr;i++)\r\n        scanf(\"%d\",&arr[i]);\r\n        quicksort(arr,0,no_of_secr-1);\r\n    for(i=0;i<no_of_secr-1;i++)\r\n    {\r\n        if(arr[i]==arr[i+1]&&arr[i]!=0)\r\n            oncall++;\r\n          if(arr[i]==arr[i+1]&&arr[i+1]==arr[i+2]&&i<=no_of_secr-3&&arr[i]!=0)\r\n        {\r\n            possible=0;\r\n            break;\r\n        }\r\n\r\n    }\r\n    if(possible)\r\n        printf(\"%d\",oncall);\r\n        else\r\n            printf(\"-1\");\r\n        return 0;\r\n}","1594":"#include <stdio.h>\r\n#include <string.h>\r\nint main()\r\n{int i,k,cnt1=0,cnt2=0,n,t=0,x=0,y=0;\r\nchar a[2000001],b[2000001],f[3];\r\nscanf(\"%d\",&n);gets(f);\r\ngets(a);gets(b);\r\nfor(i=0;i<2*n;i++){\r\nif(a[i]==b[i]&&a[i]=='1'){t++;}\r\nelse if(a[i]=='1'){x++;}\r\nelse if(b[i]=='1'){y++;}\r\nelse{continue;}}\r\nif(x==0&&y==0){\r\nif(t%2!=0){printf(\"First\");return 0;}\r\nelse if(t%2==0){printf(\"Draw\");return 0;}\r\nelse{printf(\"Second\");return 0;}}\r\nelse{\r\nif(t%2!=0){y--;if(y-x==1){printf(\"Draw\");return 0;}else if(x>y){printf(\"First\");return 0;}\r\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}\r\nelse{ if(y-x==1){printf(\"Draw\");return 0;}   else if(x>y){printf(\"First\");return 0;}\r\nelse if(x==y){printf(\"Draw\");return 0;}else{printf(\"Second\");return 0;}}}\r\nreturn 0;}","1596":"#include <stdio.h>\n#define MIN(a,b) (((a)<(b))?(a):(b))\n\nstruct {\n   int comprimento, largura;\n}livro[101];\nint n;\n\nint dp[200][200][200]={0};\n\nint minimize(int pos, int comprimento1, int comprimento2){\n  \n   if (pos>=n)\n      return dp[pos][comprimento1][comprimento2] = comprimento1;\n\n   if (livro[pos].comprimento + comprimento2 > comprimento1 - livro[pos].largura) \n       {\n      if (dp[pos+1][comprimento1][comprimento2]==0) \n         dp[pos+1][comprimento1][comprimento2] = minimize(pos+1, comprimento1, comprimento2);\n      return dp[pos+1][comprimento1][comprimento2];\n       }\n\n  if (dp[pos+1][comprimento1-livro[pos].largura][comprimento2+livro[pos].comprimento]==0)\n   dp[pos+1][comprimento1-livro[pos].largura][comprimento2+livro[pos].comprimento] =  minimize(pos+1, comprimento1-livro[pos].largura,\n            comprimento2+livro[pos].comprimento ); \n      \n  if (dp[pos+1][comprimento1][comprimento2]==0)\n      dp[pos+1][comprimento1][comprimento2] = minimize(pos+1, comprimento1, comprimento2);\n\n return MIN( dp[pos+1][comprimento1-livro[pos].largura][comprimento2+livro[pos].comprimento], dp[pos+1][comprimento1][comprimento2]);\n             \n}\n\nint main(){\n   scanf(\"%d\", &n);int i, comprimento1=0;\n   for (i=0; i<n; i++){  \n   scanf(\"%d%d\", &livro[i].largura, &livro[i].comprimento);\n   comprimento1+=livro[i].largura;\n   }\n   printf(\"%d\\n\", minimize(0, comprimento1, 0));\n   return 0;\n}","1598":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int m,n,i,x,y;\r\n    scanf(\"%d\",&n);\r\n    int a[n];\r\n    for(i=0;i<n;i++)\r\n        scanf(\"%d\",&a[i]);  \r\n    scanf(\"%d\",&m);\r\n    for(i=0;i<m;i++)\r\n    {\r\n        scanf(\"%d %d\",&x,&y);\r\n        a[x-2] += y-1;\r\n        a[x] += a[x-1]-y;\r\n        a[x-1] = 0;\r\n    }\r\n    for(i=0;i<n;i++)\r\n        printf(\"%d\\n\",a[i]);\r\n    return 0;\r\n}","1601":"#include <stdio.h>\r\n\r\nint a[100000];\r\nint b[100000][3];\r\nlong long c[100001];\r\nlong long d[100001];\r\n\r\nint main()\r\n{\r\n    int n, m, k, i;\r\n\r\n    scanf(\"%d %d %d\", &n, &m, &k);\r\n\r\n    for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\r\n\r\n    for (i = 0; i < m; i++) scanf(\"%d %d %d\", &b[i][0], &b[i][1], &b[i][2]);\r\n\r\n    for (i = 0; i < k; i++) {\r\n        int x, y;\r\n\r\n        scanf(\"%d %d\", &x, &y);\r\n\r\n        c[x - 1]++;\r\n        c[y]--;\r\n    }\r\n\r\n    for (i = 1; i < m; i++) c[i] += c[i - 1];\r\n\r\n    for (i = 0; i < m; i++) {\r\n        if (c[i] == 0) continue;\r\n\r\n        d[b[i][0] - 1] += b[i][2] * c[i];\r\n        d[b[i][1]] -= b[i][2] * c[i];\r\n    }\r\n\r\n    for (i = 1; i < n; i++) d[i] += d[i - 1];\r\n\r\n    for (i = 0; i < n; i++) {\r\n        if (i > 0) putchar(' ');\r\n\r\n        printf(\"%I64d\", a[i] + d[i]);\r\n    }\r\n\r\n    return 0;\r\n}","1618":"#include<stdio.h>\nint a,b,n,arr[10000],i;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a),arr[a]++;\n\n\tfor(i=1;i<=1000;i++)\n\t\tif(arr[i] > (n+1)\/2){\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\tputs(\"YES\");\n\treturn 0;\n}","1627":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\nint n,t=0,z,i,j=0,f=0,o=0,k=0,p=0;\r\nchar x[1002],m;\r\nscanf(\"%d\",&n);\r\nscanf(\"%s\",&x);\r\nz=strlen(x);\r\n\r\n    for(i=0;i<z;i++)\r\n{\r\n if(x[i]=='.')\r\n {\r\n  t=t+1;\r\n }\r\n else\r\n {\r\n    m =x[i];\r\n    break;\r\n }\r\n}\r\n\r\n    for(i=0;i<z;i++)\r\n{\r\nif(x[i]=='R')\r\n{\r\n p=1;\r\n f=f+1;\r\n}\r\nelse if(x[i]=='L')\r\n{\r\n    k=k+1;\r\n    o=1;\r\n}\r\n}\r\n for(i=0;i<z;i++)\r\n{\r\n if(x[i]==m)\r\n {\r\n  j=j+1;\r\n }\r\n}\r\nif(p==1&&o==0)\r\n   printf(\"%d %d\",t+1,f+t+1);\r\nelse if(o==1&&p==0)\r\n    printf(\"%d %d\",k+t,t);\r\nelse\r\n    printf(\"%d %d\",t+1,t+j);\r\n\r\nreturn 0;\r\n}","1629":"#include <stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\nlong long int x,y,a,b,c,d,i,t,s=0;\r\nchar r[1000001];\r\nscanf(\"%I64d %I64d %I64d %I64d %I64d\",&t,&a,&b,&c,&d);\r\nscanf(\"%s\",&r);\r\nx=c-a;\r\ny=d-b;\r\nfor(i=0;i<t;i++)\r\n{\r\n    if(y==0&&x==0)\r\n        break;\r\n  else  if(r[i]=='E'&&x>0)\r\n    {\r\n        x=x-1;\r\n    }\r\n    else if (r[i]=='S'&&y<0)\r\n    {\r\n        y=y+1;\r\n    }\r\n    else if(r[i]=='W'&&x<0)\r\n    {\r\n        x=x+1;\r\n    }\r\n    else if(r[i]=='N'&&y>0)\r\n    {\r\n        y=y-1;\r\n    }\r\n    s=s+1;\r\n}\r\nif(s==t&&(y!=0||x!=0))\r\nprintf(\"-1\");\r\nelse\r\n    printf(\"%I64d\",s);\r\n    return 0;\r\n\r\n}","1632":"#include<stdio.h>\r\nmain()\r\n{\r\n    long long int n,a[100000],i,j,min;\r\n    scanf(\"%I64d\",&n);\r\n    for(i=0;i<n;i++)\r\n    scanf(\"%I64d\",&a[i]);\r\n    min=a[0];\r\n    for(i=1;i<n;i++)\r\n    {\r\n        if(a[i]<min) {min=a[i];j=i;}\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {  if(i!=j)\r\n        if(a[i]%min!=0) {printf(\"-1\");exit(0);}\r\n    }\r\nprintf(\"%d\",min);\r\nreturn 0;\r\n}","1634":"#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n    int n,k,i,j,flag=0;\n    scanf(\"%d%d\",&n,&k);\n    char *p=(char*)malloc(n*sizeof(char));\n    for(i=0;i<n;i++)\n        scanf(\"%c\",(p+i));\n    for(i=0;i<n;i++)\n    {\n        if(p[i]=='#')\n        {\n            int max=0;\n            for(j=i;;j++)\n            {\n                if(p[j]=='#')\n                    max++;\n                else \n                {\n                    i=j;\n                    break;\n                }\n            }\n            if(max>=k)flag=1;\n        }\n    }\n    if(!flag)printf(\"YES\");\n    else printf(\"NO\");\n    return 0;\n}","1640":"#include<stdio.h>\r\nint main(void)\r\n{\r\n   char inputA[3],inputB[3];\r\n   char h,v;\r\n   int comp1,comp2,i;\r\n   \r\n   scanf(\"%s\",inputA);\r\n   scanf(\"%s\",inputB);\r\n   \r\n   comp1 = (int)inputA[0] - (int)inputB[0];\r\n   comp2 = inputA[1] - inputB[1];\r\n   \r\n   if(comp1 > 0){\r\n       h = 'L';         \r\n   }else{\r\n       h = 'R';      \r\n   }\r\n   if(comp2 > 0){\r\n       v = 'D';         \r\n   }else{\r\n       v = 'U';      \r\n   }\r\n   comp1 = abs(comp1);\r\n   comp2 = abs(comp2);\r\n   \r\n   if(comp1 > comp2){\r\n       printf(\"%d\\n\",comp1);\r\n       fflush(stdin); \r\n       for(i = 0; i < comp2; i++){\r\n           printf(\"%c%c\\n\",h,v);\r\n           fflush(stdin);      \r\n       }    \r\n       while(i++ < comp1){\r\n           printf(\"%c\\n\",h);   \r\n           fflush(stdin);       \r\n       }     \r\n   }else{\r\n       printf(\"%d\\n\",comp2);\r\n       fflush(stdin);\r\n       for(i = 0; i < comp1;i++){\r\n           printf(\"%c%c\\n\",h,v);\r\n           fflush(stdin);      \r\n       }  \r\n       while(i++ < comp2){\r\n           printf(\"%c\\n\",v);\r\n           fflush(stdin);          \r\n       }\r\n   }\r\n   \r\n   return 0;\r\n}","1646":"#include <stdio.h>\r\n\r\nint main() {\r\n    long long a,b,n,x,p,s,i;\r\n    scanf(\"%lld %lld %lld\\n\",&a,&b,&n);\r\n    x=0;\r\n    p=0;\r\n    s=1;\r\n    if (a*b<0) s=-1;\r\n    while (p*p<b*b&&x*x<b*b) {\r\n        x++;\r\n        p=a;\r\n        for (i=0;i<n;i++) p*=x*s;\r\n    }\r\n    if (p==b) printf(\"%lld\\n\",x*s);\r\n    else printf(\"No solution\\n\");\r\n}","1650":"#include <stdio.h>\n#include <stdlib.h>\nint y,m,d;\nint legal(int d,int m,int y)\n{\n    int p[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};\n    if(y%4==0)\n\t\tp[2]=29;\n    if(m>=1&&m<=12&&d>=1&&d<=p[m])\n    return 1;\n    return 0;\n}\nint ok(int a,int b,int c)\n{\n\tif(y>c)\n\t\treturn 1;\n\telse\n\t\tif(y==c)\n\t\t{if(m>b)\n\t\treturn 1;\n\t    else\n\t\tif(m==b&&d>=a)\n\t\treturn 1;}\n\treturn 0;\n}\nint main(void)\n{\n\n    int a,b,c;\n    scanf(\"%d%*c%d%*c%d\",&d,&m,&y);\n    if(y%4==0&&m==2&&d==29)\n\t\ty-=18,m=3,d=1;\n\telse\n\t\ty-=18;\n    scanf(\"%d%*c%d%*c%d\",&a,&b,&c);\n    if((legal(a,b,c)&&ok(a,b,c))||(legal(c,b,a)&&ok(c,b,a))||(legal(b,c,a)&&ok(b,c,a))||\n\t    (legal(a,c,b)&&ok(a,c,b))||(legal(c,a,b)&&ok(c,a,b))||(legal(b,a,c)&&ok(b,a,c)))\n\t\tputs(\"YES\\n\");\n\telse\n\t\tputs(\"NO\\n\");\n    return 0;\n}","1657":"#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    long long int n,m,s,i,j,ans,c=0,d=0,f,e;\r\n    scanf(\"%lld %lld %lld\",&n,&m,&s);\r\n    if(m\/s==0||m==s){\r\n        c=m;\r\n        e=m;\r\n    }\r\n    else if(m\/s<=2){\r\n        c=2;e=s+1;\r\n    }\r\n    else{\r\n        if(m%s==0){\r\n            c=(m\/s-1)+1;e=(m\/s-1)*s+1;\r\n        }\r\n        else {\r\n            c=(m\/s)+1;e=(m\/s)*s+1;\r\n        }\r\n    }\r\n    if(n\/s==0||n==s){\r\n        d=n;\r\n        f=n;\r\n    }\r\n    else if(n\/s<=2){\r\n        d=2;\r\n        f=s+1;\r\n    }\r\n    else{\r\n        if(n%s==0){\r\n            d=(n\/s-1)+1;f=(n\/s-1)*s+1;\r\n        }\r\n        else {\r\n            d=(n\/s)+1;f=(n\/s)*s+1;\r\n        }\r\n    }\r\n    ans=c*d*(m-e+1)*(n-f+1);\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}","1659":"#include <stdio.h>\nint main()\n{\n    char s[201], c;\n    int i=0;\n    scanf(\"%s\", s);\n    while(i<strlen(s))\n    {\n        if(s[i]=='.')\n        {\n            printf(\"0\");\n            i++;\n        }\n        else if(s[i]=='-' && s[i+1]=='.')\n        {\n            printf(\"1\");\n            i+=2;\n        }\n        else\n        {\n            printf(\"2\");\n            i+=2;\n        }\n    }\n    return 0;\n}","1661":"#include<stdio.h>\r\nint main()\r\n{int i,j,k,l=0,n,d;\r\nscanf(\"%d%d\",&n,&d);\r\nint a[n];\r\nfor(i=0;i<n;i++)\r\n{\r\n    scanf(\"%d\",&a[i]);\r\n\r\n}\r\nfor(i=0;i<n;i++)\r\n{\r\n    for(j=0;j<n;j++)\r\n    {\r\n        k=a[i]-a[j];\r\n\r\n        if(k<0)\r\n        {\r\n            k=k*-1;\r\n        }\r\n        if(k<=d)\r\n        {\r\n            l++;\r\n        }\r\n\r\n    }\r\n}\r\nprintf(\"%d\",l-n);\r\nreturn 0;\r\n\r\n}","1665":"int n,m,k,a,b,ans,h[1010],i;\nmain(){\n    while (~scanf(\"%d%d%d\",&n,&m,&k)){\n        memset(h,-1,sizeof(h));\n        for (i=0;i<n;i++) scanf(\"%d%d\",&a,&b),h[a]=(h[a]==-1?b:(h[a]<b?h[a]:b));\n        for (i=1;i<=m;i++) ans+=h[i];\n        printf(\"%d\\n\",ans<k?ans:k);\n    }\n}","1669":"#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int a[1001],i,n,x,y,k=0,m=0;\r\n    while(~scanf(\"%d\",&n))\r\n    {\r\n        for(i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            if(i==n)\r\n                k=fabs(a[i]-a[1]);\r\n            else\r\n                k=fabs(a[i+1]-a[i]);\r\n            if(k<m||i==1)\r\n            {\r\n                m=k;\r\n                x=i;\r\n                if(i==n)\r\n                    y=1;\r\n                else\r\n                    y=i+1;\r\n            }\r\n        }\r\n        printf(\"%d %d\\n\",x,y);\r\n    }\r\n    return 0;\r\n}","1673":"#include <stdio.h>\r\n#include <math.h>\r\nint compi(const void*a,const void*b)\r\n{\r\n    const int*p=a;\r\n    const int*q=b;\r\n    return *p-*q;\r\n}\r\n\r\nint main ()\r\n{\r\n    int n,m,price[100],i,j,sum=0;\r\n    scanf (\"%d %d\",&n,&m);\r\n    for (i=0; i<n; i++)\r\n        scanf (\"%d\",&price[i]);\r\n    qsort(price,n,sizeof(price[0]),compi);\r\n    for (i=0; i<m; i++)\r\n    {\r\n      if (price[i]<0)\r\n        sum-=price[i];\r\n    }\r\n    printf (\"%d\",sum);\r\n    return 0;\r\n}","1679":"#include <stdio.h>\n\n#define MAX 128\n\nint main() {\n    int i, n, pattern, last1;\n    char signal;\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    scanf(\"%d\", &n);\n    getchar();\n    last1 = -1;\n    pattern = -1;\n    for (i = 0; i < n; i++) {\n        signal = getchar();\n        if (signal == '1') {\n            if (last1 == -1)\n                last1 = i;\n            else {\n                if (pattern == -1)\n                    pattern = i - last1;\n                else if (pattern != (i - last1))\n                    break;\n                last1 = i;\n            }\n        }\n    }\n    printf(\"%s\\n\", (i == n) ? \"YES\" : \"NO\");\n    return 0;\n}","1683":"#include <stdio.h>\r\nint main()\r\n{\r\n    int a[1001], N, i, j, h = 1, maxh = 1, temp, sorted, count = 1;\r\n    scanf(\" %d\", &N);\r\n    for(i = 0; i < N; i++) scanf(\" %d\", &a[i]);\r\n    while(1) {\r\n        sorted = 1;\r\n        for(i = 0; i < N - 1; i++) {\r\n            if(a[i] > a[i + 1]) {\r\n                temp = a[i];\r\n                a[i] = a[i + 1];\r\n                a[i + 1] = temp;\r\n                sorted = 0;\r\n            }\r\n        }\r\n        if(sorted) break;\r\n    }\r\n    for(i = 0; i < N - 1; i++) {\r\n        for(j = i + 1; j < N; j++) {\r\n            if(a[j] == a[i]) {\r\n                h++;\r\n                i++;\r\n            }\r\n            else {\r\n                count++;\r\n                break;\r\n            }\r\n        }\r\n        if(h > maxh) maxh = h;\r\n        h = 1;\r\n    }\r\n    printf(\"%d %d\", maxh, count);\r\n    return 0;\r\n}","1691":"#include<stdio.h>\nint main(){\n\tint i,j,k,l,n,m,ai[1000],a,b,ans=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n-1;i++)\n\t\tscanf(\"%d\",&ai[i]);\n\tscanf(\"%d%d\",&a,&b);\n\tfor(i=a;i<b;i++)\n\t\tans += ai[i];\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}","1709":"#include<stdio.h>\n#include<stdlib.h>\nint main()\n{\n\tint n,j=1,k=1,s=2000,i;\n\tscanf(\"%d\",&n);\n\tint A[n+1];\n\tint B[101]={0};\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&A[i]);\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ts=s+1;\n\t\tif(A[i]==j)\n\t\t{\n\t\t\tj++;\n\t\t\tB[k]=s;\n\t\t\tk++;\n\t\t}\n\t}\n\tif(j==1)\n\t{\n\t\tprintf(\"0\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",j-1);\n\t\tfor(i=1;i<j-1;i++)\n\t\t{\n\t\t\tprintf(\"%d \",B[i]);\n\t\t}\n\t\t\tprintf(\"%d\",B[j-1]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}","1711":"#include<stdio.h>\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    if(n!=2&&n%2==0)\r\n    printf(\"yes\");\r\n    else\r\n    printf(\"no\");\r\n}","1725":"#include <stdio.h>\r\n\r\nint map[1001][1001];\r\n\r\nint main()\r\n{\r\n   int i,j,n,m,k,p,a,b,c,s,t,f=0;\r\n   scanf(\"%d%d%d\",&n,&m,&k);\r\n   if ((n^m)&1)\r\n      f=1;\r\n   t=n*m-n-m+1-k;\r\n   for (i=1;i<=k;i++)\r\n   {\r\n      scanf(\"%d%d%d\",&a,&b,&c);\r\n      map[a][b]=c;\r\n   }\r\n   scanf(\"%d\",&p);\r\n   for (i=1;i<=n;i++)\r\n   {\r\n      s=1;\r\n      for (j=1;j<=m;j++)\r\n         s*=map[i][j];\r\n      if (s==1)\r\n         f=1;\r\n      else if (s==-1)\r\n         t++;\r\n   }\r\n   for (i=1;i<=m;i++)\r\n   {\r\n      s=1;\r\n      for (j=1;j<=n;j++)\r\n         s*=map[j][i];\r\n      if (s==1)\r\n         f=1;\r\n      else if (s==-1)\r\n         t++;\r\n   }\r\n   if (f)\r\n      puts(\"0\");\r\n   else\r\n   {\r\n      s=1;\r\n      for (i=1;i<=t;i++)\r\n         s=s*2%p;\r\n      printf(\"%d\\n\",s);\r\n   }\r\n   return 0;\r\n}","1726":"#include <stdio.h>\n\nint main()\n{\n        int n,m,x;\n        scanf(\"%d%d%d\",&n,&m,&x);\n        n-=2*(x-1);\n        m-=2*(x-1);\n        if(n<1||m<1||x<1)\n        {\n                printf(\"0\\n\");\n                return 0;\n        }\n        int current=(2*n)+(2*m)-4;\n        current\/=2;\n        if(n==1)\n                current=(m+1)\/2;\n        if(m==1)\n                current=(n+1)\/2;\n        printf(\"%d\\n\",current);\n        return 0;\n}","1729":"#include<stdio.h>\r\n#include<string.h>\r\nmain()\r\n{\r\n\tchar str1[200],str2[200],*r;\r\n\tgets(str1);\r\n\tgets(str2);\r\n\tr=strrev(str1);\r\n\tif(strcmp(r,str2)==0)\r\n\t{\r\n\t\tprintf(\"YES\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tprintf(\"NO\");\r\n\t}\r\n}","1733":"#include<stdio.h>\r\nint main()\r\n{\r\n    char a[1000];\r\n    char b[1000];\r\n    char c[1000];\r\n    int n,i,j,k,l,p=1,q=0;\r\n    scanf(\"%d\",&n);\r\n    scanf(\"%s\",a);\r\n    strcpy(b,a);\r\n    n--;\r\n    while(n!=0)\r\n    {\r\n        scanf(\"%s\",&a);\r\n        l=strcmp(b,a);\r\n        if(l==0)\r\n        {\r\n            p++;\r\n\r\n        }\r\n        else\r\n        {\r\n            q++;\r\n            strcpy(c,a);\r\n        }\r\n        n--;\r\n    }\r\n    if(p>q){\r\n        printf(\"%s\",b);\r\n    }\r\n    else {\r\n        printf(\"%s\",c);\r\n    }\r\n}","1735":"#include<stdio.h>\nint count[52]={0}, count2[52]={0};\nchar s2[202]={0}, s1[202]={0};\nint main()\n\n{\n\tint lens1, lens2, a=0, i, j;\n\tfor(i=0; i<202; i++)\n\t{\n\t\tscanf(\"%c\", &s1[i]);\n\t\tif (s1[i]=='\\n')\n\t\t{\n\t\t\tlens1==i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=0; i<202; i++)\n\t{\n\t\tscanf(\"%c\", &s2[i]);\n\t\tif (s2[i]=='\\n')\n\t\t{\n\t\t\tlens2==i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(i=0; i<202; i++)\n\t{\n\t\tif ((s1[i]>='A' && s1[i]<='Z'))\n\t\t\tcount[s1[i]-'A']++;\n\t\tif ((s1[i]>='a' && s1[a]<='z'))\n\t\t\tcount[s1[i]-'a'+26]++;\n\t}\n\tfor(i=0; i<202; i++)\n\t{\n\t\tif ((s2[i]>='A' && s2[i]<='Z'))\n\t\t\tcount2[s2[i]-'A']++;\n\t\tif ((s2[i]>='a' && s2[a]<='z'))\n\t\t\tcount2[s2[i]-'a'+26]++;\n\t}\n\tfor(i=0; i<202; i++)\n\t\tcount[i]-=count2[i];\n\n\tfor(i=0; i<52; i++)\n\t\tif(count[i]<0)\n\t\t\ta++;\n\tif(a==0)\n\t\tprintf(\"YES\");\n\telse\n\t\tprintf(\"NO\");\n\treturn 0;\n}","1745":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        int i,a,t=0,k=0,j=0,m=0;\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d\",&a);\r\n            if(a%3==0)\r\n                t++;\r\n            else if(a%3==2)\r\n                j++;\r\n            else\r\n                k++;\r\n        }\r\n        for(; k!=0&&j!=0; k--, j--)\r\n            m+=1;\r\n        printf(\"%d\\n\",t\/2+m);\r\n    }\r\n    return 0;\r\n}","1760":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str[10000],c;\r\n    int k,a,b,case1,case2,i,main_case,len,x=0,y,z,rem1,rem2;\r\n    scanf(\"%d %d %d %s\",&k,&a,&b,str);\r\n    \/\/scanf(\"%s\",&str);\r\n    len=strlen(str);\r\n    rem1=len%k;\r\n    case1=len\/k+1;\r\n    case2=len\/k;\r\n    if(a*k>len || b*k<len)\r\n    {\r\n        printf(\"No solution\\n\");\r\n        \/\/return 0;\r\n    }\r\n    else\r\n    {\r\n        for(i=0; i<k; i++)\r\n        {\r\n            if(i<rem1)\r\n                main_case=case1;\r\n            else\r\n                main_case=case2;\r\n            while(main_case>0)\r\n            {\r\n                printf(\"%c\",str[x++]);\r\n                main_case--;\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}","1764":"#include<string.h>\r\n#include<stdio.h>\r\nint main()\r\n{int i,j,n,m,c=0;\r\n char s[101][21];\r\n  scanf(\"%d \",&n);\r\n  for(i=0;i<n;i++) \r\n {  gets(s[i]);\r\n    j=i;m=0;\r\n    while(j--)\r\n {    if((strcmp(s[i],s[j]))==0)\r\n        {m=1;break;}\r\n  }      if(m==0)\r\n        c++;\r\n }\r\nprintf(\"%d\",c);\r\n    return 0;}","1767":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\/\/186a\r\nint main()\r\n{\r\n   char s[11];\r\n   char c[12][11]={\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"};\r\n   scanf(\"%s\",s);\r\n   int d,i;\r\n   \/\/ gets(s);\r\n   scanf(\"%d\",&d);\r\n  \/\/ printf(\"d=%d\",d);\r\n  for(i=0;i<12;i++)\r\n   {\r\n     \/\/  printf(\"i=%d\\n\",i);\r\n    if(strcmp(s,c[i])==0)\r\n       {\r\n           i=i+d%12;\r\n        \/\/  printf(\"Success,i=%d\\n\",i);\r\n           while(i>=12)\r\n           {\r\n               i=i-12;\r\n           }\r\n        \/\/  printf(\"i=%d,in loop\\n\",i);\r\n           break;\r\n       }\r\n   }\r\n \/\/for(i=0;i<12;i++)\r\n   puts(c[i]);\r\n    return 0;\r\n\r\n\r\n}","1769":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int d=1, i, k, n;\r\n    scanf(\"%d\", &n);\r\n    for(i=1; i<=n-1;i++){\r\n        if((d+i)%n==0){\r\n            d = n;\r\n            printf(\"%d \", n);\r\n        }\r\n        else{\r\n            d = (d+i)%n;\r\n            printf(\"%d \", d);\r\n        }\r\n    }\r\n    return 0;\r\n}","1778":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,sum =0,i;\r\n    scanf(\"%d\", &n);\r\n\r\n    for(i=1;i<=34;i++){\r\n        if(n == i*(i+1)\/2){\r\n            sum = 1;\r\n            break;\r\n        }\r\n    }\r\n    if(sum==1) printf(\"YES\");\r\n    else printf(\"NO\");\r\n\r\n    return 0;\r\n}","1795":"#include<stdio.h>\n#include<string.h>\nint cou[100005],a[100005];\nint MAX(int a,int b)\n{\n    return a>b?a:b;\n}\nint main()\n{\n    int n,i,flag,mark,temp;\n\n    while(scanf(\"%d\",&n)>0)\n    {\n        memset(cou,0,sizeof(cou));\n        for(temp=i=0;i<n;i++)\n        {\n            scanf(\"%d\",a+i);\n            cou[a[i]]++;\n            temp=MAX(temp,a[i]);\n        }\n        mark=cou[1];\n        flag=1;\n        for(i=2;i<=temp;i++)\n        {\n            if(cou[i]>mark){ flag=0; break; }\n            mark=cou[i];\n        }\n        if(!flag) printf(\"-1\\n\");\n        else\n        {\n            printf(\"%d\\n\",cou[1]);\n            memset(cou,0,sizeof(cou));\n            for(i=0;i<n-1;i++)\n            {\n                cou[a[i]]++;\n                printf(\"%d \",cou[a[i]]);\n            }\n            cou[a[i]]++;\n            printf(\"%d\\n\",cou[a[i]]);\n        }\n    }\n}","1797":"#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\nint main()\r\n{\r\n    char input[102]; int l;\r\n    gets(input);\r\n    l = strlen(input);\r\n    while(l--) {\r\n        if(isalpha(input[l])) {\r\n            if(input[l] == 'A' || input[l] == 'E' || input[l] == 'I' || input[l] == 'O' || input[l] == 'U' || input[l] == 'Y' ||\r\n               input[l] == 'a' || input[l] == 'e' || input[l] == 'i' || input[l] == 'o' || input[l] == 'u' || input[l] == 'y') {\r\n                printf(\"YES\");\r\n                return 0;\r\n            }\r\n            else break;\r\n        }\r\n    }\r\n    printf(\"NO\");\r\n    return 0;\r\n}","1802":"#include<stdio.h>\r\n#include<math.h>\r\nint main ()\r\n{\r\n    int a,b,sum,max=0,p,x,y,ans,i,c;\r\n    scanf(\"%d %d\",&a,&b);\r\n    x=a;\r\n    y=b;\r\n    while(a)\r\n    {\r\n        p=a%10;\r\n        if(p>max)\r\n            max=p;\r\n        a=a\/10;\r\n    }\r\n    while(b)\r\n    {\r\n        p=b%10;\r\n        if(p>max)\r\n            max=p;\r\n        b=b\/10;\r\n    }\r\n    max++;\r\n    i=0;\r\n    a=0;\r\n    while(x)\r\n    {\r\n        c=x%10;\r\n        a=a+(c*ceil(pow(max,i)));\r\n        i++;\r\n        x=x\/10;\r\n    }\r\n    b=0;\r\n    i=0;\r\n    while(y)\r\n    {\r\n        c=y%10;\r\n        b=b+(c*ceil(pow(max,i)));\r\n        i++;\r\n        y=y\/10;\r\n    }\r\n    sum=a+b;\r\n    ans=ceil(log(sum+1)\/log(max));\r\n    printf(\"%d\\n\",ans);\r\n}","1804":"#include <stdio.h>\r\nint main()\r\n{\r\n\tint m,n, domino;\r\n\tscanf(\"%d %d\", &m, &n);\r\n\tdomino = (m*n)\/2;\r\n\tprintf(\"%d\\n\",domino);\r\nreturn 0;\r\n}","1842":"#include <stdio.h>\r\nint main()\r\n{\r\n    int n,a=0,b=0,c=0,x,i;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",&x);\r\n        if(x==1)a++;\r\n        else if(x==2)b++;\r\n        else  c++;\r\n    }\r\n    if(a>b&&a>c)printf(\"%d\",b+c);\r\n    else if(b>c&&b>a)printf(\"%d\",a+c);\r\n    else if(c>a&&c>b)printf(\"%d\",a+b);\r\n    else if(a==b&&b==c&&a==c) printf(\"%d\",a+b);\r\n    else if(a==b)printf(\"%d\",c+a);\r\n    else if(c==b)printf(\"%d\",a+b);\r\n    else if(a==c)printf(\"%d\",a+b);\r\n    else ;\r\n    return 0;\r\n}","1848":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\nint l,i,n,k=0;\r\nchar a[101],c[100][101],b[101];\r\ngets(a);\r\nstrcpy(b,a);\r\nscanf(\"%d\",&n);\r\nl=strlen(a);\r\nfor(i=0;i<n;i++)\r\n{\r\nscanf(\"%s\",c[i]);\r\nif(strncmp(c[i],a,l)==0)\r\n{\r\nif(k==0)\r\n{\r\nstrcpy(b,c[i]);\r\nk++;\r\n}\r\nif(strcmp(b,c[i])>0)\r\nstrcpy(b,c[i]);\r\n}\r\n}\r\nprintf(\"%s\",b);\r\n\r\nreturn(0);\r\n}","1850":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,i,j,k=0,l;\r\n    char s[101];\r\n    scanf(\"%d\",&n);\r\n    getchar();\r\n    for(i=1;i<=n;i++){\r\n        scanf(\"%s\",s);\r\n        if(s[0]>='0'&&s[0]<='9'){\r\n            if(strlen(s)==1) k++;\r\n            else if(strlen(s)==2&&s[0]=='1'&&s[1]!='9'&&s[1]!='8') k++;\r\n        }\r\n        else{\r\n            if(strcmp(s,\"ABSINTH\")==0||strcmp(s,\"BEER\")==0||strcmp(s,\"BRANDY\")==0||strcmp(s,\"CHAMPAGNE\")==0||strcmp(s,\"GIN\")==0||strcmp(s,\"RUM\")==0||strcmp(s,\"SAKE\")==0||strcmp(s,\"TEQUILA\")==0||strcmp(s,\"VODKA\")==0||strcmp(s,\"WHISKEY\")==0||strcmp(s,\"WINE\")==0){\r\n                k++;\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\",k);\r\n}","1854":"#include<stdio.h>\n#include<stdlib.h>\n#define modd 1000000007\nlong long fast_expo(long long a,long long b)\n{\n\tlong long res=1;\n\twhile(b>0)\n\t{\n\t\tif(b&1)\n\t\t\tres=(res*a)%modd;\n\t\ta=(a*a)%modd;\n\t\tb=b>>1;\n\t}\n\treturn res;\n}\nint main()\n{\n\tlong long fact[200001];\n\tint i,n,count=0;\n\tfact[0]=1;\n\tfor(i=1;i<200001;i++)\n\t\tfact[i]=(fact[i-1]*i)%modd;\n\twhile(scanf(\"%d\",&n)==1)\n\t{\n\t\tlong long ans=(fact[2*n-1]*((fast_expo(fact[n],modd-2)*fast_expo(fact[n-1],modd-2))%modd))%modd;\n\t\tans=(2*ans)-n;\n\t\tif(ans<0)\n\t\t\tprintf(\"%I64d\\n\",(ans+modd)%modd);\n\t\telse printf(\"%I64d\\n\",ans%modd);\n\t}\n\treturn 0;\n}","1855":"#include <stdio.h>\n\nint dist(int x, int y,int n)\n{\n    if(x==0) return y;\n    else if(x<n)\n    {\n        if (y==0) return n+n+n+n-x;\n        else return x+n;\n    }\n    else return n+n+n-y;\n}\nint main()\n{\n    int n,x1,y1,x2,y2,a,b,d;\n    scanf(\"%d %d %d %d %d\",&n,&x1,&y1,&x2,&y2);\n    a=dist(x1,y1,n);\n    b=dist(x2,y2,n);\n    if(a>b) d=a-b;\n    else d=b-a;\n    if((n+n-d)>0) printf(\"%d\",d);\n    else printf(\"%d\",n+n+n+n-d);\n    return 0;\n}","1858":"#include<stdio.h>\r\nint main(void)\r\n{\r\n    int trav, money, lcf;\r\n    scanf(\"%d\", &money);\r\n    printf(\"%d \", money);\r\n    for(trav = money; trav > 1;){\r\n    \tfor(lcf = 2; lcf <= trav; lcf++){\r\n    \t\tif(trav % lcf == 0){\r\n    \t\t\ttrav = trav \/ lcf;\r\n\t    \t\tbreak;\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d \", trav);\r\n\t}\r\n    return 0;\r\n}","1859":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char a[101]={0};\r\n    int i,j,k,l,m,n,o,flag=0;\r\n    scanf(\"%s\", a);\r\n    l=strlen(a);\r\n    for(i=0;i<l;i++)\r\n    {\r\n        if(a[i]=='h')\r\n        {\r\n            for(j=i+1;j<l;j++)\r\n            {\r\n                if(a[j]=='e')\r\n                {\r\n                    for(k=j+1;k<l;k++)\r\n                    {\r\n                        if(a[k]=='l')\r\n                        {\r\n                            for(m=k+1;m<l;m++)\r\n                            {\r\n                                if(a[m]=='l')\r\n                                {\r\n                                    for(n=m+1;n<l;n++)\r\n                                    {\r\n                                        if(a[n]=='o')\r\n                                            flag=1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(flag==0)\r\n        printf(\"NO\");\r\n    else printf(\"YES\");\r\n\r\n\r\n}","1871":"#include<stdio.h>\r\n#include<string.h>\r\nint main(){\r\n\tchar s[105];\r\n\tint l,i,b=0;\r\n\tscanf(\"%s\",s);\r\n\tl=strlen(s);\r\n\tfor(i=0;i<l;i++)\r\n\t\tif(s[i]<'a')\r\n\t\t\tb++;\t\t\r\n\tprintf(\"%s\",(b>l\/2)?strupr(s) : strlwr(s));\r\n}","1877":"#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,k,c;\r\n    scanf(\"%d%d%d%d\",&n,&m,&k,&c);\r\n    if((n+m>k&&m+k>n&&k+n>m)||(m+k>c&&k+c>m&&m+c>k)||(n+m>c&&m+c>n&&n+c>m)||(n+k>c&&k+c>n&&c+n>k))\r\n    {\r\n        printf(\"TRIANGLE\");\r\n        return 0;\r\n    }\r\n    else if((n+m==k||m+k==n||k+n==m)||(m+k==c||k+c==m||m+c==k)||(n+m==c||m+c==n||n+c==m)||(n+k==c||k+c==n||c+n==k))\r\n    {\r\n        printf(\"SEGMENT\");\r\n        return 0;\r\n    }\r\n    else\r\n    {\r\n        printf(\"IMPOSSIBLE\");\r\n        return 0;\r\n    }\r\n    return 0;\r\n}","1882":"#include <stdio.h>\r\nint n,m,i,left,right, temp;\r\nchar a[3],b[4],c[6],d[3];\r\nint main(){\r\n    scanf(\"%d %d\", &n,&m);\r\n    left=0 , right= n+1;\r\n    for(i=0;i<m;i++){\r\n        scanf(\" %s %s %s %s %d\", a,b,c,d,&temp);\r\n        if(c[0]== 'r') {\r\n            if(temp>left) left = temp;\r\n        }\r\n        else{\r\n            if(temp<right) right = temp;\r\n        }\r\n    }\r\n    if(right-left-1<=0) printf(\"-1\");\r\n    else printf(\"%d\", right-left-1);\r\n    return 0;\r\n}","1884":"#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int i;\r\n    char num1[1000],num2[1000];\r\n\r\n    scanf(\"%s %s\",num1,num2);\r\n    char ans[strlen(num1)];\r\n    for(i=0;i<strlen(num1);i++)\r\n    {\r\n        if(num1[i]!=num2[i])\r\n            ans[i]='1';\r\n        else\r\n            ans[i]='0';\r\n\r\n    }\r\n    ans[i]='\\0';\r\n    printf(\"%s\",ans);\r\n}","1886":"#include<stdio.h>\r\nint main()\r\n{\r\n    int gl,gr,bl,br,a,b,c1,c2,c3,c4;\r\n    while((scanf(\"%d%d%d%d\",&gl,&gr,&bl,&br))!=EOF)\r\n    {\r\n       if(bl%2==0)\r\n       {\r\n           a=bl\/2;\r\n       }\r\n       else\r\n       {\r\n           a=((int)(bl\/2))+1;\r\n       }\r\n\r\n       if(br%2==0)\r\n       {\r\n           b=br\/2;\r\n       }\r\n       else\r\n       {\r\n           b=((int)(br\/2))+1;\r\n       }\r\n\r\n       c1= (bl+1)>=gr;\r\n       c2= (gr+1)>=a;\r\n       c3= (br+1)>=gl;\r\n       c4= (gl+1)>=b;\r\n\r\n       if((c1==1 && c2==1) || (c3==1 && c4==1))\r\n       {\r\n           printf(\"YES\\n\");\r\n       }\r\n       else\r\n       {\r\n           printf(\"NO\\n\");\r\n       }\r\n    }\r\n    return 0;\r\n}","1902":"#include<stdio.h>\nint main(){\n\tint i,j,k,l,n,m,z[1000];\n\tchar c[100][100],s;\n\tscanf(\"%d\\n\",&n);\n\tfor(i=0;i<n;i++){\n\t\ts = getchar();\n\t\tj=0;\n\t\twhile(s != '\\n'){\n\t\t\tc[i][j] = s;\n\t\t\ts = getchar();\n\t\t\tj++;\n\t\t}\n\t\tz[i] = j;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(c[i][z[i]-1]=='t'){\n\t\t\tj=0;\n\t\t\twhile(c[i][j] != ' '){\n\t\t\t\tprintf(\"%c\",c[i][j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(c[i][z[i]-1]=='d' || c[i][z[i]-4]=='o'){\n\t\t\tj = 0;\n\t\t\twhile(c[i][j] != ' '){\n\t\t\t\tprintf(\"%c\",c[i][j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(c[i][z[i]-4] == ' ' && c[i][z[i]-1] == 'n'){\n\t\t\tj = 0;\n\t\t\twhile(c[i][j] != ' '){\n\t\t\t\tprintf(\"%c\",c[i][j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\tfor(i=0;i<n;i++){\n\t\tif(c[i][z[i]-2] == 'i' && c[i][z[i]-1] == 'n'){\n\t\t\tj = 0;\n\t\t\twhile(c[i][j] != ' '){\n\t\t\t\tprintf(\"%c\",c[i][j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}","1906":"# include <stdio.h>\r\nlong long x1,x2;\r\nint main (void)\r\n{\r\n    int a,b,c,d,e,f;\r\n    scanf(\"%d%d%d%d%d%d\",&a,&b,&c,&d,&e,&f);\r\n    x1=b*d*f;\r\n    x2=a*c*e;\r\n\r\n    if (c==0 && d>0)\r\n    {\r\n       printf(\"Ron\\n\");\r\n       return 0 ;         \r\n    }\r\n    if (a==0 && b && c && d )\r\n    {\r\n       printf(\"Ron\\n\");\r\n       return 0 ;         \r\n    }\r\n    if (x1==0)\r\n    {   \r\n       printf(\"Hermione\\n\");\r\n       \/\/system(\"pause\");\r\n       return 0 ;\r\n    }\r\n    if (x2==0)\r\n    {\r\n       printf(\"Ron\\n\");\r\n       \/\/system(\"pause\");\r\n       return 0 ;\r\n\r\n    }\r\n    if (x1>x2)\r\n       printf(\"Ron\\n\");\r\n    else\r\n        printf(\"Hermione\\n\");\r\n\r\n    return 0;\r\n}","1908":"#include<stdio.h>\nlong long int func(long long int a[],long long int n,long long int k)\n{\n\tlong long int p=1,ca;\n\ta[0]=a[0]*n;\n\tca=a[0]\/10;\n\ta[0]%=10;\n\twhile(p<k || ca)\n\t{\n\t\ta[p]=a[p]*n+ca;\n\t\tca=a[p]\/10;\n\t\ta[p]%=10;\n\t\tp++;\n\t}\n\tif(p>k)\n\t\treturn p;\n\treturn k;\n}\nint main()\n{\n\tlong long int k,ans[502]={0},j,n,i,l,a[52],c=0,arr[1000001]={0};\n\tfor(i=2;c<50;i++)\n\t\tif(arr[i]==0)\n\t\t{\n\t\t\tfor(j=2;i*j<=1000000;j++)\n\t\t\t\tarr[i*j]=1;\n\t\t\ta[c]=i;\n\t\t\tc++;\n\t\t}\n\tscanf(\"%lld\",&n);\n\tif(n==1 || n==2)\n\t\tprintf(\"-1\\n\");\n\telse\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=0;j<105;j++)\n\t\t\tans[j]=0;\n\t\tans[0]=1;\n\t\tk=1;\n\t\tfor(j=0;j<n-1;j++)\n\t\t{\n\t\t\/\/\tprintf(\"%lld\\n\",a[(i+j)%n]);\n\t\t\tk=func(ans,a[(i+j)%n],k);\n\t\t}\n\t\t\tfor(l=k-1;l>=0;l--)\n\t\t\t\tprintf(\"%lld\",ans[l]);\n\t\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}","1910":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <limits.h>\r\n\r\nvoid int_tipo(char [], char []);\r\n\r\nint main()\r\n{\r\n    char n[101];\r\n    char type[11];\r\n    scanf(\"%s\",&n);\r\n    int_tipo(n,type);\r\n    printf(\"%s\",type);\r\n    return 0;\r\n}\r\n\r\nvoid int_tipo(char strN[], char type[])\r\n{\r\n    long long int n;\r\n    int limite;\r\n    int largo;\r\n    n=strtoll(strN,NULL,10);\r\n    largo=strlen(strN);\r\n    if(strN[0]!='-' && strcmp(\"9223372036854775807\",strN)<0 && largo==19)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(strN[0]=='-' && strcmp(\"-9223372036854775808\",strN)<0 && largo==20)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(strN[0]=='-')\r\n    {\r\n        limite=20;\r\n    }\r\n    else\r\n    {\r\n        limite=19;\r\n    }\r\n    if(largo>limite)\r\n    {\r\n        strcpy(type,\"BigInteger\");\r\n        return;\r\n    }\r\n    if(n>=-128 && n<=127)\r\n    {\r\n        strcpy(type,\"byte\");\r\n        return;\r\n    }\r\n    if(n>=-32768 && n<=32767)\r\n    {\r\n        strcpy(type,\"short\");\r\n        return;\r\n    }\r\n    if(n>=-2147483648LL && n<=2147483647LL)\r\n    {\r\n        strcpy(type,\"int\");\r\n        return;\r\n    }\r\n    strcpy(type,\"long\");\r\n}","1939":"#include <stdio.h>\r\nint main ()\r\n{\r\n    int s[2000],i,n,x,y;\r\n    char c[2000];\r\n    scanf(\"%d\",&n);\r\n    scanf(\"%s\",&c);\r\n    for(i=0;i<n;i++) {\r\n        s[i]=1;\r\n    }\r\n    for(i=0;i<n-1;i++) {\r\n        if(c[i]=='L'){\r\n            if(s[i]>s[i+1]) {\r\n                continue;\r\n            }\r\n            else{\r\n                s[i]=s[i+1]+1;\r\n        }\r\n        }\r\n        else if(c[i]=='R') {\r\n            if(s[i+1]>s[i]) {\r\n                continue;\r\n            }\r\n            else{\r\n                s[i+1]=s[i]+1;\r\n            }\r\n        }\r\n        else if(c[i]=='='){\r\n            if(s[i]==s[i+1]) {\r\n                continue;\r\n            }\r\n            else{\r\n                s[i+1]=s[i];\r\n            }\r\n        }\r\n    }\r\n    for(i=n-1;i>=0;i--) {\r\n        if(c[i-1]=='L' && s[i]>=s[i-1]) {\r\n            s[i-1]=s[i]+1;\r\n            }\r\n            if(c[i-1]=='=' && s[i]!=s[i-1]) {\r\n                s[i-1]=s[i];\r\n            }\r\n        }\r\n    for(x=0;x<n;x++) {\r\n        printf(\"%d \",s[x]);\r\n    }\r\n    return 0;\r\n}","1943":"#include <stdio.h>\r\nint main ()\r\n{\r\n    int p1,p2,p3,p4,i=1,a,b,n,m[10],x,y,z,count=0,count1=0;\r\n    scanf(\"%d %d %d %d %d %d\",&m[1],&m[2],&m[3],&m[4],&a,&b);\r\n    for(x=a;x<=b;x++) {\r\n            count=0;\r\n    for(p1=1;p1<=4;p1++) {\r\n        for(p2=1;p2<=4;p2++) {\r\n            if(p1!=p2) {\r\n            for(p3=1;p3<=4;p3++) {\r\n                if(p2!=p3 && p1!=p3) {\r\n                for(p4=1;p4<=4;p4++) {\r\n                    if(p2!=p4 && p3!=p4 && p4!=p1) {\r\n                            y=(((x%m[p1])%m[p2])%m[p3])%m[p4];\r\n                    if(x==y) {\r\n                        count++;\r\n                    }\r\n                    if(count==7) {\r\n                        count1++;\r\n                        break;\r\n                    }\r\n                    }\r\n                }\r\n                }\r\n            }\r\n            }\r\n            }\r\n    }\r\n    }\r\n    printf(\"%d\",count1);\r\n    return 0;\r\n}","1947":"#include<stdio.h>\r\nint main()\r\n{\r\n    int i,n,x,y,z,s1=0,s2=0,s3=0;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        scanf(\"%d %d %d\",&x,&y,&z);\r\n        s1=s1+x;\r\n        s2=s2+y;\r\n        s3=s3+z;\r\n    }\r\n    if(s1==0&&s2==0&&s3==0)\r\n        printf(\"YES\");\r\n    else\r\n        printf(\"NO\");\r\n    return 0;\r\n}","1963":"#include <stdio.h>\r\n\r\n\/*long long pow(long long a)\r\n{\r\n    long long i,ans=1;\r\n    while(a>0)\r\n    {\r\n        ans*=2;\r\n        a--;\r\n    }\r\n    return ans;\r\n}*\/\r\nint main()\r\n{\r\n    long long a,b,c=1;\r\n    scanf(\"%I64d\",&a);\r\n    \/*if(a%2!=0)\r\n    {\r\n        printf(\"%I64d\",a*a);\r\n    }\r\n    else\r\n    {\r\n        b=a\/2;\r\n        if(b==1)\r\n            b=0;\r\n        while(b>0)\r\n        {\r\n            c*=3;\r\n            b--;\r\n        }\r\n        printf(\"%I64d\",c);\r\n    }*\/\r\n    b=a-1;\r\n    while(b>0)\r\n    {\r\n        c*=3;\r\n        c=c%1000003;\r\n        b--;\r\n    }\r\n    printf(\"%I64d\",c);\r\n    return 0;\r\n}","1965":"#include<stdio.h>\r\nmain()\r\n{\r\n int n,p,i;\r\n scanf(\"%d\",&n);\r\nfor(i=0;i<=n;i++)\r\n{\r\n char a[200];\r\n gets(a);\r\n p=strlen(a);\r\n if(p>10)\r\n printf(\"%c%d%c\\n\",a[0],p-2,a[p-1]);\r\n else\r\n puts(a);\r\n}\r\n}","1981":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int n;scanf(\"%d\",&n);\r\n    int i,p,m,a,b,c,d,e,max=-1000000000,cur,ans;\r\n    char s[n][25];\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%s%d%d%d%d%d%d%d\",s[i],&p,&m,&a,&b,&c,&d,&e);\r\n        cur=p*100-m*50+a+b+c+d+e;\r\n        if (cur>max) {ans=i; max=cur;}\r\n    }\r\n    printf(\"%s\",s[ans]);\r\n    return 0;\r\n}","1985":"#include<stdio.h>\r\n#include <stdlib.h>\r\n#include<math.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char a[20]; char b[20]; char c[20];\r\n    char a2[20]; char b2[20]; char c2[20];\r\n    int i;\r\n    scanf(\"%s\",a);\r\n    scanf(\"%s\",b);\r\n    int x=atoi(a)+atoi(b); \/\/x=a+b with zeros\r\n    itoa(x,c,10);\r\n    int y=0;\r\n    for(i=0;i<strlen(c);)\r\n    {\r\n        if(c[i]=='0')\r\n            i++;\r\n        else{\r\n            c2[y++]=c[i];\r\n            i++;  \/\/c2= c without zeros\r\n\r\n        }\r\n    }\r\n    int x1=atoi(c2); \/\/*************\r\n\r\n    y=0;\r\n    for(i=0;i<strlen(a);)\r\n    {\r\n        if(a[i]=='0')\r\n            i++;\r\n        else\r\n            {\r\n                a2[y++]=a[i];  \/\/a2= a without zeros\r\n                i++;\r\n            }\r\n\r\n    }\r\n    y=0;\r\n    for(i=0;i<strlen(b);)\r\n    {\r\n        if(b[i]=='0')\r\n            i++;\r\n        else\r\n            {\r\n                b2[y++]=b[i];    \/\/b2=b without zeros\r\n                i++;\r\n            }\r\n    }\r\n\r\n    int x2=atoi(a2)+atoi(b2);   \/\/x2= gam3hom without zeros\r\n    if(x2==x1)\r\n        printf(\"YES\");\r\n    else\r\n        printf(\"NO\");\r\n\r\n}","1988":"#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    long long n,x[100000],y[100000],sumx=0,sumy=0,ans=0,dorkar_nai,i;\r\n    scanf(\"%I64d\",&n);\r\n    for(i=0; i<n; i++)\r\n    {\r\n        scanf(\"%I64d %I64d\",&x[i],&y[i]);\r\n        ans+=(n-1)*(x[i]*x[i]+y[i]*y[i]);\r\n        sumx+=x[i];\r\n        sumy+=y[i];\r\n    }\r\n    for(i=0; i<n; i++)\r\n    {\r\n        sumx-=x[i];\r\n        sumy-=y[i];\/\/dorkar nai=present+ager gula\r\n        ans=ans-2*x[i]*sumx-2*y[i]*sumy; \/\/dorkar ase=porer gula, so porer gular shathe 2ab part subtract.\r\n    }\r\n    printf(\"%I64d\",ans);\r\n    return 0;\r\n}","1990":"#include<stdio.h>\r\nint main()\r\n{\r\nint t,a,b;\r\nscanf(\"%d\",&t);\r\nwhile(t--)\r\n{\r\nscanf(\"%d %d\",&a,&b);\r\nif(!b)\r\nprintf(\"1\\n\");\r\nelse if(4*b>a)\r\nprintf(\"%f\\n\",0.5+a\/(b*16.00000));\r\nelse if(4*b<=a)\r\nprintf(\"%f\\n\",1-b*1.0000\/a);\r\n}\r\nreturn 0;\r\n\r\n}","1992":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,r,i;\r\n    scanf(\"%d\",&n);\r\n    r=n%7;\r\n    n=n\/7;\r\n    for(i=0;i<n;i++){\r\n        printf(\"ROYGBIV\");\r\n    }\r\n    for(i=0;i<r;i++){\r\n        if(i==0)printf(\"G\");\r\n        else if(i==1)printf(\"B\");\r\n        else if(i==2)printf(\"I\");\r\n        else if(i==3)printf(\"V\");\r\n        else if(i==4)printf(\"G\");\r\n        else if(i==5)printf(\"B\");\r\n    }\r\n    return 0;\r\n}","1994":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    char ch1[110],ch2[110],ch3[110],i,fuck=0;\r\n    long long cou=0,coun=0,co=0;\r\n    gets(ch1);\r\n    gets(ch2);\r\n    gets(ch3);\r\n    for (i=0;i<strlen(ch1);i++)\r\n    {\r\n        if(ch1[i]=='a' || ch1[i]=='e' || ch1[i]=='i' || ch1[i]=='o' || ch1[i]=='u')\r\n            coun++;\r\n\r\n    }\r\n    \/\/printf(\"%lld\\n\",coun);\r\n    for (i=0;i<strlen(ch2);i++)\r\n    {\r\n        if(ch2[i]=='a' || ch2[i]=='e' || ch2[i]=='i' || ch2[i]=='o' || ch2[i]=='u')\r\n            cou++;\r\n\r\n    }\r\n    \/\/printf(\"%lld\\n\",cou);\r\n    for (i=0;i<strlen(ch3);i++)\r\n    {\r\n        if(ch3[i]=='a' || ch3[i]=='e' || ch3[i]=='i' || ch3[i]=='o' || ch3[i]=='u')\r\n            co++;\r\n\r\n    }\r\n    \/\/printf(\"%lld\\n\",co);\r\n    if(coun==5 && cou==7 && co==5)\r\n        printf(\"YES\");\r\n    else\r\n        printf(\"NO\");\r\n    return 0;\r\n}","1996":"#include<stdio.h>\r\nmain()\r\n{\r\n    int i,j,k,l=0,a,c,b,t=0;\r\n    scanf(\"%d%d\",&a,&b);\r\n    for(i=1;t==0;i++)\r\n    {\r\n        if(i%2!=0)\r\n        {\r\n            if(a>=2&&b>=2)\r\n            {\r\n                l=l+1;\r\n                a=a-2;b=b-2;\r\n            }\r\n            else if(a==1&&b>=12)\r\n            {\r\n                l=l+1;\r\n                a=a-1;b=b-12;\r\n            }\r\n            else if(a==0&&b>=22)\r\n            {\r\n                l=l+1;\r\n                b=b-22;\r\n            }\r\n            if(l==0)\r\n            {printf(\"Hanako\");\r\n            t=t+1;}\r\n        }\r\n        else\r\n        {\r\n            if(b>=22)\r\n            {\r\n                l=l+1;\r\n                b=b-22;\r\n            }\r\n            else if(a>=1&&b>=12)\r\n            {\r\n                l=l+1;\r\n                a=a-1;\r\n                b=b-12;\r\n            }\r\n            else if(a>=2&&b>=2)\r\n            {\r\n                l=l+1;\r\n                a=a-2;\r\n                b=b-2;\r\n            }\r\n            if(l==0)\r\n                {printf(\"Ciel\");\r\n                t=t+1;}\r\n        }\r\n        l=0;\r\n    }\r\n}","1998":"#include<stdio.h>\nlong long n,m,k,i,j,tmp;\nlong long s[100];\nlong long f[100][2][2];\nlong long fun(void)\n{\n    long long i,ans;\n    memset(f,0,sizeof(f));\n    f[0][0][0]=1;\n    for (i=0;i<n\/2;i++)\n    {\n        if ((s[i]==1||s[i]==-1)&&(s[n-i-1]==1||s[n-i-1]==-1))\n        {\n            f[i+1][0][1]+=f[i][0][1];\n            f[i+1][1][1]+=f[i][1][1];\n        }\n        if ((s[i]==1||s[i]==-1)&&(s[n-i-1]==0||s[n-i-1]==-1))\n        {\n            f[i+1][1][0]+=f[i][1][0];\n            f[i+1][1][1]+=f[i][1][1];\n        }\n        if ((s[i]==0||s[i]==-1)&&(s[n-i-1]==0||s[n-i-1]==-1))\n        {\n            f[i+1][0][1]+=f[i][0][1]+f[i][0][0];\n            f[i+1][1][1]+=f[i][1][1]+f[i][1][0];\n        }\n        if ((s[i]==0||s[i]==-1)&&(s[n-i-1]==1||s[n-i-1]==-1))\n        {\n            f[i+1][1][0]+=f[i][1][0]+f[i][0][0];\n            f[i+1][1][1]+=f[i][1][1]+f[i][0][1];\n        }\n    }\n    ans=f[n\/2][1][1];\n    if (n%2==1)\n    {\n        if (s[n\/2]==-1) ans=2*ans+2*f[n\/2][1][0]+f[n\/2][0][1];\n        else if (s[n\/2]==0) ans=ans+f[n\/2][1][0]+f[n\/2][0][1];\n        else ans=ans+f[n\/2][0][1];\n    }\n    else\n    {\n        ans=ans+f[n\/2][1][0]+f[n\/2][0][1];\n    }\n    for (i=0;i<n;i++) if (s[i]==1)\n    return ans;\n    return (ans-1);\n}\nmain()\n{\n    for (i=0;i<100;i++) s[i]=-1;\n    scanf(\"%lld%lld\",&n,&k);\n    tmp=fun();\n    if (tmp<k)\n    {\n        printf(\"-1\\n\");\n    }else\n    {\n        for (i=0;i<n;i++)\n        {\n            s[i]=0;\n            tmp=fun();\n            if (tmp<k)\n            {\n                k-=tmp;\n                s[i]=1;\n            }\n            printf(\"%d\",s[i]);\n        }\n        printf(\"\\n\");\n    }\n\n}","2000":"#include <stdio.h>\n#include <math.h>\n\nint isPrime(int n)\n{\n\tint i;\n\tfor (i = 2; i <= sqrt((double)n); i++)\n\t\tif (n%i == 0)\n\t\t\treturn 0;\n\treturn 1;\n}\n\nint nextPrime(int m)\n{\n\tint i;\n\n\tfor (i = m+1; i < 50; i++)\n\t\tif (isPrime(i))\n\t\t\treturn i;\n\treturn 1;\n}\nint\nmain()\n{\n\tint m, n;\n\n\twhile (scanf(\"%d %d\", &m, &n) != EOF)\n\t{\n\t\tif (n == nextPrime(m))\n\t\t\tprintf(\"YES\\n\");\n\t\telse\n\t\t\tprintf(\"NO\\n\");\n\t}\n\n\treturn 0;\n}","2004":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str[100],str1[100],str2[100];\r\n    double hh,mm,hh_angle,mm_angle,check=360;\r\n    scanf(\"%s\",str);\r\n    str1[0]=str[0];\r\n    str1[1]=str[1];\r\n    str2[0]=str[3];\r\n    str2[1]=str[4];\r\n    hh=atoi(str1);\r\n    mm=atoi(str2);\r\n    \/\/scanf(\"%lf %lf\",&hh,&mm);\r\n    hh_angle=(hh*60+mm)\/2;\r\n    mm_angle=6*mm;\r\n    if(hh_angle>=check)\r\n        hh_angle-=check;\r\n    printf(\"%lf %lf\",hh_angle,mm_angle);\r\n    return 0;\r\n}","2020":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n#define N 200002\r\ntypedef char tipoDato;\r\n\r\n\/\/definiciones de pila\r\ntypedef struct pila{\r\n    tipoDato ele[N];\r\n    int cima;\r\n}Pila;\r\n\r\ntipoDato quitarPila(Pila *p);\r\nint estaLLena(Pila *p);\r\nint esvacia(Pila *p);\r\nvoid crearPila(Pila *p);\r\nvoid insertPila(Pila *p, tipoDato x);\r\n\/\/fin definiciones de pila\r\n\r\n\r\n\r\nint main(){\r\nint i;\r\nchar *cadena = (char *)malloc((200001)*sizeof(char));\r\nscanf(\"%s\", cadena);\r\nint tam;\r\ntam = strlen(cadena);\r\n\r\nPila p;\r\ncrearPila(&p);\r\ninsertPila(&p, '7');\r\n\r\n\r\nfor(i = 0; i < tam; i++){\r\n    if(p.ele[p.cima] == cadena[i] ){\r\n        quitarPila(&p);\r\n    }else{\r\n        insertPila(&p, cadena[i]);\r\n    }\r\n}\r\nprintf(\"\\n\");\r\nfor(i = 1; i <= p.cima; i++){\r\n    printf(\"%c\", p.ele[i]);\r\n}\r\n\r\nreturn 0;\r\n}\r\n\r\n\r\n\/*implementacion de funciones de Pila*\/\r\nvoid insertPila(Pila *p, tipoDato x){\r\n    if(!estaLLena(p)){\r\n        p->cima = p->cima + 1;\r\n        p->ele[p->cima] = x;\r\n    }else{\r\n        printf(\"\\nPila llena..no se puede cargar elemento\");\r\n    }\r\n}\r\n\r\n\r\nvoid crearPila(Pila *p){\r\n    p->cima = -1;\r\n}\r\n\r\nint esvacia(Pila *p){\r\n    return (p->cima) == -1;\r\n}\r\n\r\nint estaLLena(Pila *p){\r\n    return (p->cima) == N-1;\r\n}\r\n\r\n\r\ntipoDato quitarPila(Pila *p){\r\n    tipoDato x;\r\n    if(!esvacia(p)){\r\n        x = p->ele[p->cima];\r\n        p->cima = p->cima - 1;\r\n    }else{\r\n        printf(\"\\nPila vacia...\");\r\n        x = -1;\r\n    }\r\n\r\n    return x;\r\n}\r\n\r\n\/*FIN implementacion de funciones de Pila*\/","2065":"#include<stdio.h>\nint main()\n{\n\tint i,n,j;\n\tchar students[5][15]={\"Sheldon\",\"Leonard\",\"Penny\",\"Rajesh\",\"Howard\"};\n\tscanf(\"%d\",&n);\n\twhile(n>5)\n\t{\n\t\tn=n\/2-2;\n\t}\n\tprintf(\"%s\",students[n-1]);\n\treturn 0;\n}","2073":"#include<stdio.h>\r\nint main()\r\n{\r\nlong long int n;\r\nscanf(\"%I64d\",&n);\r\nprintf(\"%I64d\",(3*n)\/2);\r\nreturn(0);}","2088":"#include<stdio.h>\r\nint main()\r\n\t{\r\n\tlong long int a,b,pro,das=0,mas;\r\n\tscanf(\"%I64d %I64d\",&a,&b);\r\n\tlong int d=0,m=0;\r\n\tpro=a*b;mas=b;\r\n\tif(a<b)\r\n\t\t{restart1:\r\n\t\tdas+=a;\r\n\t\trestart3:\r\n\t\tif(mas==das)\r\n\t\t\t{\r\n\t\t\tm++;\r\n\t\t\tgoto end;\r\n\t\t\t}\r\n\t\tif(mas>das)\r\n\t\t\t{\r\n\t\t\td++;goto restart1;\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\tm++;mas+=b;goto restart3;\r\n\t\t\t}\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\trestart2:\r\n\t\tdas+=a;\r\n\t\trestart4:\r\n\t\tif(mas==das)\r\n\t\t\t{\r\n\t\t\td++;goto end;\r\n\t\t\t}\r\n\t\tif(mas>das)\r\n\t\t\t{\r\n\t\t\td++;goto restart2;\r\n\t\t\t}\r\n\t\telse\r\n\t\t\t{\r\n\t\t\tm++;mas+=b;goto restart4;\r\n\t\t\t}\r\n\t\t}\r\n\tend:\r\n\tif(d>m)\r\n\t\t{\r\n\t\tprintf(\"Dasha\");\r\n\t\t}\r\n\telse if(m>d)\r\n\t\t{\r\n\t\tprintf(\"Masha\");\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\tprintf(\"Equal\");\r\n\t\t}\r\n\treturn(0);\r\n\t}","2089":"#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n\r\nchar a[40][40];\r\nchar b[500010];\r\nint main()\r\n{\r\n\tint n,m,x,i,j,k,t,q,r,temp;\r\n\twhile(scanf(\"%d%d%d\",&n,&m,&x)!=EOF)\r\n\t{\r\n\t\tr=0;\r\n\t\ttemp=0;\r\n\t\tint flag[30]={0},flags=0;\r\n\t\tfor(i=0;i<=n-1;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%s\",a[i]);\r\n\t\t\tfor(j=0;j<=m-1;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]=='S')\r\n\t\t\t\t{\r\n\t\t\t\t\tflags=1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tflag[a[i][j]-'a']=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<m;j++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j]=='S')\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(k=0;k<n;k++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor(t=0;t<m;t++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(a[k][t]!='S'&&((i-k)*(i-k)+(j-t)*(j-t))<=x*x)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tflag[a[k][t]-'a']=2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tscanf(\"%d\",&q);\r\n\t\tscanf(\"%s\",b);\r\n\t\tfor(i=0;i<=q-1;i++)\r\n\t\t{\r\n\t\t\tif(b[i]>='a'&&b[i]<='z'&&flag[b[i]-'a']==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\ttemp=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if(b[i]>='A'&&b[i]<='Z')\r\n\t\t\t{\r\n\t\t\t\tif(flags==0||flag[b[i]-'A']==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"-1\\n\");\r\n\t\t\t\t\ttemp=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if(flags==1&&flag[b[i]-'A']==1)\r\n\t\t\t\t{\r\n\t\t\t\t\t++r;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(temp==0)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\",r);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}","2091":"#include<stdio.h> \r\nint main(){ \r\n    int a,b,A,B; \r\n    scanf(\"%d%d\",&a,&b); \r\n    if(a>b){ \r\n    A=7-a; \r\n    } \r\n    else { \r\n    A=7-b; \r\n    } \r\n    if(A%6==0){\r\n        printf(\"%d\/%d\\n\",A\/6,1);\r\n        return 0;\r\n    }\r\n    if(A%3==0){ \r\n    printf(\"%d\/%d\\n\",A\/3,2);\r\n    return 0; \r\n    } \r\n    if(A%2==0){ \r\n    printf(\"%d\/%d\\n\",A\/2,3);\r\n    return 0; \r\n    }\r\n\r\n   printf(\"%d\/%d\\n\",A,6); \r\n   return 0; \r\n}","2093":"#include<stdio.h>\r\nlong long dp1[36][36][36],dp2[36][36][36],n,minh;\r\nlong long less(long long left,long long right,long long height)\r\n{long long i,ans=0,temp;\r\nif(left==right)\r\n{if(height<minh)\r\nreturn 1;\r\nelse return 0;}\r\nif(dp2[left][right][height]!=-1)\r\n    return dp2[left][right][height];\r\nfor(i=left;i<=right;i++)\r\n{if(i==left)\r\nans+=less(i+1,right,height+1);\r\nelse if(i==right)\r\nans+=less(left,i-1,height+1);\r\nelse\r\nans+=less(left,i-1,height+1)*less(i+1,right,height+1);\r\n\r\n\r\n\r\n}\r\ndp2[left][right][height]=ans;\r\nreturn ans;\r\n}\r\n\r\n\r\n\r\n\r\nlong long more(long long left,long long right,long long height)\r\n{long long i,ans=0,temp;\r\nif(right==left)\r\n{if(height>=minh)\r\nreturn 1;\r\nelse return 0;\r\n}\r\nif(right<left)return 0;\r\nif(dp1[left][right][height]!=-1)\r\nreturn dp1[left][right][height];\r\nfor(i=left;i<=right;i++)\r\n{if(i==left)\r\nans+=more(i+1,right,height+1);\r\nelse if(i==right)\r\nans+=more(left,i-1,height+1);\r\nelse{\r\ntemp=more(left,i-1,height+1)+less(left,i-1,height+1);\r\nans+=temp*more(i+1,right,height+1);\r\nans+=more(left,i-1,height+1)*less(i+1,right,height+1);\r\n}}\r\ndp1[left][right][height]=ans;\r\nreturn ans;\r\n\r\n}\r\nint main()\r\n{\r\nlong long i,j,k;\r\nfor(i=0;i<=35;i++)\r\nfor(j=0;j<=35;j++)\r\nfor(k=0;k<=35;k++)\r\n{dp1[i][j][k]=-1;\r\ndp2[i][j][k]=-1;}\r\nscanf(\"%I64d%I64d\",&n,&minh);\r\nprintf(\"%I64d\\n\",more(1,n,1));\r\nreturn 0;\r\n}","2102":"#include<stdio.h>\r\nint main()\r\n{\r\nint i,j,k,l,m,n,c=0;\r\nscanf(\"%d %d\",&n,&m);\r\nchar s[n][m+1];\r\nfor(i=0;i<n;i++)\r\nscanf(\"%s\",s[i]);\r\nfor(i=0;i<n;i++)\r\n{for(j=0;j<m;j++)\r\n{for(k=0,l=0;k<m||l<n;)\r\n{if(s[i][j]==s[i][k]&&k<m)\r\nc++;\r\nif(s[i][j]==s[l][j]&&l<n)\r\nc++;\r\nif(k<m)\r\nk++;\r\nif(l<n)\r\nl++;\r\n}\r\nif(c==2)\r\nprintf(\"%c\",s[i][j]);\r\nc=0;}}\r\nreturn(0);}","2104":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nchar s[10001];\r\nchar c[1000001];\r\nint a[26];\r\nint b[26];\r\nint p[26][10000];\r\nint d[26];\r\nint next[10000][26];\r\n\r\nint search(int pos, int type) {\r\n  int l = 0, r = d[type] - 1, m, ret = -1;\r\n  while (l <= r) {\r\n    m = (l + r) >> 1;\r\n    if (p[type][m] >= pos) {\r\n      ret = p[type][m];\r\n      r = m - 1;\r\n    }\r\n    else {\r\n      l = m + 1;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\nvoid func() {\r\n  int n = strlen(s), m = strlen(c), i, j, k, ans = -1;\r\n  memset(a, 0, sizeof(a));\r\n  memset(b, 0, sizeof(b));\r\n  for (i = j = 0; i < n && j < 26; i ++) {\r\n    if (a[s[i] - 'a'] == 0) {\r\n      a[s[i] - 'a'] = 1;       \/\/ 'a', not '0'.\r\n      j ++;\r\n    }\r\n  }\r\n  for (i = j = 0; i < m && j < 26; i ++) {\r\n    if (b[c[i] - 'a'] == 0) {\r\n      b[c[i] - 'a'] = 1;       \/\/ 'a', not '0'.\r\n      j ++;\r\n    }\r\n  }\r\n  for (i = 0; i < 26; i ++) {\r\n    if (a[i] == 0 && b[i] == 1) {\r\n      printf(\"-1\\n\");\r\n      return;\r\n    }\r\n  }\r\n  memset(d, 0, sizeof(d));\r\n  for (i = 0; i < n; i ++) {\r\n    p[s[i] - 'a'][d[s[i] - 'a'] ++] = i;\r\n  }\r\n  for (i = 0; i < n; i ++) {\r\n    for (j = 0; j < 26; j ++) {\r\n      k = search(i, j);\r\n      next[i][j] = k;\r\n    }\r\n  }\r\n  i = j = ans = 0;\r\n  while (i < m) {\r\n    j = next[j][c[i] - 'a'];\r\n    if (j == -1) {\r\n      j = p[c[i] - 'a'][0];\r\n      ans ++;\r\n    }\r\n    j ++;\r\n    i ++;\r\n    if (i == m) {\r\n      break;\r\n    }\r\n    if (j == n) {\r\n      j = 0;\r\n      ans ++;\r\n    }\r\n  }\r\n  printf(\"%d\\n\", ans + 1);\r\n}\r\n\r\nint main() {\r\n  while (scanf(\"%s%s\", s, c) == 2) {\r\n    func();\r\n  }\r\n  return 0;\r\n}","2105":"#include<stdio.h>\r\n#include<stdlib.h>\r\ntypedef struct Nodo{int pos;\r\n                    struct Nodo *sgte;\r\n                    }Nodo;\r\nint f[100010];\r\nint r[100010];\r\nint main(){\r\n    int i,j,n,m;\r\n    Nodo *aux;\r\n    Nodo *H=(Nodo *)calloc(1,sizeof(Nodo));\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++){\r\n        scanf(\"%d\",f+i);\r\n    }\r\n    H->pos=n-1;\r\n    H->sgte=NULL;\r\n    for(i=n-1;i>=0;i--){\r\n        if(f[i]>f[H->pos]){\r\n            aux=H;\r\n            while(aux!=NULL && f[i]>f[aux->pos]){\r\n                r[i]=aux->pos-i-1;\r\n                aux=aux->sgte;\r\n            }\r\n        }else{\r\n            r[i]=-1;\r\n            if(f[i]<f[H->pos]){\r\n                aux=(Nodo *)calloc(1,sizeof(Nodo));\r\n                aux->pos=i;\r\n                aux->sgte=H;\r\n                H=aux;\r\n            }\r\n        }\r\n    }\r\n    aux=H;\r\n    for(i=0;i<n;i++){\r\n        printf(\"%d \",r[i]);\r\n    }\r\n    return 0;\r\n}","2130":"#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    int n,m,i;\r\n    scanf(\"%d %d\",&n,&m);\r\n    int c=(n*(n+1))\/2;\r\n    if((double)m\/(double)c>1)m=m%c;\r\n    for(i=n;i>=1;i--){\r\n        if((i*(i+1))\/2<=m){\r\n            break;\r\n        }\r\n    }\r\n    printf(\"%d\",m-(i*(i+1))\/2);\r\n    return 0;\r\n}","2159":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#define P 10    \/\/numeros\r\n#define Q 81 \/\/cantidad del codigo\r\nint main()\r\n{\r\n    char codigo[Q],aux[11],a[11],aux1[11];\r\n    char* encriptado[P];\r\n    char* codigo1[8];\r\n    int c=0,i,j=0,b,k=0,t=0,r=10;\r\n    int pass[8];\r\n    scanf(\"%s\",codigo);\r\n    c=strlen(codigo);\r\n    while (c!=Q-1)   \/\/validacion de que se ingresen 80 caracteres\r\n    {\r\n        scanf(\"%s\",codigo);\r\n        c=strlen(codigo);\r\n    }\r\n    for (i=0;i<8;i++)\/\/recorro mi codigo para dividirlo de a 10 y ponerlo en codigo1\r\n    {\r\n        codigo1[i]=(char*)malloc(11*sizeof(char));\r\n        for(k=t;k<r;k++)\r\n        {\r\n            aux1[j]=codigo[k];  \/\/paso en aux1 10 caracteres(caracter a caracter) del codigo\r\n            j++;\r\n        }\r\n        t+=10;  \/\/incremento a 10 para que el siguiente recorrido sea desde 10 caracteres mas\r\n        r+=10;  \/\/incremento a 10 para que el siguiente recorrido sea hasta 10 caracteres mas\r\n        j=0;\r\n        aux1[10]='\\0';  \/\/agrego el caracter de terminacion nulo a mi cadena\r\n        strcpy(codigo1[i],aux1);    \/\/copio en el vector codigo1\r\n    }\r\n    for (i=0;i<P;i++)   \/\/ingreso el codigo de encriptacion correspondiente a cada numero\r\n    {\r\n        encriptado[i]=(char*)malloc(11*sizeof(char));\r\n        scanf(\"%s\",aux);\r\n        strcpy(encriptado[i],aux); \/\/copio el codifo a cada posicion del vector encriptado(el indice representa el numero en decimal)\r\n    }\r\n    for (j=0;j<8;j++)\r\n    {\r\n       for (i=0;i<P;i++)    \/\/comparo cada codigo\r\n       {\r\n           b=strcmp(codigo1[j],encriptado[i]);  \/\/comparo cada codigo con el vector de encriptado\r\n           if (b==0)    \/\/si es 0 son iguales\r\n           {\r\n               pass[j]=i;   \/\/guardo en mi vector final el indice(ya que este representa el numero decimal)\r\n               i=P; \/\/para que no continue con el desde una vez que encuentre el equivalente\r\n           }\r\n       }\r\n    }\r\n    for(i=0;i<8;i++)\r\n    {\r\n        printf(\"%d\",pass[i]);\r\n    }\r\n    return 0;\r\n}","2210":"#include <stdio.h>\r\n#include <string.h>\r\nint main(void)\r\n{\r\n    char str1[8]=\"0000000\",str2[8]=\"1111111\";\r\n    char str3[100];\r\n    gets(str3);\r\n    if(strstr(str3,str1)||strstr(str3,str2)){\r\n        printf(\"YES\");\r\n    }\r\n    else\r\n        printf(\"NO\");\r\n\r\n    return 0;\r\n}","2232":"#include <stdio.h>\r\n\r\nconst char *names[50] = {\"Lol\", \"Kek\", \"Samuel\", \"Lom\", \"Lon\", \"Loo\", \"Lop\", \"Loq\", \"Lor\", \"Los\", \"Lot\", \"Lou\", \"Lov\", \"Low\", \"Lox\", \"Loy\", \"Loz\", \"Lpa\", \"Lpb\", \"Lpc\", \"Lpd\", \"Lpe\", \"Lpf\", \"Lpg\", \"Lph\", \"Lpi\", \"Lpj\", \"Lpk\", \"Lpl\", \"Lpm\", \"Lpn\", \"Lpo\", \"Lpp\", \"Lpq\", \"Lpr\", \"Lps\", \"Lpt\", \"Lpu\", \"Lpv\", \"Lpw\", \"Lpx\", \"Lpy\", \"Lpz\", \"Lqa\", \"Lqb\", \"Lqc\", \"Lqd\", \"Lqe\", \"Lqf\", \"Lqg\"};\r\n\r\nint main() {\r\n    int n, k;\r\n    int soldiers[50];\r\n    int not_used;\r\n    scanf(\"%d %d\", &n, &k);\r\n    char yn[4];\r\n    scanf(\"%s\", yn);\r\n    char prev;\r\n    for (int i = 0; i < k - 1; ++i)\r\n        soldiers[i] = i;\r\n    if (yn[0] == 'Y') {\r\n        soldiers[k-1] = k - 1;\r\n        prev = 1;\r\n    }\r\n    else {\r\n        soldiers[k-1] = 0;\r\n        not_used = k - 1;\r\n        prev = 0;\r\n    }\r\n    for (int i = k; i < n; ++i) {\r\n        scanf(\"%s\", yn);\r\n        if (yn[0] == 'Y') {\r\n            if (prev)\r\n                soldiers[i] = soldiers[i-k];\r\n            else {\r\n                soldiers[i] = not_used;\r\n                prev = 1;\r\n            }\r\n        }\r\n        else {\r\n            soldiers[i] = soldiers[i-k+1];\r\n            if (prev) {\r\n                not_used = soldiers[i-k];\r\n                prev = 0;\r\n            }\r\n        }\r\n    }\r\n    printf(\"%s\", names[soldiers[0]]);\r\n    for (int i = 1; i < n; ++i)\r\n        printf(\" %s\", names[soldiers[i]]);\r\n    putchar('\\n');\r\n    return 0;\r\n}","2233":"#include<stdio.h>\r\nint main(){\r\n\tint num,t;\r\n\twhile(~scanf(\"%d\",&num)){\r\n\t\tt=num\/2;\r\n\t\tif(num%2!=0){\r\n\t\t\tprintf(\"7\");\r\n\t\t\tt--;\r\n\t\t\twhile(t--){\r\n\t\t\tprintf(\"1\");\r\n\t\t}\r\n\t\t}else{\r\n\t\twhile(t--){\r\n\t\t\tprintf(\"1\");\r\n\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}","2235":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nint main(){int n, j;\r\r\n\tchar v[2][11], m[2][11];\r\r\n\tscanf(\"%s\", v[0]);\r\r\n\tscanf(\"%s\", v[1]);\r\r\n\tprintf(\"%s %s \\n\", v[0], v[1]);\r\r\n\tscanf(\"%d\", &n);\r\r\n\tfor(j=0; j<n; j++){\r\r\n\t\tscanf(\"%s\", m[0]);\r\r\n\t\tscanf(\"%s\", m[1]);\r\r\n\t\tif(strcmp(m[0], v[0])==0){\r\r\n\t\t\tstrcpy(v[0],m[1]);\r\r\n\t\t\tprintf(\"%s %s\\n\", v[1], m[1]);\r\r\n\t\t\t\r\r\n\t\t}\r\r\n\t\telse{\r\r\n\t\t\tstrcpy(v[1],m[1]);\r\r\n\t\t\tprintf(\"%s %s\\n\", v[0], m[1]);\r\r\n\t\t}\r\r\n\t}\r\r\n\treturn 0;\r\r\n}","2237":"#include<stdio.h>\r\n#include<math.h>\r\n#include<string.h>\r\n#define maxn 1005\r\nint main()\r\n{\r\n    int N;\r\n    scanf(\"%d\",&N);\r\n    char str_S[maxn];\r\n    char str_M[maxn];\r\n    memset(str_S,'\\0',sizeof(str_S));\r\n    memset(str_M,'\\0',sizeof(str_M));\r\n    scanf(\"%s\",str_S);\r\n    scanf(\"%s\",str_M);\r\n    int num_S[10]={0};\r\n    int num_M[10]={0};\r\n    int i,j;\r\n    for(i=0;i<N;i++)\r\n    {\r\n        num_S[str_S[i]-'0']++;\r\n        num_M[str_M[i]-'0']++;\r\n    }\r\n    int min_M=0;\r\n    for(i=0;i<=9;i++)\r\n    {\r\n        if(num_M[i]>0)\r\n        {\r\n            for(j=i;j>=0&&num_M[i]>0;)\r\n            {\r\n                if(num_S[j]==0)\r\n                    j--;\r\n                else\r\n                {\r\n                    min_M++;\/\/\u8fd9\u4e2a\u6570\u4e0d\u7528\u62c5\u5fc3\u88ab\u6253\r\n                    num_M[i]--;\r\n                    num_S[j]--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    min_M=N-min_M;\r\n\r\n    memset(num_S,0,sizeof(num_S));\r\n    memset(num_M,0,sizeof(num_M));\r\n    for(i=0;i<N;i++)\r\n    {\r\n        num_S[str_S[i]-'0']++;\r\n        num_M[str_M[i]-'0']++;\r\n    }\r\n    int max_S=0;\r\n    for(i=0;i<=9;i++)\r\n    {\r\n        if(num_S[i]>0)\r\n        {\r\n            for(j=i+1;j<=9&&num_S[i]>0;)\r\n            {\r\n                if(num_M[j]==0)\r\n                    j++;\r\n                else\r\n                {\r\n                    max_S++;\r\n                    num_S[i]--;\r\n                    num_M[j]--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\",min_M);\r\n    printf(\"%d\\n\",max_S);\r\n    return 0;\r\n}","2240":"#include <stdio.h>\r\r\n#include <string.h>\r\r\n\r\r\n\r\r\nchar t[200010];\r\r\nchar p[200010];\r\r\nint inx[200010];\r\r\nint c[200010];\r\r\n\r\r\nint check(int x,int y)\r\r\n{\r\r\n    int i, j = 1;\r\r\n    for(i = 1; i <= x; i++)\r\r\n    {\r\r\n        if(inx[i])continue;\r\r\n        if(t[i] == p[j])\r\r\n        {\r\r\n            j++;\r\r\n            if(j > y)\r\r\n                return 1;\r\r\n        }\r\r\n    }\r\r\n    return 0;\r\r\n}\r\r\nint main()\r\r\n{\r\r\n    scanf(\"%s%s\",t+1,p+1);\r\r\n    int x = strlen(t+1);\r\r\n    int y = strlen(p+1);\r\r\n    int i;\r\r\n    for(i = 1; i <= x; i++)\r\r\n        scanf(\"%d\", &c[i]);\r\r\n    int l = 0;\r\r\n    int r = x, ans = -1;\r\r\n    while(l <= r){\r\r\n        int mid = (l + r) >>1;\r\r\n        for(i = 1; i <= mid; i++)\r\r\n            inx[c[i]] = 1;\r\r\n        for(i = mid+1; i <= x; i++)\r\r\n            inx[c[i]] = 0;\r\r\n        if(check(x,y)){\r\r\n            l = mid + 1;\r\r\n            ans = mid;\r\r\n        }\r\r\n        else{\r\r\n            r = mid - 1;\r\r\n        }\r\r\n    }\r\r\n    printf(\"%d\", ans);\r\r\n    return 0;\r\r\n}","2242":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n#include <string.h>\r\r\n#define N 200001\r\r\n\/*\r\r\nString Game\r\r\nhttp:\/\/codeforces.com\/problemset\/problem\/779\/D\r\r\nejemplo\r\r\n\r\r\ninput\r\r\nababcba\r\r\nabb\r\r\n5 3 4 1 7 6 2\r\r\noutput\r\r\n3\r\r\n*\/\r\r\n\r\r\nint A[N],b,c,i,respuesta=0,tope=0;\r\r\nchar B[N],C[N-1];\r\r\n\tchar tmp[N];\r\r\n\r\r\nint main(){\r\r\n\tscanf(\"%s %s\",B,C);\r\r\n\tb=strlen(B);\r\r\n\tc=strlen(C);\r\r\n\ttope=b;\r\r\n\tfor(i=0;i<b;i++){\r\r\n\t\tscanf(\"%d\",&A[i]);\r\r\n\t}\r\r\n\tcheck(0,b\/2);\r\r\n\tprintf(\"%d\", respuesta);\r\r\n\t\/\/printf(\"%d\",b\/2);\r\r\n\t\/\/printf(\"%d, %d\",b,c);\r\r\n\t\/\/printf(\"%c\\n\",tmp[0]);\r\r\n\t\/\/printf(\"c:%d\",c);\r\r\n\treturn 0;\r\r\n}\r\r\n\r\r\nint check(int inicial, int final){\r\r\n\tint ch=0,k,j=0;\r\r\n\tstrcpy(tmp,B);\r\r\n\tfor(i=inicial;i<final;i++){\r\r\n\t\tB[A[i]-1]='.';\r\r\n\t}\r\r\n\tfor(k=0;k<b;k++){\r\r\n\t\tif(B[k]==C[j]){\r\r\n\t\t\tj++;\r\r\n\t\t}\r\r\n\t}\r\r\n\tif(j==c){\r\r\n\t\trespuesta=final;\r\r\n\t\tif(tope==final){\r\r\n\t\t\treturn 0;\r\r\n\t\t}\r\r\n\t\tif((tope-final)>1){\r\r\n\t\t\tcheck(final,final+((tope-final)\/2));\r\r\n\t\t}else{\r\r\n\t\t\tcheck(final,tope);\r\r\n\t\t}\r\r\n\t}\r\r\n\telse{\r\r\n\t\ttope=final;\r\r\n\t\tstrcpy(B,tmp);\r\r\n\t\tif((final-inicial)>1){\r\r\n\t\t\tcheck(inicial,final\/2);\r\r\n\t\t}else{\r\r\n\t\t\treturn 0;\r\r\n\t\t}\r\r\n\t}\r\r\n}","2244":"#include<stdio.h>\r\r\n#include<string.h>\r\r\nint sock[100010]={0};\r\r\nint main()\r\r\n{\r\r\n\tint i,n;\r\r\n\tint t,ans=0,k=0;\r\r\n\tscanf(\"%d\",&n);\r\r\n\tfor(i=0; i<2*n; i++)\r\r\n\t{\r\r\n\t\tscanf(\"%d\",&t);\r\r\n\t\tif(sock[t]==0)\r\r\n\t\t{\r\r\n\t\t\tsock[t]=1;\r\r\n\t\t\tk++;\r\r\n\t\t}\r\r\n\t\telse\r\r\n\t\t\tk-=1;\r\r\n\t\tif(k>ans)\r\r\n\t\t\tans=k;\r\r\n\t}\r\r\n\tprintf(\"%d\",ans);\r\r\n\treturn 0;\r\r\n}","2246":"#include<stdio.h>\r\r\n\r\r\nint main(void)\r\r\n{\r\r\n\tint mas[30] = {4, 22, 27, 58, 85, 94, 121, 166, 202, 265, 274, 319, 346, 355, 378, 382, 391, 438, 454, 483, 517, 526, 535, 562, 576, 588, 627, 634, 636, 645};\r\r\n\tint i;\r\r\n\tscanf(\"%d\", &i);\r\r\n\tprintf(\"%d\", mas[i - 1]);\r\r\n}","2248":"#include \"stdio.h\"\r\n#include \"math.h\"\r\nint main()\r\n{\r\n\t__int64 n, m;\r\n\twhile (scanf(\"%I64d%I64d\", &n, &m) != EOF)\r\n\t{\r\n\t\tif (n > m)\r\n\t\t{\r\n\t\t\t__int64 k = (__int64)sqrt(2 * n - 2 * m);\r\n\t\t\tif (k*k + k < 2 * n - 2 * m)\r\n\t\t\t\tk++;\r\n\t\t\tprintf(\"%I64d\\n\", k + m);\r\n\t\t}\r\n\t\telse\r\n\t\t\tprintf(\"%I64d\\n\", n);\r\n\t}\r\n\treturn 0;\r\n}","2250":"#include<stdio.h>\r\r\nint main()\r\r\n{int a,b,c,d,i,j;\r\r\nscanf(\"%d%d%d%d\",&a,&b,&c,&d);\r\r\nfor(i=0;i<=100;i++)\r\r\nfor(j=0;j<=100;j++)\r\r\nif(b+i*a==d+j*c)\r\r\n{printf(\"%d\\n\",(b+i*a));return 0;}\r\r\nif(i==101)\r\r\nprintf(\"-1\\n\");\r\r\n    return 0;\r\r\n}","2252":"#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int a,b,n;\r\n    while(~scanf(\"%d%d\",&a,&b))\r\n    {\r\n        n=0;\r\n        while(a<=b)\r\n        {\r\n            a*=3;\r\n            b*=2;\r\n            n++;\r\n        }\r\n        printf(\"%d\\n\",n);\r\n    }\r\n    return 0;\r\n}","2269":"#include<stdio.h>\r\nint main(){\r\n\tint a , b , c;\r\n\tint n;\r\n\tint num;\r\n\tint sum = 0;\r\n\t\r\n\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--){\r\n\t\tscanf(\"%d\",&num);\r\n\t\tif(num > b && num < c){\r\n\t\t\tsum++;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",sum);\r\n\treturn 0;\r\n\t\r\n}","2271":"#include <stdio.h>\r\r\n#define MOD 1000000007LL\r\r\n\r\r\nint n;\r\r\nint l,r;\r\r\nint a[300001];\r\r\nint b[300001];\r\r\n\r\r\nint main(void){\r\r\n\tscanf(\"%d%d%d\",&n,&l,&r);\r\r\n\tl--;\r\r\n\tint i;\r\r\n\tfor(i=0;i<n;i++){\r\r\n\t\tscanf(\"%d\",&a[i]);\r\r\n\t}\r\r\n\tfor(i=0;i<n;i++){\r\r\n\t\tscanf(\"%d\",&b[i]);\r\r\n\t}\r\r\n\tint flag=0;\r\r\n\tfor(i=0;i<l;i++){\r\r\n\t\tif(a[i]!=b[i])flag=1;\r\r\n\t}\r\r\n\tfor(i=r;i<n;i++){\r\r\n\t\tif(a[i]!=b[i])flag=1;\r\r\n\t}\r\r\n\tprintf(\"%s\\n\",flag?\"LIE\":\"TRUTH\");\r\r\n\treturn 0;\r\r\n}","2272":"\/*Md: Shamim Imtiaz*\/\r\r\n\r\r\n#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int i,j,k,l,m,n,c,d,p,q;\r\r\n    int cs=0,tc,t=1,flg,f,sm;\r\r\n    \/\/string s,s1,s2;\r\r\n    \/\/while(cin >> n)\r\r\n    scanf(\"%d\",&n);\r\r\n    {\r\r\n        p=n\/2;\r\r\n        q=n%2;\r\r\n        if(q==0)\r\r\n        {\r\r\n            for(i=1;i<=p;i++)\r\r\n            {\r\r\n                printf(\"1\");\r\r\n            }\r\r\n            printf(\"\\n\");\r\r\n        }\r\r\n        else if(q==1)\r\r\n        {\r\r\n            printf(\"7\");\r\r\n            for(i=1;i<p;i++)\r\r\n            {\r\r\n                printf(\"1\");\r\r\n            }\r\r\n            printf(\"\\n\");\r\r\n        }\r\r\n\/\/        else\r\r\n\/\/        {\r\r\n\/\/            for(i=1;i<=p;i++)\r\r\n\/\/            {\r\r\n\/\/                printf(\"7\");\r\r\n\/\/            }\r\r\n\/\/            printf(\"1\\n\");\r\r\n\/\/        }\r\r\n    }\r\r\n    return 0;\r\r\n}","2274":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n#define ll long long int\r\r\nint main()\r\r\n{\r\r\n    int len,cnt,i;\r\r\n    char str[1103030];\r\r\n    scanf(\"%d\",&len);\r\r\n    getchar();\r\r\n    gets(str);\r\r\n    for(i=0;i<len;i++)\r\r\n    {\r\r\n        if(str[i]!='a' && str[i]!='e' && str[i]!='i' && str[i]!='o' && str[i]!='u' &&str[i]!='y')\r\r\n            printf(\"%c\",str[i]);\r\r\n        else\r\r\n        {\r\r\n            cnt = 1;\r\r\n            while(str[i]==str[i+1] && i<len)\r\r\n            {\r\r\n                cnt++;\r\r\n                i++;\r\r\n            }\r\r\n            if(cnt==2 && (str[i]=='e' || str[i]=='o'))\r\r\n               printf(\"%c%c\",str[i],str[i]);\r\r\n            else\r\r\n                printf(\"%c\",str[i]);\r\r\n        }\r\r\n    }\r\r\n    printf(\"\\n\");\r\r\n    return 0;\r\r\n}","2278":"#include <stdio.h>\r\r\n \r\r\nint isHole[1000005];\r\r\n \r\r\nint main(){\r\r\nint n, m, k;\r\r\nscanf(\"%d%d%d\", &n, &m, &k);\r\r\nfor(int i=0; i<m; i++){\r\r\nint h;\r\r\nscanf(\"%d\", &h);\r\r\nisHole[h] = 1;\r\r\n}\r\r\nint pos = 1;\r\r\nfor(int i=0; i<k; i++){\r\r\nint u, v;\r\r\nscanf(\"%d%d\", &u, &v);\r\r\nif(u == pos && (!isHole[u])) pos = v;\r\r\nelse if(v == pos && (!isHole[v])) pos = u;\r\r\n}\r\r\nprintf(\"%d\", pos);\r\r\nreturn 0;\r\r\n}","2281":"#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    int i,n,flag;\r\n    char a[16];\r\n    while(scanf(\"%s\",a)!=EOF)\r\n    {\r\n        n=strlen(a),flag=0;\r\n        if(n==1) printf(\"YES\\n\");\r\n        else\r\n        {\r\n            for(i=0;i<n\/2;i++)\r\n            {\r\n                if(a[i]!=a[n-1-i]) flag++;\r\n            }\r\n            if(n%2==0)\r\n            {\r\n                if(flag==1) printf(\"YES\\n\");\r\n                else printf(\"NO\\n\");\r\n            }\r\n            else\r\n            {\r\n                if(flag<=1) printf(\"YES\\n\");\r\n                else printf(\"NO\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}","2285":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int n,t,k,d,time=0;\r\r\n    scanf(\"%d%d%d%d\",&n,&t,&k,&d);\r\r\n    while(n>0)\r\r\n    {\r\r\n        time=time+t;\r\r\n        n=n-k;\r\r\n        if(time>d)\r\r\n        {\r\r\n            if(n>0)\r\r\n                printf(\"YES\");\r\r\n            else printf(\"NO\");\r\r\n            break;\r\r\n        }\r\r\n        else if(time==d)\r\r\n        {\r\r\n            if(n>k)\r\r\n                printf(\"YES\");\r\r\n            else printf(\"NO\");\r\r\n            break;\r\r\n        }\r\r\n    }\r\r\n   if(time<d)\r\r\n    printf(\"NO\");\r\r\n    return 0;\r\r\n}","2287":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n\r\r\nint main(void)\r\r\n{\r\r\n\tint i,length,flag=1,count=0;\r\r\n\tchar ch[105];\r\r\n\tgets(ch);\r\r\n\tlength=strlen(ch);\r\r\n\tif(length==2) {\r\r\n\t\tif(ch[i]=='K' && ch[i+1]=='V') {\r\r\n\t\t\tprintf(\"0\");\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tprintf(\"1\");\r\r\n\t\t}\r\r\n\t}\r\r\n\telse if(length>2) {\r\r\n\t\tfor(i=0;i<length;) {\r\r\n\t\t\tif(ch[i]=='V' && ch[i+1]=='K') {\r\r\n\t\t\t\tcount++;\r\r\n\t\t\t\ti+=2;\r\r\n\t\t\t}\r\r\n\t\t\telse if((ch[i]=='V' && ch[i+1]=='V' && ch[i+2]=='V') || (ch[i]=='K' && ch[i+1]=='K' && ch[i+2]=='K') || (ch[i]=='K' && ch[i+1]=='K' && ch[i+2]=='V')) {\r\r\n\t\t\t\tif(flag) {\r\r\n\t\t\t\t\tcount++;\r\r\n\t\t\t\t\tflag=0;\r\r\n\t\t\t\t}\r\r\n\t\t\t\ti++;\r\r\n\t\t\t}\r\r\n\t\t\telse {\r\r\n\t\t\t\ti++;\r\r\n\t\t\t}\r\r\n\t\t}\r\r\n\t\tif(flag) {\r\r\n\t\t\tif((ch[length-2]=='V' && ch[length-1]=='V') || (ch[length-3]=='K' && ch[length-2]=='K' && ch[length-1]=='K')) {\r\r\n\t\t\t\tcount++;\r\r\n\t\t\t}\r\r\n\t\t}\r\r\n\t\tprintf(\"%d\",count);\r\r\n\t}\r\r\n\telse {\r\r\n\t\tprintf(\"0\");\r\r\n\t}\r\r\n\t\r\r\n\treturn 0;\r\r\n}","2288":"#include<stdio.h>\r\r\n#include<string.h>\r\r\n\r\r\nchar ch[105],ch1[105],ch2[105];\r\r\n\r\r\nint main(void)\r\r\n{\r\r\n\tint len,i,p,q;\r\r\n\tscanf(\"%s\\n%s\",ch1,ch2);\r\r\n\tlen=strlen(ch1);\r\r\n\tfor(i=0;i<len;i++) {\r\r\n\t\tp=ch1[i];\r\r\n\t\tq=ch2[i];\r\r\n\t\tif(p<q) {\r\r\n\t\t\tprintf(\"-1\");\r\r\n\t\t\treturn 0;\r\r\n\t\t}\r\r\n\t\tif(p>q) {\r\r\n\t\t\tch[i]=ch2[i];\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tch[i]='z';\r\r\n\t\t}\r\r\n\t}\r\r\n\tprintf(\"%s\",ch);\r\r\n\t\r\r\n\treturn 0;\r\r\n}","2295":"#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\nint main(){\r\n    int i=0, j = 0, l;\r\n    char s[1000], p[5] = \"heidi\";\r\n    gets(s);\r\n\r\n    for(l = 0; s[l] != '\\0'; ++l);\r\n\r\n    while(j!=l){\r\n        if(p[i]==s[j]){\r\n            i = i+1;\r\n        }\r\n        j = j + 1;\r\n    }\r\n    if (i>4){\r\n        printf(\"YES\");\r\n    }\r\n    else{\r\n        printf(\"NO\");\r\n    }\r\n    return 0;\r\n}","2297":"#include <stdio.h>\r\nint a[200000],c[200000];\r\nint main()\r\n{\r\n    int i,j=0,n,m,k;\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(a[i]==0)\r\n        {\r\n            m=j;\r\n            c[j++]=i;\r\n        }\r\n    }\r\n    j=0;\r\n    for(i=0;i<n;i++)\r\n    {\r\n        if(i<c[0])\r\n            a[i]=c[0]-i;\r\n        else if(i>=c[m])\r\n            a[i]=i-c[m];\r\n        else if((i>=c[j])&&(i<c[j+1]))\r\n        {\r\n            k=c[j+1]-c[j];\r\n            {\r\n                if(i<=c[j]+k\/2)\r\n                    a[i]=i-c[j];\r\n                else\r\n                    a[i]=c[j+1]-i;\r\n            }\r\n        }\r\n        else\r\n            j++;\r\n    }\r\n    for(i=0;i<n;i++)\r\n    {\r\n        printf(\"%d \",a[i]);\r\n    }\r\n    return 0;\r\n}","2310":"#include <stdio.h>\r\n#include <string.h>\r\nint main() {\r\n\t\r\n\tint a[100][100];\r\n\tint k;\r\n\tint n;\r\n\tint i , j;\r\n\t\r\n\tscanf(\"%d%d\",&n,&k);\r\n\tmemset(a , 0 , sizeof(a));\r\n\t\r\n\tif(k > n*n){\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tfor(i = 0 ; i < n ; i++){\r\n\t\tfor(j = 0 ; j < n ; j++){\r\n\t\t\tif(!a[i][j]){\r\n\t\t\t\tif(i == j && k){\r\n\t\t\t\t\ta[i][j] = 1;\r\n\t\t\t\t\tk--;\r\n\t\t\t\t}\r\n\t\t\telse if(i != j && k >= 2){\r\n\t\t\t\ta[i][j] = a[j][i] = 1;\r\n\t\t\t\tk -= 2;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\tfor(i = 0 ; i < n ; i++){\r\n\t\t\tfor(j = 0 ; j < n ; j++){\r\n\t\t\t\tprintf(\"%d \",a[i][j]);\r\n\t\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\r\n\treturn 0;\t\r\n}","2312":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\nint a;\r\r\nscanf(\"%d\",&a);\r\r\nprintf(\"%d\",(a-1)\/2);\r\r\n}","2316":"#include<stdio.h>\r\r\nint main(){\r\r\n\tint n;\r\r\n\tint k;\r\r\n\tscanf(\"%d\",&n);\r\r\n\tfor(int i=0;i<n;i++){\r\r\n\t\tk=i%4;\r\r\n\t\tif(k<2)printf(\"a\");\r\r\n\t\telse printf(\"b\");\r\r\n\t}\r\r\n\treturn 0;\r\r\n}","2317":"#include<stdio.h>\r\nint main()\r\n{\r\n    int l,r,k,max=0,integer,i;\r\n    scanf(\"%d %d\",&l,&r);\r\n    if(l==r)\r\n        printf(\"%d\\n\",l);\r\n    else\r\n        printf(\"2\\n\");\r\n    return 0;\r\n}","2322":"#include<stdio.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int n;\r\r\n    scanf(\"%d\",&n);\r\r\n    int a[n],b[n],i,flag=0;\r\r\n    for(i=0;i<n;i++)\r\r\n    {\r\r\n        scanf(\"%d %d\",&a[i],&b[i]);\r\r\n        if(a[i]==b[i])\r\r\n        flag++;\r\r\n    }\r\r\n    if(flag!=n)\r\r\n    {\r\r\n        printf(\"rated\");\r\r\n    }\r\r\n    else\r\r\n    {\r\r\n        for(i=0;i<n-1;i++)\r\r\n        {\r\r\n            if(a[i]<a[i+1])\r\r\n            {\r\r\n                printf(\"unrated\");\r\r\n                flag=0;\r\r\n                break;\r\r\n            }\r\r\n        }\r\r\n        if(flag!=0)\r\r\n        printf(\"maybe\");\r\r\n    }\r\r\n    \r\r\n}","2324":"#include<stdio.h>\r\n#include<stdbool.h>\r\nbool Ans(int m,int n)\r\n{\r\n    int k,i=(n\/50)%475;\r\n    for(k=0;k<25;k++)\r\n    {\r\n        i=(i*96+42)%475;\r\n        \/\/printf(\"(%d)%d\\n\",i+26,k);\r\n        if(i+26==m)\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nint main()\r\n{\r\n    int p,x,y;\r\n    while(~scanf(\"%d%d%d\",&p,&x,&y))\r\n    {\r\n        int b=x;\r\n        int num=0,vis=0,l=0;\r\n        if(Ans(p,x)==true)\r\n            printf(\"%d\\n\",num);\r\n        else\r\n        {\r\n            while(x<y)\r\n            {\r\n                x+=100;\r\n                num++;\r\n            }\r\n            while(x-50>=y)\r\n            {\r\n                x-=50;\r\n                if(Ans(p,x)==true)\r\n                {\r\n                    printf(\"%d\\n\",num);\r\n                    vis=1;\r\n                    break;\r\n                }\r\n            }\r\n            x=b;\r\n            if(vis==0)\r\n            {\r\n                while(Ans(p,x)!=true)\r\n                {\r\n                    x+=50;\r\n                    num++;\r\n                    if(Ans(p,x)==true)\r\n                         break;\r\n                         x+=50;\r\n                }\r\n                printf(\"%d\\n\",num);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}","2329":"#include<stdio.h>\r\nint main()\r\n{\r\n\tint a , b , c;\r\n\t\r\n\tint i;\r\n\tint sum = 0;\r\n\tint n = 0;\r\n\tdouble fin;\r\n\tint t;\r\n\t\r\n\t\r\n\t\r\n\twhile(scanf(\"%d%d\",&a,&b) != EOF){\r\n\t\ti = a;\r\n\t\tn = 0;\r\n\t\tsum = 0;\r\n\t\tfin = b - 0.5;\r\n\t\twhile(a--){\r\n\t\t\tscanf(\"%d\",&t);\r\n\t\t\tsum += t;\r\n\t\t}\r\n\t\tif(sum \/ (i * 1.0) >= fin){\r\n\t\t\tprintf(\"%d\\n\",n);\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\t}\r\n\t\twhile(sum \/ (i * 1.0) < fin){\r\n\t\t\tsum += b;\r\n\t\t\tn++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",n);\r\n\t}\r\n\treturn 0;\r\n}","2331":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\nvoid ktra(int *p,int l,int r,int x)\r\r\n{\r\r\n    int kc=0;\r\r\n    for(int i=l;i<=r;i++)\r\r\n    {\r\r\n        if(p[i]<p[x])   kc++;\r\r\n    }\r\r\n    if(l+kc==x) printf(\"Yes\\n\");else printf(\"No\\n\");\r\r\n}\r\r\nint main()\r\r\n{\r\r\n    int m,n;\r\r\n    scanf(\"%d%d\",&n,&m);\r\r\n    int *p=(int*)malloc(sizeof(int)*n);\r\r\n    int *l=(int*)malloc(sizeof(int)*m);\r\r\n    int *r=(int*)malloc(sizeof(int)*m);\r\r\n    int *x=(int*)malloc(sizeof(int)*m);\r\r\n    for(int i=0;i<n;i++) scanf(\"%d\",&p[i]);\r\r\n    for(int i=0;i<m;i++)\r\r\n    {\r\r\n        scanf(\"%d%d%d\",&l[i],&r[i],&x[i]);\r\r\n    }\r\r\n    for(int i=0;i<m;i++)\r\r\n    {\r\r\n        ktra(p,l[i]-1,r[i]-1,x[i]-1);\r\r\n    }\r\r\n    free(p);free(l),free(r),free(x);\r\r\n}","2332":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n\tlong long int a,b;\r\r\n\tscanf(\"%lld%lld\",&a,&b);\r\r\n\r\r\n\tint cntr=1;\r\r\n\r\r\n\twhile(1)\r\r\n\t{\r\r\n\t\tif(cntr%2==1)\r\r\n\t\t{\r\r\n\r\r\n\t\t\tif(a<cntr)\r\r\n\t\t\t{\r\r\n\t\t\t\tprintf(\"Vladik\");\r\r\n\t\t\t\tbreak;\r\r\n\t\t\t}\r\r\n\t\t\ta-=cntr;\r\r\n\t\t}\r\r\n\r\r\n\t\telse if(cntr%2==0)\r\r\n\t\t{\r\r\n\t\t\tif(b<cntr)\r\r\n\t\t\t{\r\r\n\t\t\t\tprintf(\"Valera\");\r\r\n\t\t\t\tbreak;\r\r\n\t\t\t}\r\r\n\t\t\tb-=cntr;\r\r\n\t\t}\r\r\n\t\tcntr++;\r\r\n\t}\r\r\nreturn 0;\r\r\n}","2334":"#include<stdio.h>\r\nint main() {  \r\n\r\n\tint flag = 0;  \r\n\tint i;\r\n\tint l[5], s[5], r[5], p[5];\r\n    for ( i = 1; i <= 4; i++) {  \r\n        scanf(\"%d%d%d%d\", &l[i], &s[i], &r[i], &p[i]);  \r\n    }  \r\n    \r\n    for (i = 1; i <= 4; ++i) {  \r\n        if (p[i] == 1 && (l[i] == 1 || s[i] == 1 || r[i] == 1))\r\n\t\t\tflag = 1;  \r\n    }  \r\n    if (p[1] == 1 && (l[2] == 1 || s[3] == 1 || r[4] == 1))\r\n\t\tflag = 1;  \r\n    if (p[2] == 1 && (r[1] == 1 || l[3] == 1 || s[4] == 1))\r\n\t\tflag = 1;  \r\n    if (p[3] == 1 && (r[2] == 1 || l[4] == 1 || s[1] == 1))\r\n\t\tflag = 1;  \r\n    if (p[4] == 1 && (l[1] == 1 || s[2] == 1 || r[3] == 1))\r\n\t\tflag = 1;  \r\n    if (flag)\r\n\t\tprintf(\"YES\\n\");  \r\n    else \r\n\t\tprintf(\"NO\\n\");  \r\n\treturn 0;\r\n}","2338":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int arr[201],a[201],b[201];\r\r\n    int n,x,i,j,p=-1,t=300,k=0;\r\r\n    scanf(\"%d%d\",&n,&x);\r\r\n\r\r\n    for(i=0; i<n; i++)\r\r\n    {\r\r\n        scanf(\"%d\",&arr[i]);\r\r\n        if(arr[i]!=0)\r\r\n        {\r\r\n            b[k]=arr[i];\r\r\n            k++;\r\r\n        }\r\r\n    }\r\r\n    for(i=0; i<x; i++)\r\r\n    {\r\r\n        scanf(\"%d\",&a[i]);\r\r\n    }\r\r\n\r\r\n\r\r\n    if(x>1)\r\r\n    {\r\r\n        printf(\"YES\");\r\r\n        return 0;\r\r\n    }\r\r\n    for(i=0; i<k-1; i++)\r\r\n    {\r\r\n        if(b[i]>b[i+1])\r\r\n        {\r\r\n            printf(\"YES\");\r\r\n            return 0;\r\r\n        }\r\r\n    }\r\r\n\r\r\n    for(i=0; i<n; i++)\r\r\n    {\r\r\n        if(arr[i]==0)\r\r\n        {\r\r\n            if(i!=0){p=arr[i-1];}\r\r\n\r\r\n            if(i!=(n-1)){t=arr[i+1];}\r\r\n        }\r\r\n    }\r\r\n\r\r\n    if(a[0]<p || a[0]>t)\r\r\n        {\r\r\n            printf(\"YES\");\r\r\n        }\r\r\n        else\r\r\n        {\r\r\n            printf(\"NO\");\r\r\n        }\r\r\n\r\r\n}","2340":"#include <stdio.h>\r\r\n#include <stdlib.h>\r\r\n\r\r\nint main()\r\r\n{\r\r\n    int a,b,ans=0;\r\r\n    scanf(\"%d:%d\",&a,&b);\r\r\n    while(a%10 != b\/10 || a\/10 != b%10)\r\r\n    {\r\r\n        ans++;\r\r\n        b++;\r\r\n        a=a+b\/60;\r\r\n        a=a%24;\r\r\n        b=b%60;\r\r\n    }\r\r\n    printf(\"%d\\n\",ans);\r\r\n    return 0;\r\r\n}","2343":"#include<stdio.h>\r\nint main()\r\n{\r\n\tint a , b , c;\r\n\tint i , j;\r\n\tint m , n;\r\n\tint num[200010] = {0};\r\n\tint t = 0;\r\n\t\r\n\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\tfor(i = 1 ; i <= a ; i++){\r\n\t\tscanf(\"%d%d\",&m,&n);\r\n\t\tnum[m]++;\r\n\t\tnum[n+1]--;\r\n\t}\r\n\tfor(i = 1 ; i <= 200000 ;i++)\r\n\t\tnum[i] += num[i-1];\r\n\tfor(i = 1 ; i <= 200000 ;i++)\r\n\t\tnum[i] = (num[i] >= b);\r\n\tfor(i = 1 ; i <= 200000 ; i++)\r\n\t\tnum[i] += num[i-1];\r\n\tfor(i = 0 ; i < c ;i++){\r\n\t\tscanf(\"%d%d\",&m,&n);\r\n\t\t\r\n\t\tprintf(\"%d\\n\",num[n] - num[m-1]);\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n\t\t\r\n\t\r\n}","2347":"#include<stdio.h>\r\n#include<math.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n\tint x1,y1,x2,y2,x,y;\r\n \tint flagX,flagY;\r\n\tscanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\r\n\tscanf(\"%d%d\",&x,&y);\r\n\tif((abs(x2-x1)%x!=0) || (abs(y2-y1)%y!=0))\r\n\t\tprintf(\"NO\\n\");\r\n\telse\r\n\t{\r\n\t\tflagX=(x2-x1)\/x;\r\n\t\tflagY=(y2-y1)\/y;\r\n\t\tif(abs(flagX-flagY)%2==1)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"YES\\n\");\r\n\t}\r\n\treturn 0;\r\n}","2350":"#include<stdio.h>\r\r\nint main()\r\r\n{\r\r\n    int c,v0,v1,a,l;\r\r\n    int count=1;\r\r\n    scanf(\"%d%d%d%d%d\",&c,&v0,&v1,&a,&l);\r\r\n    c-=v0;\r\r\n    while(c>0)\r\r\n    {\r\r\n        v0=v0+a;\r\r\n        if(v0>v1)\r\r\n            v0=v1;\r\r\n        c=c+l;\r\r\n        c-=v0;\r\r\n        count++;\r\r\n    }\r\r\n    printf(\"%d\\n\",count);\r\r\n    return 0;\r\r\n}","2352":"#include <stdio.h>\r\r\nint main ()\r\r\n{\r\r\n    long long int i,m,n,sum=1;\r\r\n    scanf(\"%I64d %I64d\",&m,&n);\r\r\n    if(m<=n)\r\r\n    {\r\r\n        for(i=1;i<=m;i++)\r\r\n            sum=sum*i;\r\r\n    }\r\r\n     if(n<m)\r\r\n    {\r\r\n        for(i=1;i<=n;i++)\r\r\n            sum=sum*i;\r\r\n    }\r\r\n    printf(\"%I64d\\n\",sum);\r\r\n    return 0;\r\r\n\r\r\n}","2354":"#include<stdio.h>\r\r\n#include<string.h>\r\nint main(){\r\r\n    int s=0,last=-1,cur=0;\r\r\n    scanf(\"%*d\\n\");\r\r\n    while (1){\r\r\n        s=getchar();\r\r\n        if (s=='\\n'){\r\r\n            printf(\"%d\",cur);\r\r\n            cur=0;\r\r\n            putchar('\\n');\r\r\n            scanf(\"%*d\\n\");\r\r\n        }\r\r\n        else if(s==EOF){break;}\r\r\n        else if (s=='0'){\r\r\n            if (last=='0'){\r\r\n                putchar('0');\r\r\n            }\r\r\n            else if (last=='1'){\r\r\n                printf(\"%d\",cur);\r\r\n            }\r\r\n            cur=0;\r\r\n        }\r\r\n        else if (s=='1'){++cur;}\r\r\n        last=s;\r\r\n    }\r\r\n    return 0;\r\n}","2356":"#include<stdio.h>\r\r\nint main ()\r\r\n{\r\r\n   unsigned long long a,b,c;\r\r\n   scanf(\"%llu%llu\",&a,&b);\r\r\n   c=a\/b;\r\r\n   if(c%2==0)printf(\"NO\\n\");\r\r\n   else printf(\"YES\\n\");\r\r\n    return 0;\r\r\n\r\r\n}","2358":"#include<stdio.h>\r\r\n#include<stdlib.h>\r\r\n\r\r\n\r\r\nint\tmain(){\r\r\n\tint i,j,n,k,res;\r\r\n\tchar s;\r\r\n\twhile (scanf(\"%d%d\\n\",&n,&k)!=EOF){\r\r\n\t\tshort data[1000001]={0};\r\r\n\t\tint abc[26][2]={0};\r\r\n\t\tfor (i=1; i<=n; ++i){\r\r\n\t\t\tscanf(\" %c\",&s);\r\r\n\t\t\tif (!abc[s-'A'][0]){\r\r\n\t\t\t\tabc[s-'A'][0]=i;\r\r\n\t\t\t}\r\r\n\t\t\tabc[s-'A'][1]=i;\r\r\n\t\t}\r\r\n\t\tfor (i=0; i<26; ++i){\r\r\n\t\t\t\/\/printf(\"%d-%d\\n\",abc[i][0],abc[i][1]);\r\r\n\t\t\tfor (j=abc[i][0]; j<=abc[i][1]; ++j){\r\r\n\t\t\t\t++data[j];\r\r\n\t\t\t}\r\r\n\t\t}\r\r\n\t\tres=0;\r\r\n\t\tfor (i=1; i<=n; ++i){\r\r\n\t\t\tif (data[i]>res){\r\r\n\t\t\t\tres=data[i];\r\r\n\t\t\t}\r\r\n\t\t}\r\r\n\t\t\/\/printf(\"%d\\n\",res);\r\r\n\t\tif (res>k){\r\r\n\t\t\tprintf(\"YES\\n\");\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tprintf(\"NO\\n\");\r\r\n\t\t}\r\r\n\t}\r\r\n}"},"fullname":{"0":"581A","13":"583A","16":"583B","19":"584A","21":"586A","26":"587A","28":"588A","30":"591A","38":"592B","40":"593A","42":"595A","49":"598A","58":"599A","64":"604C","67":"606A","69":"608A","73":"611A","80":"615A","82":"616A","84":"617A","94":"618A","96":"620B","98":"621A","102":"624B","104":"624A","106":"625C","111":"626A","113":"627A","115":"627C","117":"628A","119":"629A","122":"629C","124":"630A","128":"630C","132":"633A","135":"637B","136":"637A","139":"638A","142":"641A","144":"644A","146":"645B","148":"651A","155":"652A","156":"652B","159":"653A","161":"659A","163":"660A","182":"667B","184":"669A","188":"669B","193":"670A","195":"670D2","197":"672A","199":"672B","201":"673A","203":"675B","205":"675E","220":"676A","222":"677A","227":"678D","229":"685A","231":"686B","232":"686A","235":"688A","237":"690A1","239":"690A2","243":"691A","246":"700B","248":"700A","250":"703A","252":"705A","261":"706A","263":"707A","269":"707C","272":"708B","274":"708A","276":"709A","278":"710A","280":"711A","284":"714A","285":"719A","289":"719B","293":"721A","299":"722B","301":"723A","307":"724A","309":"725A","313":"725B","317":"729A","319":"730B","329":"731A","331":"732A","333":"732B","345":"733A","351":"733B","363":"734A","367":"735A","374":"742B","376":"742A","379":"746A","384":"746B","385":"746C","386":"746D","393":"747B","395":"747A","398":"748A","400":"750A","402":"753A","404":"755B","407":"755A","412":"755C","421":"758A","427":"760A","433":"761A","435":"762A","437":"1A","450":"10A","454":"102B","457":"104A","475":"104C","478":"106A","484":"106B","486":"108A","516":"109A","518":"11A","521":"110A","529":"111A","531":"112A","543":"114A","550":"115A","556":"116A","562":"117A","582":"118A","593":"119A","597":"12A","601":"12B","604":"120B","605":"120A","608":"120F","628":"122A","640":"124A","653":"125A","659":"127A","667":"129A","671":"13A","673":"133A","676":"134A","678":"136A","688":"137A","689":"139A","695":"14D","697":"14A","699":"14B","703":"141A","705":"141C","717":"142E","720":"143B","722":"143A","724":"144A","730":"145A","732":"148A","751":"149A","757":"151A","770":"152A","772":"154A","774":"155A","778":"157A","780":"158A","783":"158B","788":"159C","790":"160A","796":"161D","827":"165A","832":"166A","834":"168A","841":"169A","843":"169B","847":"17A","849":"171C","850":"171A","853":"171B","857":"171D","859":"172A","863":"174A","865":"177A1","867":"18C","871":"18A","877":"180C","879":"181A","908":"182B","910":"186A","914":"189A","916":"190A","918":"191C","923":"191A","932":"194A","938":"195A","941":"195B","964":"196A","967":"198A","976":"199A","1030":"200B","1034":"201A","1036":"201B","1039":"201C","1044":"203C","1046":"203A","1048":"205A","1050":"205B","1055":"208A","1061":"209B","1066":"213C","1067":"213B","1070":"214A","1081":"215A","1087":"216B","1088":"216A","1099":"218B","1102":"219C","1104":"219A","1106":"22E","1122":"22D","1130":"22A","1138":"221A","1143":"222A","1152":"224A","1160":"225A","1162":"227B","1166":"228A","1176":"23A","1178":"230B","1180":"231A","1195":"233A","1197":"233B","1208":"234B","1210":"236A","1222":"237A","1228":"239A","1232":"242B","1234":"243E","1236":"244A","1246":"245B","1281":"246B","1285":"248A","1289":"248B","1293":"25A","1299":"250B","1301":"252A","1303":"253A","1321":"254A","1323":"255A","1330":"258A","1347":"259B","1351":"26A","1361":"260A","1363":"262A","1369":"263A","1377":"265A","1378":"265B","1415":"266A","1417":"266B","1421":"267A","1427":"268B","1429":"268A","1433":"27A","1435":"270A","1451":"271A","1459":"273A","1461":"275A","1467":"276B","1469":"277A","1471":"278A","1477":"279B","1479":"28B","1482":"281A","1484":"281D","1498":"282A","1526":"284A","1528":"285C","1530":"286C","1533":"287A","1537":"289B","1539":"29A","1580":"290B","1582":"290C","1588":"290A","1589":"290D","1592":"291A","1594":"293A","1596":"294B","1598":"294A","1601":"295A","1618":"296A","1627":"298A","1629":"298B","1632":"299A","1634":"299B","1640":"3A","1646":"30A","1650":"30B","1657":"32C","1659":"32B","1661":"32A","1665":"33A","1669":"34A","1673":"34B","1679":"36A","1683":"37A","1691":"38A","1709":"39B","1711":"4A","1725":"40E","1726":"40B","1729":"41A","1733":"43A","1735":"43B","1745":"43C","1760":"44E","1764":"44A","1767":"45A","1769":"46A","1778":"47A","1795":"48D","1797":"49A","1802":"49B","1804":"50A","1842":"52A","1848":"53A","1850":"56A","1854":"57C","1855":"57A","1858":"58B","1859":"58A","1871":"59A","1877":"6A","1882":"60A","1884":"61A","1886":"62A","1902":"63A","1906":"65A","1908":"66D","1910":"66A","1939":"67A","1943":"68A","1947":"69A","1963":"70A","1965":"71A","1981":"74A","1985":"75A","1988":"76E","1990":"77B","1992":"78B","1994":"78A","1996":"79A","1998":"8E","2000":"80A","2004":"80B","2020":"81A","2065":"82A","2073":"84A","2088":"87A","2089":"88B","2091":"9A","2093":"9D","2102":"90B","2104":"91A","2105":"91B","2130":"92A","2159":"94A","2210":"96A","2232":"771B","2233":"774C","2235":"776A","2237":"777B","2240":"778A","2242":"779D","2244":"782A","2246":"784A","2248":"785C","2250":"787A","2252":"791A","2269":"794A","2271":"795D","2272":"795C","2274":"795K","2278":"796B","2281":"798A","2285":"799A","2287":"801A","2288":"801B","2295":"802G","2297":"803B","2310":"803A","2312":"804A","2316":"805B","2317":"805A","2322":"807A","2324":"807B","2329":"810A","2331":"811B","2332":"811A","2334":"812A","2338":"814A","2340":"816A","2343":"816B","2347":"817A","2350":"820A","2352":"822A","2354":"825A","2356":"832A","2358":"834B"},"name":{"0":"A","13":"A","16":"B","19":"A","21":"A","26":"A","28":"A","30":"A","38":"B","40":"A","42":"A","49":"A","58":"A","64":"C","67":"A","69":"A","73":"A","80":"A","82":"A","84":"A","94":"A","96":"B","98":"A","102":"B","104":"A","106":"C","111":"A","113":"A","115":"C","117":"A","119":"A","122":"C","124":"A","128":"C","132":"A","135":"B","136":"A","139":"A","142":"A","144":"A","146":"B","148":"A","155":"A","156":"B","159":"A","161":"A","163":"A","182":"B","184":"A","188":"B","193":"A","195":"D2","197":"A","199":"B","201":"A","203":"B","205":"E","220":"A","222":"A","227":"D","229":"A","231":"B","232":"A","235":"A","237":"A1","239":"A2","243":"A","246":"B","248":"A","250":"A","252":"A","261":"A","263":"A","269":"C","272":"B","274":"A","276":"A","278":"A","280":"A","284":"A","285":"A","289":"B","293":"A","299":"B","301":"A","307":"A","309":"A","313":"B","317":"A","319":"B","329":"A","331":"A","333":"B","345":"A","351":"B","363":"A","367":"A","374":"B","376":"A","379":"A","384":"B","385":"C","386":"D","393":"B","395":"A","398":"A","400":"A","402":"A","404":"B","407":"A","412":"C","421":"A","427":"A","433":"A","435":"A","437":"A","450":"A","454":"B","457":"A","475":"C","478":"A","484":"B","486":"A","516":"A","518":"A","521":"A","529":"A","531":"A","543":"A","550":"A","556":"A","562":"A","582":"A","593":"A","597":"A","601":"B","604":"B","605":"A","608":"F","628":"A","640":"A","653":"A","659":"A","667":"A","671":"A","673":"A","676":"A","678":"A","688":"A","689":"A","695":"D","697":"A","699":"B","703":"A","705":"C","717":"E","720":"B","722":"A","724":"A","730":"A","732":"A","751":"A","757":"A","770":"A","772":"A","774":"A","778":"A","780":"A","783":"B","788":"C","790":"A","796":"D","827":"A","832":"A","834":"A","841":"A","843":"B","847":"A","849":"C","850":"A","853":"B","857":"D","859":"A","863":"A","865":"A1","867":"C","871":"A","877":"C","879":"A","908":"B","910":"A","914":"A","916":"A","918":"C","923":"A","932":"A","938":"A","941":"B","964":"A","967":"A","976":"A","1030":"B","1034":"A","1036":"B","1039":"C","1044":"C","1046":"A","1048":"A","1050":"B","1055":"A","1061":"B","1066":"C","1067":"B","1070":"A","1081":"A","1087":"B","1088":"A","1099":"B","1102":"C","1104":"A","1106":"E","1122":"D","1130":"A","1138":"A","1143":"A","1152":"A","1160":"A","1162":"B","1166":"A","1176":"A","1178":"B","1180":"A","1195":"A","1197":"B","1208":"B","1210":"A","1222":"A","1228":"A","1232":"B","1234":"E","1236":"A","1246":"B","1281":"B","1285":"A","1289":"B","1293":"A","1299":"B","1301":"A","1303":"A","1321":"A","1323":"A","1330":"A","1347":"B","1351":"A","1361":"A","1363":"A","1369":"A","1377":"A","1378":"B","1415":"A","1417":"B","1421":"A","1427":"B","1429":"A","1433":"A","1435":"A","1451":"A","1459":"A","1461":"A","1467":"B","1469":"A","1471":"A","1477":"B","1479":"B","1482":"A","1484":"D","1498":"A","1526":"A","1528":"C","1530":"C","1533":"A","1537":"B","1539":"A","1580":"B","1582":"C","1588":"A","1589":"D","1592":"A","1594":"A","1596":"B","1598":"A","1601":"A","1618":"A","1627":"A","1629":"B","1632":"A","1634":"B","1640":"A","1646":"A","1650":"B","1657":"C","1659":"B","1661":"A","1665":"A","1669":"A","1673":"B","1679":"A","1683":"A","1691":"A","1709":"B","1711":"A","1725":"E","1726":"B","1729":"A","1733":"A","1735":"B","1745":"C","1760":"E","1764":"A","1767":"A","1769":"A","1778":"A","1795":"D","1797":"A","1802":"B","1804":"A","1842":"A","1848":"A","1850":"A","1854":"C","1855":"A","1858":"B","1859":"A","1871":"A","1877":"A","1882":"A","1884":"A","1886":"A","1902":"A","1906":"A","1908":"D","1910":"A","1939":"A","1943":"A","1947":"A","1963":"A","1965":"A","1981":"A","1985":"A","1988":"E","1990":"B","1992":"B","1994":"A","1996":"A","1998":"E","2000":"A","2004":"B","2020":"A","2065":"A","2073":"A","2088":"A","2089":"B","2091":"A","2093":"D","2102":"B","2104":"A","2105":"B","2130":"A","2159":"A","2210":"A","2232":"B","2233":"C","2235":"A","2237":"B","2240":"A","2242":"D","2244":"A","2246":"A","2248":"C","2250":"A","2252":"A","2269":"A","2271":"D","2272":"C","2274":"K","2278":"B","2281":"A","2285":"A","2287":"A","2288":"B","2295":"G","2297":"B","2310":"A","2312":"A","2316":"B","2317":"A","2322":"A","2324":"B","2329":"A","2331":"B","2332":"A","2334":"A","2338":"A","2340":"A","2343":"B","2347":"A","2350":"A","2352":"A","2354":"A","2356":"A","2358":"B"},"countline":{"0":15,"13":25,"16":47,"19":49,"21":39,"26":32,"28":16,"30":19,"38":15,"40":67,"42":45,"49":24,"58":51,"64":28,"67":23,"69":125,"73":23,"80":29,"82":135,"84":37,"94":45,"96":39,"98":41,"102":39,"104":17,"106":69,"111":47,"113":49,"115":263,"117":35,"119":113,"122":43,"124":8,"128":13,"132":37,"135":37,"136":28,"139":21,"142":57,"144":87,"146":33,"148":39,"155":30,"156":59,"159":87,"161":35,"163":51,"182":31,"184":43,"188":73,"193":22,"195":78,"197":19,"199":55,"201":59,"203":25,"205":219,"220":49,"222":35,"227":83,"229":148,"231":47,"232":39,"235":54,"237":31,"239":37,"243":41,"246":107,"248":23,"250":65,"252":33,"261":39,"263":20,"269":15,"272":165,"274":53,"276":31,"278":27,"280":89,"284":45,"285":63,"289":32,"293":87,"299":75,"301":37,"307":83,"309":33,"313":31,"317":49,"319":117,"329":91,"331":17,"333":33,"345":71,"351":40,"363":59,"367":65,"374":29,"376":35,"379":31,"384":119,"385":97,"386":153,"393":117,"395":69,"398":27,"400":33,"402":71,"404":35,"407":18,"412":18,"421":61,"427":35,"433":53,"435":42,"437":38,"450":24,"454":23,"457":14,"475":36,"478":46,"484":38,"486":52,"516":40,"518":29,"521":17,"529":17,"531":11,"543":25,"550":11,"556":15,"562":1,"582":21,"593":35,"597":21,"601":43,"604":38,"605":31,"608":61,"628":11,"640":18,"653":10,"659":20,"667":36,"671":9,"673":22,"676":12,"678":22,"688":66,"689":16,"695":52,"697":47,"699":32,"703":58,"705":76,"717":87,"720":48,"722":62,"724":28,"730":16,"732":11,"751":22,"757":28,"770":34,"772":45,"774":26,"778":22,"780":17,"783":38,"788":100,"790":36,"796":63,"827":53,"832":70,"834":11,"841":30,"843":37,"847":40,"849":1,"850":13,"853":12,"857":18,"859":23,"863":18,"865":22,"867":33,"871":54,"877":42,"879":41,"908":12,"910":53,"914":38,"916":28,"918":149,"923":25,"932":18,"938":15,"941":35,"964":23,"967":14,"976":8,"1030":15,"1034":10,"1036":55,"1039":34,"1044":34,"1046":27,"1048":39,"1050":52,"1055":21,"1061":12,"1066":43,"1067":77,"1070":12,"1081":25,"1087":52,"1088":29,"1099":39,"1102":79,"1104":32,"1106":59,"1122":75,"1130":33,"1138":12,"1143":41,"1152":12,"1160":61,"1162":34,"1166":23,"1176":19,"1178":60,"1180":14,"1195":20,"1197":32,"1208":34,"1210":23,"1222":19,"1228":16,"1232":37,"1234":190,"1236":44,"1246":47,"1281":34,"1285":30,"1289":26,"1293":25,"1299":64,"1301":23,"1303":34,"1321":53,"1323":23,"1330":34,"1347":13,"1351":47,"1361":34,"1363":23,"1369":20,"1377":16,"1378":20,"1415":14,"1417":25,"1421":26,"1427":10,"1429":22,"1433":34,"1435":21,"1451":25,"1459":24,"1461":38,"1467":29,"1469":58,"1471":37,"1477":43,"1479":36,"1482":14,"1484":42,"1498":20,"1526":26,"1528":87,"1530":30,"1533":27,"1537":37,"1539":33,"1580":43,"1582":23,"1588":10,"1589":20,"1592":70,"1594":22,"1596":42,"1598":21,"1601":45,"1618":15,"1627":52,"1629":39,"1632":19,"1634":31,"1640":52,"1646":17,"1650":42,"1657":41,"1659":26,"1661":31,"1665":9,"1669":31,"1673":24,"1679":30,"1683":35,"1691":12,"1709":38,"1711":9,"1725":48,"1726":22,"1729":17,"1733":34,"1735":51,"1745":23,"1760":36,"1764":17,"1767":34,"1769":18,"1778":17,"1795":42,"1797":21,"1802":45,"1804":9,"1842":21,"1848":28,"1850":22,"1854":32,"1855":24,"1858":17,"1859":43,"1871":12,"1877":22,"1882":19,"1884":20,"1886":40,"1902":57,"1906":39,"1908":50,"1910":64,"1939":49,"1943":33,"1947":18,"1963":42,"1965":16,"1981":17,"1985":57,"1988":22,"1990":18,"1992":21,"1994":36,"1996":54,"1998":72,"2000":36,"2004":22,"2020":88,"2065":13,"2073":7,"2088":58,"2089":79,"2091":26,"2093":64,"2102":24,"2104":84,"2105":40,"2130":16,"2159":57,"2210":15,"2232":47,"2233":19,"2235":45,"2237":71,"2240":101,"2242":139,"2244":47,"2246":17,"2248":19,"2250":23,"2252":18,"2269":19,"2271":55,"2272":81,"2274":61,"2278":43,"2281":31,"2285":59,"2287":93,"2288":55,"2295":25,"2297":44,"2310":41,"2312":13,"2316":23,"2317":11,"2322":65,"2324":59,"2329":36,"2331":59,"2332":67,"2334":28,"2338":111,"2340":35,"2343":31,"2347":22,"2350":37,"2352":37,"2354":53,"2356":21,"2358":75},"context":{"0":"A. Vasya the Hipster time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output One day Vasya the Hipster decided to count how many socks he had. It turned out that he had a red socks and b blue socks. According to the latest fashion, hipsters should wear the socks of different colors: a red one on the left foot, a blue one on the right foot. Every day Vasya puts on new socks in the morning and throws them away before going to bed as he doesn't want to wash them. Vasya wonders, what is the maximum number of days when he can dress fashionable and wear different socks, and after that, for how many days he can then wear the same socks until he either runs out of socks or cannot make a single pair from the socks he's got. Can you help him?\n\nInput\nThe single line of the input contains two positive integers a and b ( 1 \u2264 a , b \u2264 100 ) \u2014 the number of red and blue socks that Vasya's got.\n\nOutput\nPrint two space-separated integers \u2014 the maximum number of days when Vasya can wear different socks and the number of days when he can wear the same socks until he either runs out of socks or cannot make a single pair from the socks he's got. Keep in mind that at the end of the day Vasya throws away the socks that he's been wearing on that day. Examples\n\nInput\n3 1\n\nOutput\n1 1\n\nInput\n2 3\n\nOutput\n2 0\n\nInput\n7 3\n\nOutput\n3 2\n\nNote\nIn the first sample Vasya can first put on one pair of different socks, after that he has two red socks left to wear on the second day.","13":"A. Asphalting Roads time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output City X consists of n vertical and n horizontal infinite roads, forming n \u00d7 n intersections. Roads (both vertical and horizontal) are numbered from 1 to n , and the intersections are indicated by the numbers of the roads that form them. Sand roads have long been recognized out of date, so the decision was made to asphalt them. To do this, a team of workers was hired and a schedule of work was made, according to which the intersections should be asphalted. Road repairs are planned for n 2 days. On the i -th day of the team arrives at the i -th intersection in the list and if none of the two roads that form the intersection were already asphalted they asphalt both roads. Otherwise, the team leaves the intersection, without doing anything with the roads. According to the schedule of road works tell in which days at least one road will be asphalted.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 50 ) \u2014 the number of vertical and horizontal roads in the city. Next n 2 lines contain the order of intersections in the schedule. The i -th of them contains two numbers h i , v i ( 1 \u2264 h i , v i \u2264 n ), separated by a space, and meaning that the intersection that goes i -th in the timetable is at the intersection of the h i -th horizontal and v i -th vertical roads. It is guaranteed that all the intersections in the timetable are distinct.\n\nOutput\nIn the single line print the numbers of the days when road works will be in progress in ascending order. The days are numbered starting from 1 . Examples\n\nInput\n2 1 1 1 2 2 1 2 2\n\nOutput\n1 4\n\nInput\n1 1 1\n\nOutput\n1\n\nNote\nIn the sample the brigade acts like that: On the first day the brigade comes to the intersection of the 1-st horizontal and the 1-st vertical road. As none of them has been asphalted, the workers asphalt the 1-st vertical and the 1-st horizontal road; On the second day the brigade of the workers comes to the intersection of the 1-st horizontal and the 2-nd vertical road. The 2-nd vertical road hasn't been asphalted, but as the 1-st horizontal road has been asphalted on the first day, the workers leave and do not asphalt anything; On the third day the brigade of the workers come to the intersection of the 2-nd horizontal and the 1-st vertical road. The 2-nd horizontal road hasn't been asphalted but as the 1-st vertical road has been asphalted on the first day, the workers leave and do not asphalt anything; On the fourth day the brigade come to the intersection formed by the intersection of the 2-nd horizontal and 2-nd vertical road. As none of them has been asphalted, the workers asphalt the 2-nd vertical and the 2-nd horizontal road.","16":"B. Robot's Task time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Robot Doc is located in the hall, with n computers stand in a line, numbered from left to right from 1 to n . Each computer contains exactly one piece of information, each of which Doc wants to get eventually. The computers are equipped with a security system, so to crack the i -th of them, the robot needs to collect at least a i any pieces of information from the other computers. Doc can hack the computer only if he is right next to it. The robot is assembled using modern technologies and can move along the line of computers in either of the two possible directions, but the change of direction requires a large amount of resources from Doc. Tell the minimum number of changes of direction, which the robot will have to make to collect all n parts of information if initially it is next to computer with number 1 . It is guaranteed that there exists at least one sequence of the robot's actions, which leads to the collection of all information. Initially Doc doesn't have any pieces of information.\n\nInput\nThe first line contains number n ( 1 \u2264 n \u2264 1000 ). The second line contains n non-negative integers a 1 , a 2 , ..., a n ( 0 \u2264 a i < n ), separated by a space. It is guaranteed that there exists a way for robot to collect all pieces of the information.\n\nOutput\nPrint a single number \u2014 the minimum number of changes in direction that the robot will have to make in order to collect all n parts of information. Examples\n\nInput\n3 0 2 0\n\nOutput\n1\n\nInput\n5 4 2 3 0 1\n\nOutput\n3\n\nInput\n7 0 3 1 0 5 2 6\n\nOutput\n2\n\nNote\nIn the first sample you can assemble all the pieces of information in the optimal manner by assembling first the piece of information in the first computer, then in the third one, then change direction and move to the second one, and then, having 2 pieces of information, collect the last piece. In the second sample to collect all the pieces of information in the optimal manner, Doc can go to the fourth computer and get the piece of information, then go to the fifth computer with one piece and get another one, then go to the second computer in the same manner, then to the third one and finally, to the first one. Changes of direction will take place before moving from the fifth to the second computer, then from the second to the third computer, then from the third to the first computer. In the third sample the optimal order of collecting parts from computers can look like that: 1->3->4->6->2->5->7.","19":"A. Olesya and Rodion time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Olesya loves numbers consisting of n digits, and Rodion only likes numbers that are divisible by t . Find some number that satisfies both of them. Your task is: given the n and t print an integer strictly larger than zero consisting of n digits that is divisible by t . If such number doesn't exist, print - 1 .\n\nInput\nThe single line contains two numbers, n and t ( 1 \u2264 n \u2264 100 , 2 \u2264 t \u2264 10 ) \u2014 the length of the number and the number it should be divisible by.\n\nOutput\nPrint one such positive number without leading zeroes, \u2014 the answer to the problem, or - 1 , if such number doesn't exist. If there are multiple possible answers, you are allowed to print any of them. Examples\n\nInput\n3 2\n\nOutput\n712","21":"A. Alena's Schedule time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Alena has successfully passed the entrance exams to the university and is now looking forward to start studying. One two-hour lesson at the Russian university is traditionally called a pair , it lasts for two academic hours (an academic hour is equal to 45 minutes). The University works in such a way that every day it holds exactly n lessons. Depending on the schedule of a particular group of students, on a given day, some pairs may actually contain classes, but some may be empty (such pairs are called breaks). The official website of the university has already published the schedule for tomorrow for Alena's group. Thus, for each of the n pairs she knows if there will be a class at that time or not. Alena's House is far from the university, so if there are breaks, she doesn't always go home. Alena has time to go home only if the break consists of at least two free pairs in a row, otherwise she waits for the next pair at the university. Of course, Alena does not want to be sleepy during pairs, so she will sleep as long as possible, and will only come to the first pair that is presented in her schedule. Similarly, if there are no more pairs, then Alena immediately goes home. Alena appreciates the time spent at home, so she always goes home when it is possible, and returns to the university only at the beginning of the next pair. Help Alena determine for how many pairs she will stay at the university.\n\nNote\nthat during some pairs Alena may be at the university waiting for the upcoming pair.\n\nInput\nThe first line of the input contains a positive integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of lessons at the university. The second line contains n numbers a i ( 0 \u2264 a i \u2264 1 ). Number a i equals 0 , if Alena doesn't have the i -th pairs, otherwise it is equal to 1 . Numbers a 1 , a 2 , ..., a n are separated by spaces.\n\nOutput\nPrint a single number \u2014 the number of pairs during which Alena stays at the university. Examples\n\nInput\n5 0 1 0 1 1\n\nOutput\n4\n\nInput\n7 1 0 1 0 0 1 0\n\nOutput\n4\n\nInput\n1 0\n\nOutput\n0\n\nNote\nIn the first sample Alena stays at the university from the second to the fifth pair, inclusive, during the third pair she will be it the university waiting for the next pair. In the last sample Alena doesn't have a single pair, so she spends all the time at home.","26":"A. Duff and Weight Lifting time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Recently, Duff has been practicing weight lifting. As a hard practice, Malek gave her a task. He gave her a sequence of weights. Weight of i -th of them is 2 w i pounds. In each step, Duff can lift some of the remaining weights and throw them away. She does this until there's no more weight left. Malek asked her to minimize the number of steps. Duff is a competitive programming fan. That's why in each step, she can only lift and throw away a sequence of weights 2 a 1 , ..., 2 a k if and only if there exists a non-negative integer x such that 2 a 1 + 2 a 2 + ... + 2 a k = 2 x , i. e. the sum of those numbers is a power of two. Duff is a competitive programming fan, but not a programmer. That's why she asked for your help. Help her minimize the number of steps.\n\nInput\nThe first line of input contains integer n ( 1 \u2264 n \u2264 10 6 ), the number of weights. The second line contains n integers w 1 , ..., w n separated by spaces ( 0 \u2264 w i \u2264 10 6 for each 1 \u2264 i \u2264 n ), the powers of two forming the weights values.\n\nOutput\nPrint the minimum number of steps in a single line. Examples\n\nInput\n5 1 1 2 3 3\n\nOutput\n2\n\nInput\n4 0 1 2 3\n\nOutput\n4\n\nNote\nIn the first sample case: One optimal way would be to throw away the first three in the first step and the rest in the second step. Also, it's not possible to do it in one step because their sum is not a power of two. In the second sample case: The only optimal way is to throw away one weight in each step. It's not possible to do it in less than 4 steps because there's no subset of weights with more than one weight and sum equal to a power of two.","28":"A. Duff and Meat time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Duff is addicted to meat! Malek wants to keep her happy for n days. In order to be happy in i -th day, she needs to eat exactly a i kilograms of meat. There is a big shop uptown and Malek wants to buy meat for her from there. In i -th day, they sell meat for p i dollars per kilogram. Malek knows all numbers a 1 , ..., a n and p 1 , ..., p n . In each day, he can buy arbitrary amount of meat, also he can keep some meat he has for the future. Malek is a little tired from cooking meat, so he asked for your help. Help him to minimize the total money he spends to keep Duff happy for n days.\n\nInput\nThe first line of input contains integer n ( 1 \u2264 n \u2264 10 5 ), the number of days. In the next n lines, i -th line contains two integers a i and p i ( 1 \u2264 a i , p i \u2264 100 ), the amount of meat Duff needs and the cost of meat in that day.\n\nOutput\nPrint the minimum money needed to keep Duff happy for n days, in one line. Examples\n\nInput\n3 1 3 2 2 3 1\n\nOutput\n10\n\nInput\n3 1 3 2 1 3 2\n\nOutput\n8\n\nNote\nIn the first sample case: An optimal way would be to buy 1 kg on the first day, 2 kg on the second day and 3 kg on the third day. In the second sample case: An optimal way would be to buy 1 kg on the first day and 5 kg (needed meat for the second and third day) on the second day.","30":"A. Wizards' Duel time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Harry Potter and He-Who-Must-Not-Be-Named engaged in a fight to the death once again. This time they are located at opposite ends of the corridor of length l . Two opponents simultaneously charge a deadly spell in the enemy. We know that the impulse of Harry's magic spell flies at a speed of p meters per second, and the impulse of You-Know-Who's magic spell flies at a speed of q meters per second. The impulses are moving through the corridor toward each other, and at the time of the collision they turn round and fly back to those who cast them without changing their original speeds. Then, as soon as the impulse gets back to it's caster, the wizard reflects it and sends again towards the enemy, without changing the original speed of the impulse. Since Harry has perfectly mastered the basics of magic, he knows that after the second collision both impulses will disappear, and a powerful explosion will occur exactly in the place of their collision. However, the young wizard isn't good at math, so he asks you to calculate the distance from his position to the place of the second meeting of the spell impulses, provided that the opponents do not change positions during the whole fight.\n\nInput\nThe first line of the input contains a single integer l ( 1 \u2264 l \u2264 1 000 ) \u2014 the length of the corridor where the fight takes place. The second line contains integer p , the third line contains integer q ( 1 \u2264 p , q \u2264 500 ) \u2014 the speeds of magical impulses for Harry Potter and He-Who-Must-Not-Be-Named, respectively.\n\nOutput\nPrint a single real number \u2014 the distance from the end of the corridor, where Harry is located, to the place of the second meeting of the spell impulses. Your answer will be considered correct if its absolute or relative error will not exceed 10 - 4 . Namely: let's assume that your answer equals a , and the answer of the jury is b . The checker program will consider your answer correct if . Examples\n\nInput\n100 50 50\n\nOutput\n50\n\nInput\n199 60 40\n\nOutput\n119.4\n\nNote\nIn the first sample the speeds of the impulses are equal, so both of their meetings occur exactly in the middle of the corridor.","38":"B. The Monster and the Squirrel time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Ari the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel. Ari draws a regular convex polygon on the floor and numbers it's vertices 1, 2, ..., n in clockwise order. Then starting from the vertex 1 she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex 2, 3, ..., n (in this particular order). And then she puts a walnut in each region inside the polygon. Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q share a side or a corner . Assuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?\n\nInput\nThe first and only line of the input contains a single integer n ( 3 \u2264 n \u2264 54321 ) - the number of vertices of the regular polygon drawn by Ari.\n\nOutput\nPrint the minimum number of jumps Ada should make to collect all the walnuts. Note, that she doesn't need to leave the polygon after. Examples\n\nInput\n5\n\nOutput\n9\n\nInput\n3\n\nOutput\n1\n\nNote\nOne of the possible solutions for the first sample is shown on the picture above.","40":"A. 2Char time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Andrew often reads articles in his favorite magazine 2Char. The main feature of these articles is that each of them uses at most two distinct letters. Andrew decided to send an article to the magazine, but as he hasn't written any article, he just decided to take a random one from magazine 26Char. However, before sending it to the magazine 2Char, he needs to adapt the text to the format of the journal. To do so, he removes some words from the chosen article, in such a way that the remaining text can be written using no more than two distinct letters. Since the payment depends from the number of non-space characters in the article, Andrew wants to keep the words with the maximum total length.\n\nInput\nThe first line of the input contains number n ( 1 \u2264 n \u2264 100 ) \u2014 the number of words in the article chosen by Andrew. Following are n lines, each of them contains one word. All the words consist only of small English letters and their total length doesn't exceed 1000 . The words are not guaranteed to be distinct, in this case you are allowed to use a word in the article as many times as it appears in the input.\n\nOutput\nPrint a single integer \u2014 the maximum possible total length of words in Andrew's article. Examples\n\nInput\n4 abb cacc aaa bbb\n\nOutput\n9\n\nInput\n5 a a bcbcb cdecdecdecdecdecde aaaa\n\nOutput\n6\n\nNote\nIn the first sample the optimal way to choose words is {' abb ', ' aaa ', ' bbb '}. In the second sample the word ' cdecdecdecdecdecde ' consists of three distinct letters, and thus cannot be used in the article. The optimal answer is {' a ', ' a ', ' aaaa '}.","42":"A. Vitaly and Night time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output One day Vitaly was going home late at night and wondering: how many people aren't sleeping at that moment? To estimate, Vitaly decided to look which windows are lit in the house he was passing by at that moment. Vitaly sees a building of n floors and 2\u00b7 m windows on each floor. On each floor there are m flats numbered from 1 to m , and two consecutive windows correspond to each flat. If we number the windows from 1 to 2\u00b7 m from left to right, then the j -th flat of the i -th floor has windows 2\u00b7 j - 1 and 2\u00b7 j in the corresponding row of windows (as usual, floors are enumerated from the bottom). Vitaly thinks that people in the flat aren't sleeping at that moment if at least one of the windows corresponding to this flat has lights on. Given the information about the windows of the given house, your task is to calculate the number of flats where, according to Vitaly, people aren't sleeping.\n\nInput\nThe first line of the input contains two integers n and m ( 1 \u2264 n , m \u2264 100 ) \u2014 the number of floors in the house and the number of flats on each floor respectively. Next n lines describe the floors from top to bottom and contain 2\u00b7 m characters each. If the i -th window of the given floor has lights on, then the i -th character of this line is ' 1 ', otherwise it is ' 0 '.\n\nOutput\nPrint a single integer \u2014 the number of flats that have lights on in at least one window, that is, the flats where, according to Vitaly, people aren't sleeping. Examples\n\nInput\n2 2 0 0 0 1 1 0 1 1\n\nOutput\n3\n\nInput\n1 3 1 1 0 1 0 0\n\nOutput\n2\n\nNote\nIn the first test case the house has two floors, two flats on each floor. That is, in total there are 4 flats. The light isn't on only on the second floor in the left flat. That is, in both rooms of the flat the light is off. In the second test case the house has one floor and the first floor has three flats. The light is on in the leftmost flat (in both windows) and in the middle flat (in one window). In the right flat the light is off.","49":"A. Tricky Sum time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output In this problem you are to calculate the sum of all integers from 1 to n , but you should take all powers of two with minus in the sum. For example, for n = 4 the sum is equal to - 1 - 2 + 3 - 4 = - 4 , because 1 , 2 and 4 are 2 0 , 2 1 and 2 2 respectively. Calculate the answer for t values of n .\n\nInput\nThe first line of the input contains a single integer t ( 1 \u2264 t \u2264 100 ) \u2014 the number of values of n to be processed. Each of next t lines contains a single integer n ( 1 \u2264 n \u2264 10 9 ).\n\nOutput\nPrint the requested sum for each of t integers n given in the input. Examples\n\nInput\n2 4 1000000000\n\nOutput\n-4 499999998352516354\n\nNote\nThe answer for the first sample is explained in the statement.","58":"A. Patrick and Shopping time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d 1 meter long road between his house and the first shop and a d 2 meter long road between his house and the second shop. Also, there is a road of length d 3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house. Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn't mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.\n\nInput\nThe first line of the input contains three integers d 1 , d 2 , d 3 ( 1 \u2264 d 1 , d 2 , d 3 \u2264 10 8 ) \u2014 the lengths of the paths. d 1 is the length of the path connecting Patrick's house and the first shop; d 2 is the length of the path connecting Patrick's house and the second shop; d 3 is the length of the path connecting both shops.\n\nOutput\nPrint the minimum distance that Patrick will have to walk in order to visit both shops and return to his house. Examples\n\nInput\n10 20 30\n\nOutput\n60\n\nInput\n1 1 5\n\nOutput\n4\n\nNote\nThe first sample is shown on the picture in the problem statement. One of the optimal routes is: house first shop second shop house. In the second sample one of the optimal routes is: house first shop house second shop house.","64":"C. Alternative Thinking time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Kevin has just recevied his disappointing results on the USA Identification of Cows Olympiad (USAICO) in the form of a binary string of length n . Each character of Kevin's string represents Kevin's score on one of the n questions of the olympiad\u2014 '1' for a correctly identified cow and '0' otherwise. However, all is not lost. Kevin is a big proponent of alternative thinking and believes that his score, instead of being the sum of his points, should be the length of the longest alternating subsequence of his string. Here, we define an alternating subsequence of a string as a not-necessarily contiguous subsequence where no two consecutive elements are equal. For example, {0, 1, 0, 1} , {1, 0, 1} , and {1, 0, 1, 0} are alternating sequences, while {1, 0, 0} and {0, 1, 0, 1, 1} are not. Kevin, being the sneaky little puffball that he is, is willing to hack into the USAICO databases to improve his score. In order to be subtle, he decides that he will flip exactly one substring\u2014that is, take a contiguous non-empty substring of his score and change all '0' s in that substring to '1' s and vice versa. After such an operation, Kevin wants to know the length of the longest possible alternating subsequence that his string could have.\n\nInput\nThe first line contains the number of questions on the olympiad n ( 1 \u2264 n \u2264 100 000 ). The following line contains a binary string of length n representing Kevin's results on the USAICO.\n\nOutput\nOutput a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring. Examples\n\nInput\n8 10000011\n\nOutput\n5\n\nInput\n2 01\n\nOutput\n2\n\nNote\nIn the first sample, Kevin can flip the bolded substring ' 100 00 011 ' and turn his string into ' 10011011 ', which has an alternating subsequence of length 5: ' 1 0 01 1 01 1 '. In the second sample, Kevin can flip the entire string and still have the same score.","67":"A. Magic Spheres time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Carl is a beginner magician. He has a blue, b violet and c orange magic spheres. In one move he can transform two spheres of the same color into one sphere of any other color. To make a spell that has never been seen before, he needs at least x blue, y violet and z orange spheres. Can he get them (possible, in multiple actions)?\n\nInput\nThe first line of the input contains three integers a , b and c ( 0 \u2264 a , b , c \u2264 1 000 000 ) \u2014 the number of blue, violet and orange spheres that are in the magician's disposal. The second line of the input contains three integers, x , y and z ( 0 \u2264 x , y , z \u2264 1 000 000 ) \u2014 the number of blue, violet and orange spheres that he needs to get.\n\nOutput\nIf the wizard is able to obtain the required numbers of spheres, print \" Yes \". Otherwise, print \" No \". Examples\n\nInput\n4 4 0 2 1 2\n\nOutput\nYes\n\nInput\n5 6 1 2 7 2\n\nOutput\nNo\n\nInput\n3 3 3 2 2 2\n\nOutput\nYes\n\nNote\nIn the first sample the wizard has 4 blue and 4 violet spheres. In his first action he can turn two blue spheres into one violet one. After that he will have 2 blue and 5 violet spheres. Then he turns 4 violet spheres into 2 orange spheres and he ends up with 2 blue, 1 violet and 2 orange spheres, which is exactly what he needs.","69":"A. Saitama Destroys Hotel time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Saitama accidentally destroyed a hotel again. To repay the hotel company, Genos has volunteered to operate an elevator in one of its other hotels. The elevator is special \u2014 it starts on the top floor, can only move down, and has infinite capacity. Floors are numbered from 0 to s and elevator initially starts on floor s at time 0 . The elevator takes exactly 1 second to move down exactly 1 floor and negligible time to pick up passengers. Genos is given a list detailing when and on which floor passengers arrive. Please determine how long in seconds it will take Genos to bring all passengers to floor 0 .\n\nInput\nThe first line of input contains two integers n and s ( 1 \u2264 n \u2264 100 , 1 \u2264 s \u2264 1000 ) \u2014 the number of passengers and the number of the top floor respectively. The next n lines each contain two space-separated integers f i and t i ( 1 \u2264 f i \u2264 s , 1 \u2264 t i \u2264 1000 ) \u2014 the floor and the time of arrival in seconds for the passenger number i .\n\nOutput\nPrint a single integer \u2014 the minimum amount of time in seconds needed to bring all the passengers to floor 0 . Examples\n\nInput\n3 7 2 1 3 8 5 2\n\nOutput\n11\n\nInput\n5 10 2 77 3 33 8 21 9 12 10 64\n\nOutput\n79\n\nNote\nIn the first sample, it takes at least 11 seconds to bring all passengers to floor 0 . Here is how this could be done: 1. Move to floor 5 : takes 2 seconds. 2. Pick up passenger 3 . 3. Move to floor 3 : takes 2 seconds. 4. Wait for passenger 2 to arrive: takes 4 seconds. 5. Pick up passenger 2 . 6. Go to floor 2 : takes 1 second. 7. Pick up passenger 1 . 8. Go to floor 0 : takes 2 seconds. This gives a total of 2 + 2 + 4 + 1 + 2 = 11 seconds.","73":"A. New Year and Days time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today is Wednesday, the third day of the week. What's more interesting is that tomorrow is the last day of the year 2015. Limak is a little polar bear. He enjoyed this year a lot. Now, he is so eager to the coming year 2016. Limak wants to prove how responsible a bear he is. He is going to regularly save candies for the entire year 2016! He considers various saving plans. He can save one candy either on some fixed day of the week or on some fixed day of the month. Limak chose one particular plan. He isn't sure how many candies he will save in the 2016 with his plan. Please, calculate it and tell him.\n\nInput\nThe only line of the input is in one of the following two formats: \" x of week \" where x ( 1 \u2264 x \u2264 7 ) denotes the day of the week. The 1-st day is Monday and the 7-th one is Sunday. \" x of month \" where x ( 1 \u2264 x \u2264 31 ) denotes the day of the month.\n\nOutput\nPrint one integer \u2014 the number of candies Limak will save in the year 2016. Examples\n\nInput\n4 of week\n\nOutput\n52\n\nInput\n30 of month\n\nOutput\n11\n\nNote\nPolar bears use the Gregorian calendar. It is the most common calendar and you likely use it too. You can read about it on Wikipedia if you want to \u2013 https:\/\/en.wikipedia.org\/wiki\/Gregorian_calendar . The week starts with Monday. In the first sample Limak wants to save one candy on each Thursday (the 4-th day of the week). There are 52 Thursdays in the 2016. Thus, he will save 52 candies in total. In the second sample Limak wants to save one candy on the 30-th day of each month. There is the 30-th day in exactly 11 months in the 2016 \u2014 all months but February. It means that Limak will save 11 candies in total.","80":"A. Bulbs time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya wants to turn on Christmas lights consisting of m bulbs. Initially, all bulbs are turned off. There are n buttons, each of them is connected to some set of bulbs. Vasya can press any of these buttons. When the button is pressed, it turns on all the bulbs it's connected to. Can Vasya light up all the bulbs? If Vasya presses the button such that some bulbs connected to it are already turned on, they do not change their state, i.e. remain turned on.\n\nInput\nThe first line of the input contains integers n and m ( 1 \u2264 n , m \u2264 100 ) \u2014 the number of buttons and the number of bulbs respectively. Each of the next n lines contains x i ( 0 \u2264 x i \u2264 m ) \u2014 the number of bulbs that are turned on by the i -th button, and then x i numbers y ij ( 1 \u2264 y ij \u2264 m ) \u2014 the numbers of these bulbs.\n\nOutput\nIf it's possible to turn on all m bulbs print \" YES \", otherwise print \" NO \". Examples\n\nInput\n3 4 2 1 4 3 1 3 1 1 2\n\nOutput\nYES\n\nInput\n3 3 1 1 1 2 1 1\n\nOutput\nNO\n\nNote\nIn the first sample you can press each button once and turn on all the bulbs. In the 2 sample it is impossible to turn on the 3-rd lamp.","82":"A. Comparing Two Long Integers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given two very long integers a , b (leading zeroes are allowed). You should check what number a or b is greater or determine that they are equal. The input size is very large so don't use the reading of symbols one by one. Instead of that use the reading of a whole line or token. As input\/output can reach huge size it is recommended to use fast input\/output methods: for example, prefer to use scanf\/printf instead of cin\/cout in C++, prefer to use BufferedReader\/PrintWriter instead of Scanner\/System.out in Java . Don't use the function input() in Python2 instead of it use the function raw_input() .\n\nInput\nThe first line contains a non-negative integer a . The second line contains a non-negative integer b . The numbers a , b may contain leading zeroes. Each of them contains no more than 10 6 digits.\n\nOutput\nPrint the symbol \" < \" if a < b and the symbol \" > \" if a > b . If the numbers are equal print the symbol \" = \". Examples\n\nInput\n9 10\n\nOutput\n<\n\nInput\n11 10\n\nOutput\n>\n\nInput\n00012345 12345\n\nOutput\n=\n\nInput\n0123 9\n\nOutput\n>\n\nInput\n0123 111\n\nOutput\n>","84":"A. Elephant time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output An elephant decided to visit his friend. It turned out that the elephant's house is located at point 0 and his friend's house is located at point x ( x > 0) of the coordinate line. In one step the elephant can move 1 , 2 , 3 , 4 or 5 positions forward. Determine, what is the minimum number of steps he need to make in order to get to his friend's house.\n\nInput\nThe first line of the input contains an integer x ( 1 \u2264 x \u2264 1 000 000 ) \u2014 The coordinate of the friend's house.\n\nOutput\nPrint the minimum number of steps that elephant needs to make to get from point 0 to point x . Examples\n\nInput\n5\n\nOutput\n1\n\nInput\n12\n\nOutput\n3\n\nNote\nIn the first sample the elephant needs to make one step of length 5 to reach the point x . In the second sample the elephant can get to point x if he moves by 3 , 5 and 4 . There are other ways to get the optimal answer but the elephant cannot reach x in less than three moves.","94":"A. Slime Combining time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1 . You are going to play a game with these slimes. Initially, you put a single slime by itself in a row. Then, you will add the other n - 1 slimes one by one. When you add a slime, you place it at the right of all already placed slimes. Then, while the last two slimes in the row have the same value v , you combine them together to create a slime with value v + 1 . You would like to see what the final state of the row is after you've added all n slimes. Please print the values of the slimes in the row from left to right.\n\nInput\nThe first line of the input will contain a single integer, n ( 1 \u2264 n \u2264 100 000 ).\n\nOutput\nOutput a single line with k integers, where k is the number of slimes in the row after you've finished the procedure described in the problem statement. The i -th of these numbers should be the value of the i -th slime from the left. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n2\n\nOutput\n2\n\nInput\n3\n\nOutput\n2 1\n\nInput\n8\n\nOutput\n4\n\nNote\nIn the first sample, we only have a single slime with value 1 . The final state of the board is just a single slime with value 1 . In the second sample, we perform the following steps: Initially we place a single slime in a row by itself. Thus, row is initially 1 . Then, we will add another slime. The row is now 1 1 . Since two rightmost slimes have the same values, we should replace these slimes with one with value 2 . Thus, the final state of the board is 2 . In the third sample, after adding the first two slimes, our row is 2 . After adding one more slime, the row becomes 2 1 . In the last sample, the steps look as follows: 1 2 2 1 3 3 1 3 2 3 2 1 4","96":"B. Grandfather Dovlet\u2019s calculator time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Once Max found an electronic calculator from his grandfather Dovlet's chest. He noticed that the numbers were written with seven-segment indicators ( https:\/\/en.wikipedia.org\/wiki\/Seven-segment_display ). Max starts to type all the values from a to b . After typing each number Max resets the calculator. Find the total number of segments printed on the calculator. For example if a = 1 and b = 3 then at first the calculator will print 2 segments, then \u2014 5 segments and at last it will print 5 segments. So the total number of printed segments is 12 .\n\nInput\nThe only line contains two integers a , b ( 1 \u2264 a \u2264 b \u2264 10 6 ) \u2014 the first and the last number typed by Max.\n\nOutput\nPrint the only integer a \u2014 the total number of printed segments. Examples\n\nInput\n1 3\n\nOutput\n12\n\nInput\n10 15\n\nOutput\n39","98":"A. Wet Shark and Odd and Even time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today, Wet Shark is given n integers. Using any of these integers no more than once, Wet Shark wants to get maximum possible even (divisible by 2 ) sum. Please, calculate this value for Wet Shark. Note, that if Wet Shark uses no integers from the n integers, the sum is an even integer 0 .\n\nInput\nThe first line of the input contains one integer, n ( 1 \u2264 n \u2264 100 000 ). The next line contains n space separated integers given to Wet Shark. Each of these integers is in range from 1 to 10 9 , inclusive.\n\nOutput\nPrint the maximum possible even sum that can be obtained if we use some of the given integers. Examples\n\nInput\n3 1 2 3\n\nOutput\n6\n\nInput\n5 999999999 999999999 999999999 999999999 999999999\n\nOutput\n3999999996\n\nNote\nIn the first sample, we can simply take all three integers for a total sum of 6 . In the second sample Wet Shark should take any four out of five integers 999 999 999 .","102":"B. Making a String time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an alphabet consisting of n letters, your task is to make a string of the maximum possible length so that the following conditions are satisfied: the i -th letter occurs in the string no more than a i times; the number of occurrences of each letter in the string must be distinct for all the letters that occurred in the string at least once.\n\nInput\nThe first line of the input contains a single integer n ( 2 \u2264 n \u2264 26 ) \u2014 the number of letters in the alphabet. The next line contains n integers a i ( 1 \u2264 a i \u2264 10 9 ) \u2014 i -th of these integers gives the limitation on the number of occurrences of the i -th character in the string.\n\nOutput\nPrint a single integer \u2014 the maximum length of the string that meets all the requirements. Examples\n\nInput\n3 2 5 5\n\nOutput\n11\n\nInput\n3 1 1 2\n\nOutput\n3\n\nNote\nFor convenience let's consider an alphabet consisting of three letters: \" a \", \" b \", \" c \". In the first sample, some of the optimal strings are: \" cccaabbccbb \", \" aabcbcbcbcb \". In the second sample some of the optimal strings are: \" acc \", \" cbc \".","104":"A. Save Luke time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Luke Skywalker got locked up in a rubbish shredder between two presses. R2D2 is already working on his rescue, but Luke needs to stay alive as long as possible. For simplicity we will assume that everything happens on a straight line, the presses are initially at coordinates 0 and L , and they move towards each other with speed v 1 and v 2 , respectively. Luke has width d and is able to choose any position between the presses. Luke dies as soon as the distance between the presses is less than his width. Your task is to determine for how long Luke can stay alive.\n\nInput\nThe first line of the input contains four integers d , L , v 1 , v 2 ( 1 \u2264 d , L , v 1 , v 2 \u2264 10 000, d < L ) \u2014 Luke's width, the initial position of the second press and the speed of the first and second presses, respectively.\n\nOutput\nPrint a single real value \u2014 the maximum period of time Luke can stay alive for. Your answer will be considered correct if its absolute or relative error does not exceed 10 - 6 . Namely: let's assume that your answer is a , and the answer of the jury is b . The checker program will consider your answer correct, if . Examples\n\nInput\n2 6 2 2\n\nOutput\n1.00000000000000000000\n\nInput\n1 9 1 2\n\nOutput\n2.66666666666666650000\n\nNote\nIn the first sample Luke should stay exactly in the middle of the segment, that is at coordinates [2;4] , as the presses move with the same speed. In the second sample he needs to occupy the position . In this case both presses move to his edges at the same time.","106":"C. K-special Tables time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output People do many crazy things to stand out in a crowd. Some of them dance, some learn by heart rules of Russian language, some try to become an outstanding competitive programmers, while others collect funny math objects. Alis is among these collectors. Right now she wants to get one of k -special tables. In case you forget, the table n \u00d7 n is called k -special if the following three conditions are satisfied: every integer from 1 to n 2 appears in the table exactly once; in each row numbers are situated in increasing order; the sum of numbers in the k -th column is maximum possible. Your goal is to help Alice and find at least one k -special table of size n \u00d7 n . Both rows and columns are numbered from 1 to n , with rows numbered from top to bottom and columns numbered from left to right.\n\nInput\nThe first line of the input contains two integers n and k ( 1 \u2264 n \u2264 500, 1 \u2264 k \u2264 n ) \u2014 the size of the table Alice is looking for and the column that should have maximum possible sum.\n\nOutput\nFirst print the sum of the integers in the k -th column of the required table. Next n lines should contain the description of the table itself: first line should contains n elements of the first row, second line should contain n elements of the second row and so on. If there are multiple suitable table, you are allowed to print any. Examples\n\nInput\n4 1\n\nOutput\n28 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\nInput\n5 3\n\nOutput\n85 5 6 17 18 19 9 10 23 24 25 7 8 20 21 22 3 4 14 15 16 1 2 11 12 13","111":"A. Robot Sequence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Calvin the robot lies in an infinite rectangular grid. Calvin's source code contains a list of n commands, each either ' U ', ' R ', ' D ', or ' L ' \u2014 instructions to move a single square up, right, down, or left, respectively. How many ways can Calvin execute a non-empty contiguous substrings of commands and return to the same square he starts in? Two substrings are considered different if they have different starting or ending indices.\n\nInput\nThe first line of the input contains a single positive integer, n ( 1 \u2264 n \u2264 200 ) \u2014 the number of commands. The next line contains n characters, each either ' U ', ' R ', ' D ', or ' L ' \u2014 Calvin's source code.\n\nOutput\nPrint a single integer \u2014 the number of contiguous substrings that Calvin can execute and return to his starting square. Examples\n\nInput\n6 URLLDR\n\nOutput\n2\n\nInput\n4 DLUU\n\nOutput\n0\n\nInput\n7 RLRLRLR\n\nOutput\n12\n\nNote\nIn the first case, the entire source code works, as well as the \" RL \" substring in the second and third characters.\n\nNote\nthat, in the third case, the substring \" LR \" appears three times, and is therefore counted three times to the total result.","113":"A. XOR Equation time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Two positive integers a and b have a sum of s and a bitwise XOR of x . How many possible values are there for the ordered pair ( a , b ) ?\n\nInput\nThe first line of the input contains two integers s and x ( 2 \u2264 s \u2264 10 12 , 0 \u2264 x \u2264 10 12 ), the sum and bitwise xor of the pair of positive integers, respectively.\n\nOutput\nPrint a single integer, the number of solutions to the given conditions. If no solutions exist, print 0 . Examples\n\nInput\n9 5\n\nOutput\n4\n\nInput\n3 3\n\nOutput\n2\n\nInput\n5 2\n\nOutput\n0\n\nNote\nIn the first sample, we have the following solutions: (2, 7) , (3, 6) , (6, 3) , (7, 2) . In the second sample, the only solutions are (1, 2) and (2, 1) .","115":"C. Package Delivery time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Johnny drives a truck and must deliver a package from his hometown to the district center. His hometown is located at point 0 on a number line, and the district center is located at the point d . Johnny's truck has a gas tank that holds exactly n liters, and his tank is initially full. As he drives, the truck consumes exactly one liter per unit distance traveled. Moreover, there are m gas stations located at various points along the way to the district center. The i -th station is located at the point x i on the number line and sells an unlimited amount of fuel at a price of p i dollars per liter. Find the minimum cost Johnny must pay for fuel to successfully complete the delivery.\n\nInput\nThe first line of input contains three space separated integers d , n , and m ( 1 \u2264 n \u2264 d \u2264 10 9 , 1 \u2264 m \u2264 200 000 ) \u2014 the total distance to the district center, the volume of the gas tank, and the number of gas stations, respectively. Each of the next m lines contains two integers x i , p i ( 1 \u2264 x i \u2264 d - 1 , 1 \u2264 p i \u2264 10 6 ) \u2014 the position and cost of gas at the i -th gas station. It is guaranteed that the positions of the gas stations are distinct.\n\nOutput\nPrint a single integer \u2014 the minimum cost to complete the delivery. If there is no way to complete the delivery, print -1 . Examples\n\nInput\n10 4 4 3 5 5 8 6 3 8 4\n\nOutput\n22\n\nInput\n16 5 2 8 2 5 1\n\nOutput\n-1\n\nNote\nIn the first sample, Johnny's truck holds 4 liters. He can drive 3 units to the first gas station, buy 2 liters of gas there (bringing the tank to 3 liters total), drive 3 more units to the third gas station, buy 4 liters there to fill up his tank, and then drive straight to the district center. His total cost is 2\u00b75 + 4\u00b73 = 22 dollars. In the second sample, there is no way for Johnny to make it to the district center, as his tank cannot hold enough gas to take him from the latest gas station to the district center.","117":"A. Tennis Tournament time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A tennis tournament with n participants is running. The participants are playing by an olympic system, so the winners move on and the losers drop out. The tournament takes place in the following way (below, m is the number of the participants of the current round): let k be the maximal power of the number 2 such that k \u2264 m , k participants compete in the current round and a half of them passes to the next round, the other m - k participants pass to the next round directly, when only one participant remains, the tournament finishes. Each match requires b bottles of water for each participant and one bottle for the judge. Besides p towels are given to each participant for the whole tournament. Find the number of bottles and towels needed for the tournament.\n\nNote\nthat it's a tennis tournament so in each match two participants compete (one of them will win and the other will lose).\n\nInput\nThe only line contains three integers n , b , p ( 1 \u2264 n , b , p \u2264 500 ) \u2014 the number of participants and the parameters described in the problem statement.\n\nOutput\nPrint two integers x and y \u2014 the number of bottles and towels need for the tournament. Examples\n\nInput\n5 2 3\n\nOutput\n20 15\n\nInput\n8 2 4\n\nOutput\n35 32\n\nNote\nIn the first example will be three rounds: in the first round will be two matches and for each match 5 bottles of water are needed (two for each of the participants and one for the judge), in the second round will be only one match, so we need another 5 bottles of water, in the third round will also be only one match, so we need another 5 bottles of water. So in total we need 20 bottles of water. In the second example no participant will move on to some round directly.","119":"A. Far Relative\u2019s Birthday Cake time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Door's family is going celebrate Famil Doors's birthday party. They love Famil Door so they are planning to make his birthday cake weird! The cake is a n \u00d7 n square consisting of equal squares with side length 1 . Each square is either empty or consists of a single chocolate. They bought the cake and randomly started to put the chocolates on the cake. The value of Famil Door's happiness will be equal to the number of pairs of cells with chocolates that are in the same row or in the same column of the cake. Famil Doors's family is wondering what is the amount of happiness of Famil going to be? Please, note that any pair can be counted no more than once, as two different cells can't share both the same row and the same column.\n\nInput\nIn the first line of the input, you are given a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the side of the cake. Then follow n lines, each containing n characters. Empty cells are denoted with ' . ', while cells that contain chocolates are denoted by ' C '.\n\nOutput\nPrint the value of Famil Door's happiness, i.e. the number of pairs of chocolate pieces that share the same row or the same column. Examples\n\nInput\n3 .CC C.. C.C\n\nOutput\n4\n\nInput\n4 CC.. C..C .CC. .CC.\n\nOutput\n9\n\nNote\nIf we number rows from top to bottom and columns from left to right, then, pieces that share the same row in the first sample are: (1, 2) and (1, 3) (3, 1) and (3, 3) Pieces that share the same column are: (2, 1) and (3, 1) (1, 3) and (3, 3)","122":"C. Famil Door and Brackets time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output As Famil Door\u2019s birthday is coming, some of his friends (like Gabi) decided to buy a present for him. His friends are going to buy a string consisted of round brackets since Famil Door loves string of brackets of length n more than any other strings! The sequence of round brackets is called valid if and only if: the total number of opening brackets is equal to the total number of closing brackets; for any prefix of the sequence, the number of opening brackets is greater or equal than the number of closing brackets. Gabi bought a string s of length m ( m \u2264 n ) and want to complete it to obtain a valid sequence of brackets of length n . He is going to pick some strings p and q consisting of round brackets and merge them in a string p + s + q , that is add the string p at the beginning of the string s and string q at the end of the string s . Now he wonders, how many pairs of strings p and q exists, such that the string p + s + q is a valid sequence of round brackets. As this number may be pretty large, he wants to calculate it modulo 10 9 + 7 .\n\nInput\nFirst line contains n and m ( 1 \u2264 m \u2264 n \u2264 100 000, n - m \u2264 2000 ) \u2014 the desired length of the string and the length of the string bought by Gabi, respectively. The second line contains string s of length m consisting of characters ' ( ' and ' ) ' only.\n\nOutput\nPrint the number of pairs of string p and q such that p + s + q is a valid sequence of round brackets modulo 10 9 + 7 . Examples\n\nInput\n4 1 (\n\nOutput\n4\n\nInput\n4 4 (())\n\nOutput\n1\n\nInput\n4 3 (((\n\nOutput\n0\n\nNote\nIn the first sample there are four different valid pairs: p = \" ( \", q = \" )) \" p = \" () \", q = \" ) \" p = \"\", q = \" ()) \" p = \"\", q = \" )() \" In the second sample the only way to obtain a desired string is choose empty p and q . In the third sample there is no way to get a valid sequence of brackets.","124":"A. Again Twenty Five! time limit per test 0.5 seconds memory limit per test 64 megabytes input standard input output standard output The HR manager was disappointed again. The last applicant failed the interview the same way as 24 previous ones. \"Do I give such a hard task?\" \u2014 the HR manager thought. \"Just raise number 5 to the power of n and get last two digits of the number. Yes, of course, n can be rather big, and one cannot find the power using a calculator, but we need people who are able to think, not just follow the instructions.\" Could you pass the interview in the machine vision company in IT City?\n\nInput\nThe only line of the input contains a single integer n ( 2 \u2264 n \u2264 2\u00b710 18 ) \u2014 the power in which you need to raise number 5 .\n\nOutput\nOutput the last two digits of 5 n without spaces between them. Examples\n\nInput\n2\n\nOutput\n25","128":"C. Lucky Numbers time limit per test 0.5 seconds memory limit per test 64 megabytes input standard input output standard output The numbers of all offices in the new building of the Tax Office of IT City will have lucky numbers. Lucky number is a number that consists of digits 7 and 8 only. Find the maximum number of offices in the new building of the Tax Office given that a door-plate can hold a number not longer than n digits.\n\nInput\nThe only line of input contains one integer n ( 1 \u2264 n \u2264 55 ) \u2014 the maximum length of a number that a door-plate can hold.\n\nOutput\nOutput one integer \u2014 the maximum number of offices, than can have unique lucky numbers not longer than n digits. Examples\n\nInput\n2\n\nOutput\n6","132":"A. Ebony and Ivory time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Dante is engaged in a fight with \"The Savior\". Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non-negative number of shots. For every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.\n\nInput\nThe first line of the input contains three integers a , b , c ( 1 \u2264 a , b \u2264 100, 1 \u2264 c \u2264 10 000 ) \u2014 the number of units of damage dealt by Ebony gun and Ivory gun, and the total number of damage required to break the shield, respectively.\n\nOutput\nPrint \" Yes \" (without quotes) if Dante can deal exactly c damage to the shield and \" No \" (without quotes) otherwise. Examples\n\nInput\n4 6 15\n\nOutput\nNo\n\nInput\n3 2 7\n\nOutput\nYes\n\nInput\n6 11 6\n\nOutput\nYes\n\nNote\nIn the second sample, Dante can fire 1 bullet from Ebony and 2 from Ivory to deal exactly 1\u00b73 + 2\u00b72 = 7 damage. In the third sample, Dante can fire 1 bullet from ebony and no bullets from ivory to do 1\u00b76 + 0\u00b711 = 6 damage.","135":"B. Chat Order time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Polycarp is a big lover of killing time in social networks. A page with a chatlist in his favourite network is made so that when a message is sent to some friend, his friend's chat rises to the very top of the page. The relative order of the other chats doesn't change. If there was no chat with this friend before, then a new chat is simply inserted to the top of the list. Assuming that the chat list is initially empty, given the sequence of Polycaprus' messages make a list of chats after all of his messages are processed. Assume that no friend wrote any message to Polycarpus.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the number of Polycarpus' messages. Next n lines enlist the message recipients in the order in which the messages were sent. The name of each participant is a non-empty sequence of lowercase English letters of length at most 10 .\n\nOutput\nPrint all the recipients to who Polycarp talked to in the order of chats with them, from top to bottom. Examples\n\nInput\n4 alex ivan roman ivan\n\nOutput\nivan roman alex\n\nInput\n8 alina maria ekaterina darya darya ekaterina maria alina\n\nOutput\nalina maria ekaterina darya\n\nNote\nIn the first test case Polycarpus first writes to friend by name \" alex \", and the list looks as follows: alex Then Polycarpus writes to friend by name \" ivan \" and the list looks as follows: ivan alex Polycarpus writes the third message to friend by name \" roman \" and the list looks as follows: roman ivan alex Polycarpus writes the fourth message to friend by name \" ivan \", to who he has already sent a message, so the list of chats changes as follows: ivan roman alex","136":"A. Voting for Photos time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output After celebrating the midcourse the students of one of the faculties of the Berland State University decided to conduct a vote for the best photo. They published the photos in the social network and agreed on the rules to choose a winner: the photo which gets most likes wins. If multiple photoes get most likes, the winner is the photo that gets this number first. Help guys determine the winner photo by the records of likes.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the total likes to the published photoes. The second line contains n positive integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 1 000 000 ), where a i is the identifier of the photo which got the i -th like.\n\nOutput\nPrint the identifier of the photo which won the elections. Examples\n\nInput\n5 1 3 2 2 1\n\nOutput\n2\n\nInput\n9 100 200 300 200 100 300 300 100 200\n\nOutput\n300\n\nNote\nIn the first test sample the photo with id 1 got two likes (first and fifth), photo with id 2 got two likes (third and fourth), and photo with id 3 got one like (second). Thus, the winner is the photo with identifier 2 , as it got: more likes than the photo with id 3 ; as many likes as the photo with id 1 , but the photo with the identifier 2 got its second like earlier.","139":"A. Home Numbers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The main street of Berland is a straight line with n houses built along it ( n is an even number). The houses are located at both sides of the street. The houses with odd numbers are at one side of the street and are numbered from 1 to n - 1 in the order from the beginning of the street to the end (in the picture: from left to right). The houses with even numbers are at the other side of the street and are numbered from 2 to n in the order from the end of the street to its beginning (in the picture: from right to left). The corresponding houses with even and odd numbers are strictly opposite each other, that is, house 1 is opposite house n , house 3 is opposite house n - 2 , house 5 is opposite house n - 4 and so on. Vasya needs to get to house number a as quickly as possible. He starts driving from the beginning of the street and drives his car to house a . To get from the beginning of the street to houses number 1 and n , he spends exactly 1 second. He also spends exactly one second to drive the distance between two neighbouring houses. Vasya can park at any side of the road, so the distance between the beginning of the street at the houses that stand opposite one another should be considered the same. Your task is: find the minimum time Vasya needs to reach house a .\n\nInput\nThe first line of the input contains two integers, n and a ( 1 \u2264 a \u2264 n \u2264 100 000 ) \u2014 the number of houses on the street and the number of the house that Vasya needs to reach, correspondingly. It is guaranteed that number n is even.\n\nOutput\nPrint a single integer \u2014 the minimum time Vasya needs to get from the beginning of the street to house a . Examples\n\nInput\n4 2\n\nOutput\n2\n\nInput\n8 5\n\nOutput\n3\n\nNote\nIn the first sample there are only four houses on the street, two houses at each side. House 2 will be the last at Vasya's right. The second sample corresponds to picture with n = 8 . House 5 is the one before last at Vasya's left.","142":"A. Little Artem and Grasshopper time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Artem found a grasshopper. He brought it to his house and constructed a jumping area for him. The area looks like a strip of cells 1 \u00d7 n . Each cell contains the direction for the next jump and the length of that jump. Grasshopper starts in the first cell and follows the instructions written on the cells. Grasshopper stops immediately if it jumps out of the strip. Now Artem wants to find out if this will ever happen.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 length of the strip. Next line contains a string of length n which consists of characters \" < \" and \" > \" only, that provide the direction of the jump from the corresponding cell. Next line contains n integers d i ( 1 \u2264 d i \u2264 10 9 ) \u2014 the length of the jump from the i -th cell.\n\nOutput\nPrint \" INFINITE \" (without quotes) if grasshopper will continue his jumps forever. Otherwise print \" FINITE \" (without quotes). Examples\n\nInput\n2 >< 1 2\n\nOutput\nFINITE\n\nInput\n3 >>< 2 1 1\n\nOutput\nINFINITE\n\nNote\nIn the first sample grasshopper starts from the first cell and jumps to the right on the next cell. When he is in the second cell he needs to jump two cells left so he will jump out of the strip. Second sample grasshopper path is 1 - 3 - 2 - 3 - 2 - 3 and so on. The path is infinite.","144":"A. Parliament of Berland time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There are n parliamentarians in Berland. They are numbered with integers from 1 to n . It happened that all parliamentarians with odd indices are Democrats and all parliamentarians with even indices are Republicans. New parliament assembly hall is a rectangle consisting of a \u00d7 b chairs \u2014 a rows of b chairs each. Two chairs are considered neighbouring if they share as side. For example, chair number 5 in row number 2 is neighbouring to chairs number 4 and 6 in this row and chairs with number 5 in rows 1 and 3 . Thus, chairs have four neighbours in general, except for the chairs on the border of the hall We know that if two parliamentarians from one political party (that is two Democrats or two Republicans) seat nearby they spent all time discussing internal party issues. Write the program that given the number of parliamentarians and the sizes of the hall determine if there is a way to find a seat for any parliamentarian, such that no two members of the same party share neighbouring seats.\n\nInput\nThe first line of the input contains three integers n , a and b ( 1 \u2264 n \u2264 10 000 , 1 \u2264 a , b \u2264 100 ) \u2014 the number of parliamentarians, the number of rows in the assembly hall and the number of seats in each row, respectively.\n\nOutput\nIf there is no way to assigns seats to parliamentarians in a proper way print -1 . Otherwise print the solution in a lines, each containing b integers. The j -th integer of the i -th line should be equal to the index of parliamentarian occupying this seat, or 0 if this seat should remain empty. If there are multiple possible solution, you may print any of them. Examples\n\nInput\n3 2 2\n\nOutput\n0 3 1 2\n\nInput\n8 4 3\n\nOutput\n7 8 3 0 1 4 6 0 5 0 2 0\n\nInput\n10 2 2\n\nOutput\n-1\n\nNote\nIn the first sample there are many other possible solutions. For example, 3 2 0 1 and 2 1 3 0 The following assignment 3 2 1 0 is incorrect, because parliamentarians 1 and 3 are both from Democrats party but will occupy neighbouring seats.","146":"B. Mischievous Mess Makers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output It is a balmy spring afternoon, and Farmer John's n cows are ruminating about link-cut cacti in their stalls. The cows, labeled 1 through n , are arranged so that the i -th cow occupies the i -th stall from the left. However, Elsie, after realizing that she will forever live in the shadows beyond Bessie's limelight, has formed the Mischievous Mess Makers and is plotting to disrupt this beautiful pastoral rhythm. While Farmer John takes his k minute long nap, Elsie and the Mess Makers plan to repeatedly choose two distinct stalls and swap the cows occupying those stalls, making no more than one swap each minute. Being the meticulous pranksters that they are, the Mischievous Mess Makers would like to know the maximum messiness attainable in the k minutes that they have. We denote as p i the label of the cow in the i -th stall. The messiness of an arrangement of cows is defined as the number of pairs ( i , j ) such that i < j and p i > p j .\n\nInput\nThe first line of the input contains two integers n and k ( 1 \u2264 n , k \u2264 100 000 ) \u2014 the number of cows and the length of Farmer John's nap, respectively.\n\nOutput\nOutput a single integer, the maximum messiness that the Mischievous Mess Makers can achieve by performing no more than k swaps. Examples\n\nInput\n5 2\n\nOutput\n10\n\nInput\n1 10\n\nOutput\n0\n\nNote\nIn the first sample, the Mischievous Mess Makers can swap the cows in the stalls 1 and 5 during the first minute, then the cows in stalls 2 and 4 during the second minute. This reverses the arrangement of cows, giving us a total messiness of 10 . In the second sample, there is only one cow, so the maximum possible messiness is 0 .","148":"A. Joysticks time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Friends are going to play console. They have two joysticks and only one charger for them. Initially first joystick is charged at a 1 percent and second one is charged at a 2 percent. You can connect charger to a joystick only at the beginning of each minute. In one minute joystick either discharges by 2 percent (if not connected to a charger) or charges by 1 percent (if connected to a charger). Game continues while both joysticks have a positive charge. Hence, if at the beginning of minute some joystick is charged by 1 percent, it has to be connected to a charger, otherwise the game stops. If some joystick completely discharges (its charge turns to 0), the game also stops. Determine the maximum number of minutes that game can last. It is prohibited to pause the game, i. e. at each moment both joysticks should be enabled. It is allowed for joystick to be charged by more than 100 percent .\n\nInput\nThe first line of the input contains two positive integers a 1 and a 2 ( 1 \u2264 a 1 , a 2 \u2264 100 ), the initial charge level of first and second joystick respectively.\n\nOutput\nOutput the only integer, the maximum number of minutes that the game can last. Game continues until some joystick is discharged. Examples\n\nInput\n3 5\n\nOutput\n6\n\nInput\n4 4\n\nOutput\n5\n\nNote\nIn the first sample game lasts for 6 minute by using the following algorithm: at the beginning of the first minute connect first joystick to the charger, by the end of this minute first joystick is at 4%, second is at 3%; continue the game without changing charger, by the end of the second minute the first joystick is at 5%, second is at 1%; at the beginning of the third minute connect second joystick to the charger, after this minute the first joystick is at 3%, the second one is at 2%; continue the game without changing charger, by the end of the fourth minute first joystick is at 1%, second one is at 3%; at the beginning of the fifth minute connect first joystick to the charger, after this minute the first joystick is at 2%, the second one is at 1%; at the beginning of the sixth minute connect second joystick to the charger, after this minute the first joystick is at 0%, the second one is at 2%. After that the first joystick is completely discharged and the game is stopped.","155":"A. Gabriel and Caterpillar time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The 9 -th grade student Gabriel noticed a caterpillar on a tree when walking around in a forest after the classes. The caterpillar was on the height h 1 cm from the ground. On the height h 2 cm ( h 2 > h 1 ) on the same tree hung an apple and the caterpillar was crawling to the apple. Gabriel is interested when the caterpillar gets the apple. He noted that the caterpillar goes up by a cm per hour by day and slips down by b cm per hour by night. In how many days Gabriel should return to the forest to see the caterpillar get the apple. You can consider that the day starts at 10 am and finishes at 10 pm. Gabriel's classes finish at 2 pm. You can consider that Gabriel noticed the caterpillar just after the classes at 2 pm.\n\nNote\nthat the forest is magic so the caterpillar can slip down under the ground and then lift to the apple.\n\nInput\nThe first line contains two integers h 1 , h 2 ( 1 \u2264 h 1 < h 2 \u2264 10 5 ) \u2014 the heights of the position of the caterpillar and the apple in centimeters. The second line contains two integers a , b ( 1 \u2264 a , b \u2264 10 5 ) \u2014 the distance the caterpillar goes up by day and slips down by night, in centimeters per hour.\n\nOutput\nPrint the only integer k \u2014 the number of days Gabriel should wait to return to the forest and see the caterpillar getting the apple. If the caterpillar can't get the apple print the only integer - 1 . Examples\n\nInput\n10 30 2 1\n\nOutput\n1\n\nInput\n10 13 1 1\n\nOutput\n0\n\nInput\n10 19 1 2\n\nOutput\n-1\n\nInput\n1 50 5 4\n\nOutput\n1\n\nNote\nIn the first example at 10 pm of the first day the caterpillar gets the height 26 . At 10 am of the next day it slips down to the height 14 . And finally at 6 pm of the same day the caterpillar gets the apple.\n\nNote\nthat in the last example the caterpillar was slipping down under the ground and getting the apple on the next day.","156":"B. z-sort time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A student of z -school found a kind of sorting called z -sort. The array a with n elements are z -sorted if two conditions hold: a i \u2265 a i - 1 for all even i , a i \u2264 a i - 1 for all odd i > 1 . For example the arrays [1,2,1,2] and [1,1,1,1] are z -sorted while the array [1,2,3,4] isn\u2019t z -sorted. Can you make the array z -sorted?\n\nInput\nThe first line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of elements in the array a . The second line contains n integers a i ( 1 \u2264 a i \u2264 10 9 ) \u2014 the elements of the array a .\n\nOutput\nIf it's possible to make the array a z -sorted print n space separated integers a i \u2014 the elements after z -sort. Otherwise print the only word \" Impossible \". Examples\n\nInput\n4 1 2 2 1\n\nOutput\n1 2 1 2\n\nInput\n5 1 3 2 2 5\n\nOutput\n1 5 2 3 2","159":"A. Bear and Three Balls time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Limak is a little polar bear. He has n balls, the i -th ball has size t i . Limak wants to give one ball to each of his three friends. Giving gifts isn't easy \u2014 there are two rules Limak must obey to make friends happy: No two friends can get balls of the same size. No two friends can get balls of sizes that differ by more than 2 . For example, Limak can choose balls with sizes 4 , 5 and 3 , or balls with sizes 90 , 91 and 92 . But he can't choose balls with sizes 5 , 5 and 6 (two friends would get balls of the same size), and he can't choose balls with sizes 30 , 31 and 33 (because sizes 30 and 33 differ by more than 2 ). Your task is to check whether Limak can choose three balls that satisfy conditions above.\n\nInput\nThe first line of the input contains one integer n ( 3 \u2264 n \u2264 50 ) \u2014 the number of balls Limak has. The second line contains n integers t 1 , t 2 , ..., t n ( 1 \u2264 t i \u2264 1000 ) where t i denotes the size of the i -th ball.\n\nOutput\nPrint \" YES \" (without quotes) if Limak can choose three balls of distinct sizes, such that any two of them differ by no more than 2 . Otherwise, print \" NO \" (without quotes). Examples\n\nInput\n4 18 55 16 17\n\nOutput\nYES\n\nInput\n6 40 41 43 44 44 44\n\nOutput\nNO\n\nInput\n8 5 972 3 4 1 4 970 971\n\nOutput\nYES\n\nNote\nIn the first sample, there are 4 balls and Limak is able to choose three of them to satisfy the rules. He must must choose balls with sizes 18 , 16 and 17 . In the second sample, there is no way to give gifts to three friends without breaking the rules. In the third sample, there is even more than one way to choose balls: Choose balls with sizes 3 , 4 and 5 . Choose balls with sizes 972 , 970 , 971 .","161":"A. Round House time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya lives in a round building, whose entrances are numbered sequentially by integers from 1 to n . Entrance n and entrance 1 are adjacent. Today Vasya got bored and decided to take a walk in the yard. Vasya lives in entrance a and he decided that during his walk he will move around the house b entrances in the direction of increasing numbers (in this order entrance n should be followed by entrance 1 ). The negative value of b corresponds to moving | b | entrances in the order of decreasing numbers (in this order entrance 1 is followed by entrance n ). If b = 0 , then Vasya prefers to walk beside his entrance. Illustration for n = 6 , a = 2 , b = - 5 . Help Vasya to determine the number of the entrance, near which he will be at the end of his walk.\n\nInput\nThe single line of the input contains three space-separated integers n , a and b ( 1 \u2264 n \u2264 100, 1 \u2264 a \u2264 n , - 100 \u2264 b \u2264 100 ) \u2014 the number of entrances at Vasya's place, the number of his entrance and the length of his walk, respectively.\n\nOutput\nPrint a single integer k ( 1 \u2264 k \u2264 n ) \u2014 the number of the entrance where Vasya will be at the end of his walk. Examples\n\nInput\n6 2 -5\n\nOutput\n3\n\nInput\n5 1 3\n\nOutput\n4\n\nInput\n3 2 7\n\nOutput\n3\n\nNote\nThe first example is illustrated by the picture in the statements.","163":"A. Co-prime Array time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given an array of n elements, you must make it a co-prime array in as few moves as possible. In each move you can insert any positive integral number you want not greater than 10 9 in any place in the array. An array is co-prime if any two adjacent numbers of it are co-prime. In the number theory, two integers a and b are said to be co-prime if the only positive integer that divides both of them is 1 .\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of elements in the given array. The second line contains n integers a i ( 1 \u2264 a i \u2264 10 9 ) \u2014 the elements of the array a .\n\nOutput\nPrint integer k on the first line \u2014 the least number of elements needed to add to the array a to make it co-prime. The second line should contain n + k integers a j \u2014 the elements of the array a after adding k elements to it.\n\nNote\nthat the new array should be co-prime, so any two adjacent values should be co-prime. Also the new array should be got from the original array a by adding k elements to it. If there are multiple answers you can print any one of them. Example\n\nInput\n3 2 7 28\n\nOutput\n1 2 7 9 28","182":"B. Coat of Anticubism time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output As some of you know, cubism is a trend in art, where the problem of constructing volumetrical shape on a plane with a combination of three-dimensional geometric shapes comes to the fore. A famous sculptor Cicasso, whose self-portrait you can contemplate, hates cubism. He is more impressed by the idea to transmit two-dimensional objects through three-dimensional objects by using his magnificent sculptures. And his new project is connected with this. Cicasso wants to make a coat for the haters of anticubism. To do this, he wants to create a sculpture depicting a well-known geometric primitive \u2014 convex polygon . Cicasso prepared for this a few blanks, which are rods with integer lengths, and now he wants to bring them together. The i -th rod is a segment of length l i . The sculptor plans to make a convex polygon with a nonzero area, using all rods he has as its sides. Each rod should be used as a side to its full length. It is forbidden to cut, break or bend rods. However, two sides may form a straight angle . Cicasso knows that it is impossible to make a convex polygon with a nonzero area out of the rods with the lengths which he had chosen. Cicasso does not want to leave the unused rods, so the sculptor decides to make another rod-blank with an integer length so that his problem is solvable. Of course, he wants to make it as short as possible, because the materials are expensive, and it is improper deed to spend money for nothing. Help sculptor!\n\nInput\nThe first line contains an integer n ( 3 \u2264 n \u2264 10 5 ) \u2014 a number of rod-blanks. The second line contains n integers l i ( 1 \u2264 l i \u2264 10 9 ) \u2014 lengths of rods, which Cicasso already has. It is guaranteed that it is impossible to make a polygon with n vertices and nonzero area using the rods Cicasso already has.\n\nOutput\nPrint the only integer z \u2014 the minimum length of the rod, so that after adding it it can be possible to construct convex polygon with ( n + 1) vertices and nonzero area from all of the rods. Examples\n\nInput\n3 1 2 1\n\nOutput\n1\n\nInput\n5 20 4 3 2 1\n\nOutput\n11\n\nNote\nIn the first example triangle with sides {1 + 1 = 2, 2, 1} can be formed from a set of lengths {1, 1, 1, 2} . In the second example you can make a triangle with lengths {20, 11, 4 + 3 + 2 + 1 = 10} .","184":"A. Little Artem and Presents time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Artem got n stones on his birthday and now wants to give some of them to Masha. He knows that Masha cares more about the fact of receiving the present, rather than the value of that present, so he wants to give her stones as many times as possible. However, Masha remembers the last present she received, so Artem can't give her the same number of stones twice in a row. For example, he can give her 3 stones, then 1 stone, then again 3 stones, but he can't give her 3 stones and then again 3 stones right after that. How many times can Artem give presents to Masha?\n\nInput\nThe only line of the input contains a single integer n ( 1 \u2264 n \u2264 10 9 ) \u2014 number of stones Artem received on his birthday.\n\nOutput\nPrint the maximum possible number of times Artem can give presents to Masha. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n2\n\nOutput\n1\n\nInput\n3\n\nOutput\n2\n\nInput\n4\n\nOutput\n3\n\nNote\nIn the first sample, Artem can only give 1 stone to Masha. In the second sample, Atrem can give Masha 1 or 2 stones, though he can't give her 1 stone two times. In the third sample, Atrem can first give Masha 2 stones, a then 1 more stone. In the fourth sample, Atrem can first give Masha 1 stone, then 2 stones, and finally 1 stone again.","188":"B. Little Artem and Grasshopper time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Artem found a grasshopper. He brought it to his house and constructed a jumping area for him. The area looks like a strip of cells 1 \u00d7 n . Each cell contains the direction for the next jump and the length of that jump. Grasshopper starts in the first cell and follows the instructions written on the cells. Grasshopper stops immediately if it jumps out of the strip. Now Artem wants to find out if this will ever happen.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 length of the strip. Next line contains a string of length n which consists of characters \" < \" and \" > \" only, that provide the direction of the jump from the corresponding cell. Next line contains n integers d i ( 1 \u2264 d i \u2264 10 9 ) \u2014 the length of the jump from the i -th cell.\n\nOutput\nPrint \" INFINITE \" (without quotes) if grasshopper will continue his jumps forever. Otherwise print \" FINITE \" (without quotes). Examples\n\nInput\n2 >< 1 2\n\nOutput\nFINITE\n\nInput\n3 >>< 2 1 1\n\nOutput\nINFINITE\n\nNote\nIn the first sample grasshopper starts from the first cell and jumps to the right on the next cell. When he is in the second cell he needs to jump two cells left so he will jump out of the strip. Second sample grasshopper path is 1 - 3 - 2 - 3 - 2 - 3 and so on. The path is infinite.","193":"A. Holidays time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output On the planet Mars a year lasts exactly n days (there are no leap years on Mars). But Martians have the same weeks as earthlings \u2014 5 work days and then 2 days off. Your task is to determine the minimum possible and the maximum possible number of days off per year on Mars.\n\nInput\nThe first line of the input contains a positive integer n ( 1 \u2264 n \u2264 1 000 000 ) \u2014 the number of days in a year on Mars.\n\nOutput\nPrint two integers \u2014 the minimum possible and the maximum possible number of days off per year on Mars. Examples\n\nInput\n14\n\nOutput\n4 4\n\nInput\n2\n\nOutput\n0 2\n\nNote\nIn the first sample there are 14 days in a year on Mars, and therefore independently of the day a year starts with there will be exactly 4 days off . In the second sample there are only 2 days in a year on Mars, and they can both be either work days or days off.","195":"D2. Magic Powder - 2 time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The term of this problem is the same as the previous one, the only exception \u2014 increased restrictions.\n\nInput\nThe first line contains two positive integers n and k ( 1 \u2264 n \u2264 100 000, 1 \u2264 k \u2264 10 9 ) \u2014 the number of ingredients and the number of grams of the magic powder. The second line contains the sequence a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 10 9 ), where the i -th number is equal to the number of grams of the i -th ingredient, needed to bake one cookie. The third line contains the sequence b 1 , b 2 , ..., b n ( 1 \u2264 b i \u2264 10 9 ), where the i -th number is equal to the number of grams of the i -th ingredient, which Apollinaria has.\n\nOutput\nPrint the maximum number of cookies, which Apollinaria will be able to bake using the ingredients that she has and the magic powder. Examples\n\nInput\n1 1000000000 1 1000000000\n\nOutput\n2000000000\n\nInput\n10 1 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1 1 1 1 1 1 1 1 1 1\n\nOutput\n0\n\nInput\n3 1 2 1 4 11 3 16\n\nOutput\n4\n\nInput\n4 3 4 3 5 6 11 12 14 20\n\nOutput\n3","197":"A. Summer Camp time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Every year, hundreds of people come to summer camps, they learn new algorithms and solve hard problems. This is your first year at summer camp, and you are asked to solve the following problem. All integers starting with 1 are written in one line. The prefix of these line is \" 123456789101112131415... \". Your task is to print the n -th digit of this string (digits are numbered starting with 1 .\n\nInput\nThe only line of the input contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the position of the digit you need to print.\n\nOutput\nPrint the n -th digit of the line. Examples\n\nInput\n3\n\nOutput\n3\n\nInput\n11\n\nOutput\n0\n\nNote\nIn the first sample the digit at position 3 is ' 3 ', as both integers 1 and 2 consist on one digit. In the second sample, the digit at position 11 is ' 0 ', it belongs to the integer 10 .","199":"B. Different is Good time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A wise man told Kerem \"Different is good\" once, so Kerem wants all things in his life to be different. Kerem recently got a string s consisting of lowercase English letters. Since Kerem likes it when things are different, he wants all substrings of his string s to be distinct. Substring is a string formed by some number of consecutive characters of the string. For example, string \" aba \" has substrings \"\" (empty substring), \" a \", \" b \", \" a \", \" ab \", \" ba \", \" aba \". If string s has at least two equal substrings then Kerem will change characters at some positions to some other lowercase English letters. Changing characters is a very tiring job, so Kerem want to perform as few changes as possible. Your task is to find the minimum number of changes needed to make all the substrings of the given string distinct, or determine that it is impossible.\n\nInput\nThe first line of the input contains an integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the length of the string s . The second line contains the string s of length n consisting of only lowercase English letters.\n\nOutput\nIf it's impossible to change the string s such that all its substring are distinct print -1 . Otherwise print the minimum required number of changes. Examples\n\nInput\n2 aa\n\nOutput\n1\n\nInput\n4 koko\n\nOutput\n2\n\nInput\n5 murat\n\nOutput\n0\n\nNote\nIn the first sample one of the possible solutions is to change the first character to ' b '. In the second sample, one may change the first character to ' a ' and second character to ' b ', so the string becomes \" abko \".","201":"A. Bear and Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Bear Limak likes watching sports on TV. He is going to watch a game today. The game lasts 90 minutes and there are no breaks. Each minute can be either interesting or boring. If 15 consecutive minutes are boring then Limak immediately turns TV off. You know that there will be n interesting minutes t 1 , t 2 , ..., t n . Your task is to calculate for how many minutes Limak will watch the game.\n\nInput\nThe first line of the input contains one integer n ( 1 \u2264 n \u2264 90 ) \u2014 the number of interesting minutes. The second line contains n integers t 1 , t 2 , ..., t n ( 1 \u2264 t 1 < t 2 < ... t n \u2264 90 ), given in the increasing order.\n\nOutput\nPrint the number of minutes Limak will watch the game. Examples\n\nInput\n3 7 20 88\n\nOutput\n35\n\nInput\n9 16 20 30 40 50 60 70 80 90\n\nOutput\n15\n\nInput\n9 15 20 30 40 50 60 70 80 90\n\nOutput\n90\n\nNote\nIn the first sample, minutes 21, 22, ..., 35 are all boring and thus Limak will turn TV off immediately after the 35 -th minute. So, he would watch the game for 35 minutes. In the second sample, the first 15 minutes are boring. In the third sample, there are no consecutive 15 boring minutes. So, Limak will watch the whole game.","203":"B. Restoring Painting time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya works as a watchman in the gallery. Unfortunately, one of the most expensive paintings was stolen while he was on duty. He doesn't want to be fired, so he has to quickly restore the painting. He remembers some facts about it. The painting is a square 3 \u00d7 3 , each cell contains a single integer from 1 to n , and different cells may contain either different or equal integers. The sum of integers in each of four squares 2 \u00d7 2 is equal to the sum of integers in the top left square 2 \u00d7 2 . Four elements a , b , c and d are known and are located as shown on the picture below. Help Vasya find out the number of distinct squares the satisfy all the conditions above. Note, that this number may be equal to 0 , meaning Vasya remembers something wrong. Two squares are considered to be different, if there exists a cell that contains two different integers in different squares.\n\nInput\nThe first line of the input contains five integers n , a , b , c and d ( 1 \u2264 n \u2264 100 000 , 1 \u2264 a , b , c , d \u2264 n ) \u2014 maximum possible value of an integer in the cell and four integers that Vasya remembers.\n\nOutput\nPrint one integer \u2014 the number of distinct valid squares. Examples\n\nInput\n2 1 1 1 2\n\nOutput\n2\n\nInput\n3 3 1 2 3\n\nOutput\n6\n\nNote\nBelow are all the possible paintings for the first sample. In the second sample, only paintings displayed below satisfy all the rules.","205":"E. Trains and Statistic time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya commutes by train every day. There are n train stations in the city, and at the i -th station it's possible to buy only tickets to stations from i + 1 to a i inclusive. No tickets are sold at the last station. Let \u03c1 i , j be the minimum number of tickets one needs to buy in order to get from stations i to station j . As Vasya is fond of different useless statistic he asks you to compute the sum of all values \u03c1 i , j among all pairs 1 \u2264 i < j \u2264 n .\n\nInput\nThe first line of the input contains a single integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the number of stations. The second line contains n - 1 integer a i ( i + 1 \u2264 a i \u2264 n ), the i -th of them means that at the i -th station one may buy tickets to each station from i + 1 to a i inclusive.\n\nOutput\nPrint the sum of \u03c1 i , j among all pairs of 1 \u2264 i < j \u2264 n . Examples\n\nInput\n4 4 4 4\n\nOutput\n6\n\nInput\n5 2 3 5 5\n\nOutput\n17\n\nNote\nIn the first sample it's possible to get from any station to any other (with greater index) using only one ticket. The total number of pairs is 6 , so the answer is also 6 . Consider the second sample: \u03c1 1, 2 = 1 \u03c1 1, 3 = 2 \u03c1 1, 4 = 3 \u03c1 1, 5 = 3 \u03c1 2, 3 = 1 \u03c1 2, 4 = 2 \u03c1 2, 5 = 2 \u03c1 3, 4 = 1 \u03c1 3, 5 = 1 \u03c1 4, 5 = 1 Thus the answer equals 1 + 2 + 3 + 3 + 1 + 2 + 2 + 1 + 1 + 1 = 17 .","220":"A. Nicholas and Permutation time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Nicholas has an array a that contains n distinct integers from 1 to n . In other words, Nicholas has a permutation of size n . Nicholas want the minimum element (integer 1 ) and the maximum element (integer n ) to be as far as possible from each other. He wants to perform exactly one swap in order to maximize the distance between the minimum and the maximum elements. The distance between two elements is considered to be equal to the absolute difference between their positions.\n\nInput\nThe first line of the input contains a single integer n ( 2 \u2264 n \u2264 100 ) \u2014 the size of the permutation. The second line of the input contains n distinct integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 n ), where a i is equal to the element at the i -th position.\n\nOutput\nPrint a single integer \u2014 the maximum possible distance between the minimum and the maximum elements Nicholas can achieve by performing exactly one swap. Examples\n\nInput\n5 4 5 1 3 2\n\nOutput\n3\n\nInput\n7 1 6 5 3 4 7 2\n\nOutput\n6\n\nInput\n6 6 5 4 3 2 1\n\nOutput\n5\n\nNote\nIn the first sample, one may obtain the optimal answer by swapping elements 1 and 2 . In the second sample, the minimum and the maximum elements will be located in the opposite ends of the array if we swap 7 and 2 . In the third sample, the distance between the minimum and the maximum elements is already maximum possible, so we just perform some unnecessary swap, for example, one can swap 5 and 2 .","222":"A. Vanya and Fence time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vanya and his friends are walking along the fence of height h and they do not want the guard to notice them. In order to achieve this the height of each of the friends should not exceed h . If the height of some person is greater than h he can bend down and then he surely won't be noticed by the guard. The height of the i -th person is equal to a i . Consider the width of the person walking as usual to be equal to 1 , while the width of the bent person is equal to 2 . Friends want to talk to each other while walking, so they would like to walk in a single row. What is the minimum width of the road, such that friends can walk in a row and remain unattended by the guard?\n\nInput\nThe first line of the input contains two integers n and h ( 1 \u2264 n \u2264 1000 , 1 \u2264 h \u2264 1000 ) \u2014 the number of friends and the height of the fence, respectively. The second line contains n integers a i ( 1 \u2264 a i \u2264 2 h ), the i -th of them is equal to the height of the i -th person.\n\nOutput\nPrint a single integer \u2014 the minimum possible valid width of the road. Examples\n\nInput\n3 7 4 5 14\n\nOutput\n4\n\nInput\n6 1 1 1 1 1 1 1\n\nOutput\n6\n\nInput\n6 5 7 6 8 9 10 5\n\nOutput\n11\n\nNote\nIn the first sample, only person number 3 must bend down, so the required width is equal to 1 + 1 + 2 = 4 . In the second sample, all friends are short enough and no one has to bend, so the width 1 + 1 + 1 + 1 + 1 + 1 = 6 is enough. In the third sample, all the persons have to bend, except the last one. The required minimum width of the road is equal to 2 + 2 + 2 + 2 + 2 + 1 = 11 .","227":"D. Iterated Linear Function time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Consider a linear function f ( x ) = Ax + B . Let's define g (0) ( x ) = x and g ( n ) ( x ) = f ( g ( n - 1) ( x )) for n > 0 . For the given integer values A , B , n and x find the value of g ( n ) ( x ) modulo 10 9 + 7 .\n\nInput\nThe only line contains four integers A , B , n and x ( 1 \u2264 A , B , x \u2264 10 9 , 1 \u2264 n \u2264 10 18 ) \u2014 the parameters from the problem statement.\n\nNote\nthat the given value n can be too large, so you should use 64 -bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.\n\nOutput\nPrint the only integer s \u2014 the value g ( n ) ( x ) modulo 10 9 + 7 . Examples\n\nInput\n3 4 1 1\n\nOutput\n7\n\nInput\n3 4 2 1\n\nOutput\n25\n\nInput\n3 4 3 1\n\nOutput\n79","229":"A. Robbers' watch time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Robbers, who attacked the Gerda's cab, are very successful in covering from the kingdom police. To make the goal of catching them even harder, they use their own watches. First, as they know that kingdom police is bad at math, robbers use the positional numeral system with base 7 . Second, they divide one day in n hours, and each hour in m minutes. Personal watches of each robber are divided in two parts: first of them has the smallest possible number of places that is necessary to display any integer from 0 to n - 1 , while the second has the smallest possible number of places that is necessary to display any integer from 0 to m - 1 . Finally, if some value of hours or minutes can be displayed using less number of places in base 7 than this watches have, the required number of zeroes is added at the beginning of notation.\n\nNote\nthat to display number 0 section of the watches is required to have at least one place. Little robber wants to know the number of moments of time (particular values of hours and minutes), such that all digits displayed on the watches are distinct . Help her calculate this number.\n\nInput\nThe first line of the input contains two integers, given in the decimal notation, n and m ( 1 \u2264 n , m \u2264 10 9 ) \u2014 the number of hours in one day and the number of minutes in one hour, respectively.\n\nOutput\nPrint one integer in decimal notation \u2014 the number of different pairs of hour and minute, such that all digits displayed on the watches are distinct. Examples\n\nInput\n2 3\n\nOutput\n4\n\nInput\n8 2\n\nOutput\n5\n\nNote\nIn the first sample, possible pairs are: (0: 1) , (0: 2) , (1: 0) , (1: 2) . In the second sample, possible pairs are: (02: 1) , (03: 1) , (04: 1) , (05: 1) , (06: 1) .","231":"B. Little Robber Girl's Zoo time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Robber Girl likes to scare animals in her zoo for fun. She decided to arrange the animals in a row in the order of non-decreasing height. However, the animals were so scared that they couldn't stay in the right places. The robber girl was angry at first, but then she decided to arrange the animals herself. She repeatedly names numbers l and r such that r - l + 1 is even. After that animals that occupy positions between l and r inclusively are rearranged as follows: the animal at position l swaps places with the animal at position l + 1 , the animal l + 2 swaps with the animal l + 3 , ..., finally, the animal at position r - 1 swaps with the animal r . Help the robber girl to arrange the animals in the order of non-decreasing height. You should name at most 20 000 segments, since otherwise the robber girl will become bored and will start scaring the animals again.\n\nInput\nThe first line contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 number of animals in the robber girl's zoo. The second line contains n space-separated integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 10 9 ), where a i is the height of the animal occupying the i -th place.\n\nOutput\nPrint the sequence of operations that will rearrange the animals by non-decreasing height. The output should contain several lines, i -th of the lines should contain two space-separated integers l i and r i ( 1 \u2264 l i < r i \u2264 n ) \u2014 descriptions of segments the robber girl should name. The segments should be described in the order the operations are performed. The number of operations should not exceed 20 000 . If the animals are arranged correctly from the start, you are allowed to output nothing. Examples\n\nInput\n4 2 1 4 3\n\nOutput\n1 4\n\nInput\n7 36 28 57 39 66 69 68\n\nOutput\n1 4 6 7\n\nInput\n5 1 2 1 2 1\n\nOutput\n2 5 3 4 1 4 1 4\n\nNote\nNote that you don't have to minimize the number of operations. Any solution that performs at most 20 000 operations is allowed.","232":"A. Free Ice Cream time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output After their adventure with the magic mirror Kay and Gerda have returned home and sometimes give free ice cream to kids in the summer. At the start of the day they have x ice cream packs. Since the ice cream is free, people start standing in the queue before Kay and Gerda's house even in the night. Each person in the queue wants either to take several ice cream packs for himself and his friends or to give several ice cream packs to Kay and Gerda (carriers that bring ice cream have to stand in the same queue). If a carrier with d ice cream packs comes to the house, then Kay and Gerda take all his packs. If a child who wants to take d ice cream packs comes to the house, then Kay and Gerda will give him d packs if they have enough ice cream, otherwise the child will get no ice cream at all and will leave in distress. Kay wants to find the amount of ice cream they will have after all people will leave from the queue, and Gerda wants to find the number of distressed kids.\n\nInput\nThe first line contains two space-separated integers n and x ( 1 \u2264 n \u2264 1000 , 0 \u2264 x \u2264 10 9 ). Each of the next n lines contains a character ' + ' or ' - ', and an integer d i , separated by a space ( 1 \u2264 d i \u2264 10 9 ). Record \" + d i \" in i -th line means that a carrier with d i ice cream packs occupies i -th place from the start of the queue, and record \" - d i \" means that a child who wants to take d i packs stands in i -th place.\n\nOutput\nPrint two space-separated integers \u2014 number of ice cream packs left after all operations, and number of kids that left the house in distress. Examples\n\nInput\n5 7 + 5 - 10 - 20 + 40 - 20\n\nOutput\n22 1\n\nInput\n5 17 - 16 - 2 - 98 + 100 - 98\n\nOutput\n3 2\n\nNote\nConsider the first sample. Initially Kay and Gerda have 7 packs of ice cream. Carrier brings 5 more, so now they have 12 packs. A kid asks for 10 packs and receives them. There are only 2 packs remaining. Another kid asks for 20 packs. Kay and Gerda do not have them, so the kid goes away distressed. Carrier bring 40 packs, now Kay and Gerda have 42 packs. Kid asks for 20 packs and receives them. There are 22 packs remaining.","235":"A. Opponents time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Arya has n opponents in the school. Each day he will fight with all opponents who are present this day. His opponents have some fighting plan that guarantees they will win, but implementing this plan requires presence of them all. That means if one day at least one of Arya's opponents is absent at the school, then Arya will beat all present opponents. Otherwise, if all opponents are present, then they will beat Arya. For each opponent Arya knows his schedule \u2014 whether or not he is going to present on each particular day. Tell him the maximum number of consecutive days that he will beat all present opponents. Note, that if some day there are no opponents present, Arya still considers he beats all the present opponents.\n\nInput\nThe first line of the input contains two integers n and d ( 1 \u2264 n , d \u2264 100 ) \u2014 the number of opponents and the number of days, respectively. The i -th of the following d lines contains a string of length n consisting of characters ' 0 ' and ' 1 '. The j -th character of this string is ' 0 ' if the j -th opponent is going to be absent on the i -th day.\n\nOutput\nPrint the only integer \u2014 the maximum number of consecutive days that Arya will beat all present opponents. Examples\n\nInput\n2 2 10 00\n\nOutput\n2\n\nInput\n4 1 0100\n\nOutput\n1\n\nInput\n4 5 1101 1111 0110 1011 1111\n\nOutput\n2\n\nNote\nIn the first and the second samples, Arya will beat all present opponents each of the d days. In the third sample, Arya will beat his opponents on days 1 , 3 and 4 and his opponents will beat him on days 2 and 5 . Thus, the maximum number of consecutive winning days is 2 , which happens on days 3 and 4 .","237":"A1. Collective Mindsets (easy) time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Tonight is brain dinner night and all zombies will gather together to scarf down some delicious brains. The artful Heidi plans to crash the party, incognito, disguised as one of them. Her objective is to get away with at least one brain, so she can analyze the zombies' mindset back home and gain a strategic advantage. They will be N guests tonight: N - 1 real zombies and a fake one, our Heidi. The living-dead love hierarchies as much as they love brains: each one has a unique rank in the range 1 to N - 1 , and Heidi, who still appears slightly different from the others, is attributed the highest rank, N . Tonight there will be a chest with brains on display and every attendee sees how many there are. These will then be split among the attendees according to the following procedure: The zombie of the highest rank makes a suggestion on who gets how many brains (every brain is an indivisible entity). A vote follows. If at least half of the attendees accept the offer, the brains are shared in the suggested way and the feast begins. But if majority is not reached, then the highest-ranked zombie is killed, and the next zombie in hierarchy has to make a suggestion. If he is killed too, then the third highest-ranked makes one, etc. (It's enough to have exactly half of the votes \u2013 in case of a tie, the vote of the highest-ranked alive zombie counts twice, and he will of course vote in favor of his own suggestion in order to stay alive.) You should know that zombies are very greedy and sly, and they know this too \u2013 basically all zombie brains are alike. Consequently, a zombie will never accept an offer which is suboptimal for him. That is, if an offer is not strictly better than a potential later offer, he will vote against it. And make no mistake: while zombies may normally seem rather dull, tonight their intellects are perfect. Each zombie's priorities for tonight are, in descending order: survive the event (they experienced death already once and know it is no fun), get as many brains as possible. Heidi goes first and must make an offer which at least half of the attendees will accept, and which allocates at least one brain for Heidi herself. What is the smallest number of brains that have to be in the chest for this to be possible?\n\nInput\nThe only line of input contains one integer: N , the number of attendees ( 1 \u2264 N \u2264 10 9 ).\n\nOutput\nOutput one integer: the smallest number of brains in the chest which allows Heidi to take one brain home. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n4\n\nOutput\n2 Note","239":"A2. Collective Mindsets (medium) time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Way to go! Heidi now knows how many brains there must be for her to get one. But throwing herself in the midst of a clutch of hungry zombies is quite a risky endeavor. Hence Heidi wonders: what is the smallest number of brains that must be in the chest for her to get out at all (possibly empty-handed, but alive)? The brain dinner night will evolve just as in the previous subtask: the same crowd is present, the N - 1 zombies have the exact same mindset as before and Heidi is to make the first proposal, which must be accepted by at least half of the attendees for her to survive.\n\nInput\nThe only line of input contains one integer: N , the number of attendees ( 1 \u2264 N \u2264 10 9 ) .\n\nOutput\nOutput one integer: the smallest number of brains in the chest which allows Heidi to merely survive. Examples\n\nInput\n1\n\nOutput\n0\n\nInput\n3\n\nOutput\n1\n\nInput\n99\n\nOutput\n49","243":"A. Fashion in Berland time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output According to rules of the Berland fashion, a jacket should be fastened by all the buttons except only one , but not necessarily it should be the last one. Also if the jacket has only one button, it should be fastened, so the jacket will not swinging open. You are given a jacket with n buttons. Determine if it is fastened in a right way.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of buttons on the jacket. The second line contains n integers a i ( 0 \u2264 a i \u2264 1 ). The number a i = 0 if the i -th button is not fastened. Otherwise a i = 1 .\n\nOutput\nIn the only line print the word \" YES \" if the jacket is fastened in a right way. Otherwise print the word \" NO \". Examples\n\nInput\n3 1 0 1\n\nOutput\nYES\n\nInput\n3 1 0 0\n\nOutput\nNO","246":"B. Connecting Universities time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output Treeland is a country in which there are n towns connected by n - 1 two-way road such that it's possible to get from any town to any other town. In Treeland there are 2 k universities which are located in different towns. Recently, the president signed the decree to connect universities by high-speed network.The Ministry of Education understood the decree in its own way and decided that it was enough to connect each university with another one by using a cable. Formally, the decree will be done! To have the maximum sum in the budget, the Ministry decided to divide universities into pairs so that the total length of the required cable will be maximum. In other words, the total distance between universities in k pairs should be as large as possible. Help the Ministry to find the maximum total distance. Of course, each university should be present in only one pair. Consider that all roads have the same length which is equal to 1 .\n\nInput\nThe first line of the input contains two integers n and k ( 2 \u2264 n \u2264 200 000 , 1 \u2264 k \u2264 n \/ 2 ) \u2014 the number of towns in Treeland and the number of university pairs. Consider that towns are numbered from 1 to n . The second line contains 2 k distinct integers u 1 , u 2 , ..., u 2 k ( 1 \u2264 u i \u2264 n ) \u2014 indices of towns in which universities are located. The next n - 1 line contains the description of roads. Each line contains the pair of integers x j and y j ( 1 \u2264 x j , y j \u2264 n ), which means that the j -th road connects towns x j and y j . All of them are two-way roads. You can move from any town to any other using only these roads.\n\nOutput\nPrint the maximum possible sum of distances in the division of universities into k pairs. Examples\n\nInput\n7 2 1 5 6 2 1 3 3 2 4 5 3 7 4 3 4 6\n\nOutput\n6\n\nInput\n9 3 3 2 1 6 5 9 8 9 3 2 2 7 3 4 7 6 4 5 2 1 2 8\n\nOutput\n9\n\nNote\nThe figure below shows one of possible division into pairs in the first test. If you connect universities number 1 and 6 (marked in red) and universities number 2 and 5 (marked in blue) by using the cable, the total distance will equal 6 which will be the maximum sum in this example.","248":"A. As Fast As Possible time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output On vacations n pupils decided to go on excursion and gather all together. They need to overcome the path with the length l meters. Each of the pupils will go with the speed equal to v 1 . To get to the excursion quickly, it was decided to rent a bus, which has seats for k people (it means that it can't fit more than k people at the same time) and the speed equal to v 2 . In order to avoid seasick, each of the pupils want to get into the bus no more than once . Determine the minimum time required for all n pupils to reach the place of excursion. Consider that the embarkation and disembarkation of passengers, as well as the reversal of the bus, take place immediately and this time can be neglected.\n\nInput\nThe first line of the input contains five positive integers n , l , v 1 , v 2 and k ( 1 \u2264 n \u2264 10 000 , 1 \u2264 l \u2264 10 9 , 1 \u2264 v 1 < v 2 \u2264 10 9 , 1 \u2264 k \u2264 n ) \u2014 the number of pupils, the distance from meeting to the place of excursion, the speed of each pupil, the speed of bus and the number of seats in the bus.\n\nOutput\nPrint the real number \u2014 the minimum time in which all pupils can reach the place of excursion. Your answer will be considered correct if its absolute or relative error won't exceed 10 - 6 . Examples\n\nInput\n5 10 1 2 5\n\nOutput\n5.0000000000\n\nInput\n3 6 1 2 1\n\nOutput\n4.7142857143\n\nNote\nIn the first sample we should immediately put all five pupils to the bus. The speed of the bus equals 2 and the distance is equal to 10 , so the pupils will reach the place of excursion in time 10 \/ 2 = 5 .","250":"A. Mishka and Game time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Mishka is a little polar bear. As known, little bears loves spending their free time playing dice for chocolates. Once in a wonderful sunny morning, walking around blocks of ice, Mishka met her friend Chris, and they started playing the game. Rules of the game are very simple: at first number of rounds n is defined. In every round each of the players throws a cubical dice with distinct numbers from 1 to 6 written on its faces. Player, whose value after throwing the dice is greater, wins the round. In case if player dice values are equal, no one of them is a winner. In average, player, who won most of the rounds, is the winner of the game. In case if two players won the same number of rounds, the result of the game is draw. Mishka is still very little and can't count wins and losses, so she asked you to watch their game and determine its result. Please help her!\n\nInput\nThe first line of the input contains single integer n n ( 1 \u2264 n \u2264 100 ) \u2014 the number of game rounds. The next n lines contains rounds description. i -th of them contains pair of integers m i and c i ( 1 \u2264 m i , c i \u2264 6 ) \u2014 values on dice upper face after Mishka's and Chris' throws in i -th round respectively.\n\nOutput\nIf Mishka is the winner of the game, print \"Mishka\" (without quotes) in the only line. If Chris is the winner of the game, print \"Chris\" (without quotes) in the only line. If the result of the game is draw, print \"Friendship is magic!^^\" (without quotes) in the only line. Examples\n\nInput\n3 3 5 2 1 4 2\n\nOutput\nMishka\n\nInput\n2 6 1 1 6\n\nOutput\nFriendship is magic!^^\n\nInput\n3 1 5 3 3 2 2\n\nOutput\nChris\n\nNote\nIn the first sample case Mishka loses the first round, but wins second and third rounds and thus she is the winner of the game. In the second sample case Mishka wins the first round, Chris wins the second round, and the game ends with draw with score 1:1. In the third sample case Chris wins the first round, but there is no winner of the next two rounds. The winner of the game is Chris.","252":"A. Hulk time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Dr. Bruce Banner hates his enemies (like others don't). As we all know, he can barely talk when he turns into the incredible Hulk. That's why he asked you to help him to express his feelings. Hulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on... For example if n = 1 , then his feeling is \" I hate it \" or if n = 2 it's \" I hate that I love it \", and if n = 3 it's \" I hate that I love that I hate it \" and so on. Please help Dr. Banner.\n\nInput\nThe only line of the input contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of layers of love and hate.\n\nOutput\nPrint Dr.Banner's feeling in one line. Examples\n\nInput\n1\n\nOutput\nI hate it\n\nInput\n2\n\nOutput\nI hate that I love it\n\nInput\n3\n\nOutput\nI hate that I love that I hate it","261":"A. Beru-taxi time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasiliy lives at point ( a , b ) of the coordinate plane. He is hurrying up to work so he wants to get out of his house as soon as possible. New app suggested n available Beru-taxi nearby. The i -th taxi is located at point ( x i , y i ) and moves with a speed v i . Consider that each of n drivers will move directly to Vasiliy and with a maximum possible speed. Compute the minimum time when Vasiliy will get in any of Beru-taxi cars.\n\nInput\nThe first line of the input contains two integers a and b ( - 100 \u2264 a , b \u2264 100 ) \u2014 coordinates of Vasiliy's home. The second line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of available Beru-taxi cars nearby. The i -th of the following n lines contains three integers x i , y i and v i ( - 100 \u2264 x i , y i \u2264 100 , 1 \u2264 v i \u2264 100 ) \u2014 the coordinates of the i -th car and its speed. It's allowed that several cars are located at the same point. Also, cars may be located at exactly the same point where Vasiliy lives.\n\nOutput\nPrint a single real value \u2014 the minimum time Vasiliy needs to get in any of the Beru-taxi cars. You answer will be considered correct if its absolute or relative error does not exceed 10 - 6 . Namely: let's assume that your answer is a , and the answer of the jury is b . The checker program will consider your answer correct, if . Examples\n\nInput\n0 0 2 2 0 1 0 2 2\n\nOutput\n1.00000000000000000000\n\nInput\n1 3 3 3 3 2 -2 3 6 -2 7 10\n\nOutput\n0.50000000000000000000\n\nNote\nIn the first sample, first taxi will get to Vasiliy in time 2 , and second will do this in time 1 , therefore 1 is the answer. In the second sample, cars 2 and 3 will arrive simultaneously.","263":"A. Brain's Photos time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Small, but very brave, mouse Brain was not accepted to summer school of young villains. He was upset and decided to postpone his plans of taking over the world, but to become a photographer instead. As you may know, the coolest photos are on the film (because you can specify the hashtag #film for such). Brain took a lot of colourful pictures on colored and black-and-white film. Then he developed and translated it into a digital form. But now, color and black-and-white photos are in one folder, and to sort them, one needs to spend more than one hour! As soon as Brain is a photographer not programmer now, he asks you to help him determine for a single photo whether it is colored or black-and-white. Photo can be represented as a matrix sized n \u00d7 m , and each element of the matrix stores a symbol indicating corresponding pixel color. There are only 6 colors: 'C' (cyan) 'M' (magenta) 'Y' (yellow) 'W' (white) 'G' (grey) 'B' (black) The photo is considered black-and-white if it has only white, black and grey pixels in it. If there are any of cyan, magenta or yellow pixels in the photo then it is considered colored.\n\nInput\nThe first line of the input contains two integers n and m ( 1 \u2264 n , m \u2264 100 ) \u2014 the number of photo pixel matrix rows and columns respectively. Then n lines describing matrix rows follow. Each of them contains m space-separated characters describing colors of pixels in a row. Each character in the line is one of the 'C', 'M', 'Y', 'W', 'G' or 'B'.\n\nOutput\nPrint the \"#Black&White\" (without quotes), if the photo is black-and-white and \"#Color\" (without quotes), if it is colored, in the only line. Examples\n\nInput\n2 2 C M Y Y\n\nOutput\n#Color\n\nInput\n3 2 W W W W B B\n\nOutput\n#Black&White\n\nInput\n1 1 W\n\nOutput\n#Black&White","269":"C. Pythagorean Triples time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Katya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples . For example, triples (3, 4, 5) , (5, 12, 13) and (6, 8, 10) are Pythagorean triples. Here Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length?\n\nNote\nthat the side which length is specified can be a cathetus as well as hypotenuse. Katya had no problems with completing this task. Will you do the same?\n\nInput\nThe only line of the input contains single integer n ( 1 \u2264 n \u2264 10 9 ) \u2014 the length of some side of a right triangle.\n\nOutput\nPrint two integers m and k ( 1 \u2264 m , k \u2264 10 18 ), such that n , m and k form a Pythagorean triple, in the only line. In case if there is no any Pythagorean triple containing integer n , print - 1 in the only line. If there are many answers, print any of them. Examples\n\nInput\n3\n\nOutput\n4 5\n\nInput\n6\n\nOutput\n8 10\n\nInput\n1\n\nOutput\n-1\n\nInput\n17\n\nOutput\n144 145\n\nInput\n67\n\nOutput\n2244 2245\n\nNote\nIllustration for the first sample.","272":"B. Recover the String time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output For each string s consisting of characters ' 0 ' and ' 1 ' one can define four integers a 00 , a 01 , a 10 and a 11 , where a xy is the number of subsequences of length 2 of the string s equal to the sequence { x , y } . In these problem you are given four integers a 00 , a 01 , a 10 , a 11 and have to find any non-empty string s that matches them, or determine that there is no such string. One can prove that if at least one answer exists, there exists an answer of length no more than 1 000 000 .\n\nInput\nThe only line of the input contains four non-negative integers a 00 , a 01 , a 10 and a 11 . Each of them doesn't exceed 10 9 .\n\nOutput\nIf there exists a non-empty string that matches four integers from the input, print it in the only line of the output. Otherwise, print \" Impossible \". The length of your answer must not exceed 1 000 000 . Examples\n\nInput\n1 2 3 4\n\nOutput\nImpossible\n\nInput\n1 2 2 1\n\nOutput\n0110","274":"A. Letters Cyclic Shift time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given a non-empty string s consisting of lowercase English letters. You have to pick exactly one non-empty substring of s and shift all its letters ' z ' ' y ' ' x ' ' b ' ' a ' ' z '. In other words, each character is replaced with the previous character of English alphabet and ' a ' is replaced with ' z '. What is the lexicographically minimum string that can be obtained from s by performing this shift exactly once?\n\nInput\nThe only line of the input contains the string s ( 1 \u2264 | s | \u2264 100 000 ) consisting of lowercase English letters.\n\nOutput\nPrint the lexicographically minimum string that can be obtained from s by shifting letters of exactly one non-empty substring. Examples\n\nInput\ncodeforces\n\nOutput\nbncdenqbdr\n\nInput\nabacaba\n\nOutput\naaacaba\n\nNote\nString s is lexicographically smaller than some other string t of the same length if there exists some 1 \u2264 i \u2264 | s | , such that s 1 = t 1 , s 2 = t 2 , ..., s i - 1 = t i - 1 , and s i < t i .","276":"A. Juicer time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Kolya is going to make fresh orange juice. He has n oranges of sizes a 1 , a 2 , ..., a n . Kolya will put them in the juicer in the fixed order, starting with orange of size a 1 , then orange of size a 2 and so on. To be put in the juicer the orange must have size not exceeding b , so if Kolya sees an orange that is strictly greater he throws it away and continues with the next one. The juicer has a special section to collect waste. It overflows if Kolya squeezes oranges of the total size strictly greater than d . When it happens Kolya empties the waste section (even if there are no more oranges) and continues to squeeze the juice. How many times will he have to empty the waste section?\n\nInput\nThe first line of the input contains three integers n , b and d ( 1 \u2264 n \u2264 100 000 , 1 \u2264 b \u2264 d \u2264 1 000 000 ) \u2014 the number of oranges, the maximum size of the orange that fits in the juicer and the value d , which determines the condition when the waste section should be emptied. The second line contains n integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 1 000 000 ) \u2014 sizes of the oranges listed in the order Kolya is going to try to put them in the juicer.\n\nOutput\nPrint one integer \u2014 the number of times Kolya will have to empty the waste section. Examples\n\nInput\n2 7 10 5 6\n\nOutput\n1\n\nInput\n1 5 10 7\n\nOutput\n0\n\nInput\n3 10 10 5 7 7\n\nOutput\n1\n\nInput\n1 1 1 1\n\nOutput\n0\n\nNote\nIn the first sample, Kolya will squeeze the juice from two oranges and empty the waste section afterwards. In the second sample, the orange won't fit in the juicer so Kolya will have no juice at all.","278":"A. King Moves time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The only king stands on the standard chess board. You are given his position in format \" cd \", where c is the column from 'a' to 'h' and d is the row from '1' to '8'. Find the number of moves permitted for the king. Check the king's moves here https:\/\/en.wikipedia.org\/wiki\/King_(chess) . King moves from the position e4\n\nInput\nThe only line contains the king's position in the format \" cd \", where 'c' is the column from 'a' to 'h' and 'd' is the row from '1' to '8'.\n\nOutput\nPrint the only integer x \u2014 the number of moves permitted for the king. Example\n\nInput\ne4\n\nOutput\n8","280":"A. Bus to Udayland time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output ZS the Coder and Chris the Baboon are travelling to Udayland! To get there, they have to get on the special IOI bus. The IOI bus has n rows of seats. There are 4 seats in each row, and the seats are separated into pairs by a walkway. When ZS and Chris came, some places in the bus was already occupied. ZS and Chris are good friends. They insist to get a pair of neighbouring empty seats . Two seats are considered neighbouring if they are in the same row and in the same pair. Given the configuration of the bus, can you help ZS and Chris determine where they should sit?\n\nInput\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 1000) \u2014 the number of rows of seats in the bus. Then, n lines follow. Each line contains exactly 5 characters, the first two of them denote the first pair of seats in the row, the third character denotes the walkway (it always equals '|') and the last two of them denote the second pair of seats in the row. Each character, except the walkway, equals to 'O' or to 'X'. 'O' denotes an empty seat, 'X' denotes an occupied seat. See the sample cases for more details.\n\nOutput\nIf it is possible for Chris and ZS to sit at neighbouring empty seats, print \"YES\" (without quotes) in the first line. In the next n lines print the bus configuration, where the characters in the pair of seats for Chris and ZS is changed with characters '+'. Thus the configuration should differ from the input one by exactly two charaters (they should be equal to 'O' in the input and to '+' in the output). If there is no pair of seats for Chris and ZS, print \"NO\" (without quotes) in a single line. If there are multiple solutions, you may print any of them. Examples\n\nInput\n6 OO|OX XO|XX OX|OO XX|OX OO|OO OO|XX\n\nOutput\nYES ++|OX XO|XX OX|OO XX|OX OO|OO OO|XX\n\nInput\n4 XO|OX XO|XX OX|OX XX|OX\n\nOutput\nNO\n\nInput\n5 XX|XX XX|XX XO|OX XO|OO OX|XO\n\nOutput\nYES XX|XX XX|XX XO|OX XO|++ OX|XO\n\nNote\nNote that the following is an incorrect configuration for the first sample case because the seats must be in the same pair. O+|+X XO|XX OX|OO XX|OX OO|OO OO|XX","284":"A. Meeting of Old Friends time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Today an outstanding event is going to happen in the forest \u2014 hedgehog Filya will come to his old fried Sonya! Sonya is an owl and she sleeps during the day and stay awake from minute l 1 to minute r 1 inclusive. Also, during the minute k she prinks and is unavailable for Filya. Filya works a lot and he plans to visit Sonya from minute l 2 to minute r 2 inclusive. Calculate the number of minutes they will be able to spend together.\n\nInput\nThe only line of the input contains integers l 1 , r 1 , l 2 , r 2 and k ( 1 \u2264 l 1 , r 1 , l 2 , r 2 , k \u2264 10 18 , l 1 \u2264 r 1 , l 2 \u2264 r 2 ), providing the segments of time for Sonya and Filya and the moment of time when Sonya prinks.\n\nOutput\nPrint one integer \u2014 the number of minutes Sonya and Filya will be able to spend together. Examples\n\nInput\n1 10 9 20 1\n\nOutput\n2\n\nInput\n1 100 50 200 75\n\nOutput\n50\n\nNote\nIn the first sample, they will be together during minutes 9 and 10 . In the second sample, they will be together from minute 50 to minute 74 and from minute 76 to minute 100 .","285":"A. Vitya in the Countryside time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Every summer Vitya comes to visit his grandmother in the countryside. This summer, he got a huge wart. Every grandma knows that one should treat warts when the moon goes down. Thus, Vitya has to catch the moment when the moon is down. Moon cycle lasts 30 days. The size of the visible part of the moon (in Vitya's units) for each day is 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 14 , 13 , 12 , 11 , 10 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , and then cycle repeats, thus after the second 1 again goes 0 . As there is no internet in the countryside, Vitya has been watching the moon for n consecutive days and for each of these days he wrote down the size of the visible part of the moon. Help him find out whether the moon will be up or down next day, or this cannot be determined by the data he has.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 92 ) \u2014 the number of consecutive days Vitya was watching the size of the visible part of the moon. The second line contains n integers a i ( 0 \u2264 a i \u2264 15 ) \u2014 Vitya's records. It's guaranteed that the input data is consistent.\n\nOutput\nIf Vitya can be sure that the size of visible part of the moon on day n + 1 will be less than the size of the visible part on day n , then print \" DOWN \" at the only line of the output. If he might be sure that the size of the visible part will increase, then print \" UP \". If it's impossible to determine what exactly will happen with the moon, print -1 . Examples\n\nInput\n5 3 4 5 6 7\n\nOutput\nUP\n\nInput\n7 12 13 14 15 14 13 12\n\nOutput\nDOWN\n\nInput\n1 8\n\nOutput\n-1\n\nNote\nIn the first sample, the size of the moon on the next day will be equal to 8 , thus the answer is \" UP \". In the second sample, the size of the moon on the next day will be 11 , thus the answer is \" DOWN \". In the third sample, there is no way to determine whether the size of the moon on the next day will be 7 or 9 , thus the answer is -1 .","289":"B. Anatoly and Cockroaches time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Anatoly lives in the university dorm as many other students do. As you know, cockroaches are also living there together with students. Cockroaches might be of two colors: black and red. There are n cockroaches living in Anatoly's room. Anatoly just made all his cockroaches to form a single line. As he is a perfectionist, he would like the colors of cockroaches in the line to alternate . He has a can of black paint and a can of red paint. In one turn he can either swap any two cockroaches, or take any single cockroach and change it's color. Help Anatoly find out the minimum number of turns he needs to make the colors of cockroaches in the line alternate.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of cockroaches. The second line contains a string of length n , consisting of characters ' b ' and ' r ' that denote black cockroach and red cockroach respectively.\n\nOutput\nPrint one integer \u2014 the minimum number of moves Anatoly has to perform in order to make the colors of cockroaches in the line to alternate. Examples\n\nInput\n5 rbbrr\n\nOutput\n1\n\nInput\n5 bbbbb\n\nOutput\n2\n\nInput\n3 rbr\n\nOutput\n0\n\nNote\nIn the first sample, Anatoly has to swap third and fourth cockroaches. He needs 1 turn to do this. In the second sample, the optimum answer is to paint the second and the fourth cockroaches red. This requires 2 turns. In the third sample, the colors of cockroaches in the line are alternating already, thus the answer is 0 .","293":"A. One-dimensional Japanese Crossword time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Recently Adaltik discovered japanese crosswords. Japanese crossword is a picture, represented as a table sized a \u00d7 b squares, and each square is colored white or black. There are integers to the left of the rows and to the top of the columns, encrypting the corresponding row or column. The number of integers represents how many groups of black squares there are in corresponding row or column, and the integers themselves represents the number of consecutive black squares in corresponding group (you can find more detailed explanation in Wikipedia https:\/\/en.wikipedia.org\/wiki\/Japanese_crossword ). Adaltik decided that the general case of japanese crossword is too complicated and drew a row consisting of n squares (e.g. japanese crossword sized 1 \u00d7 n ), which he wants to encrypt in the same way as in japanese crossword. The example of encrypting of a single row of japanese crossword. Help Adaltik find the numbers encrypting the row he drew.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the row. The second line of the input contains a single string consisting of n characters ' B ' or ' W ', (' B ' corresponds to black square, ' W ' \u2014 to white square in the row that Adaltik drew).\n\nOutput\nThe first line should contain a single integer k \u2014 the number of integers encrypting the row, e.g. the number of groups of black squares in the row. The second line should contain k integers, encrypting the row, e.g. corresponding to sizes of groups of consecutive black squares in the order from left to right. Examples\n\nInput\n3 BBW\n\nOutput\n1 2\n\nInput\n5 BWBWB\n\nOutput\n3 1 1 1\n\nInput\n4 WWWW\n\nOutput\n0\n\nInput\n4 BBBB\n\nOutput\n1 4\n\nInput\n13 WBBBBWWBWBBBW\n\nOutput\n3 4 1 3\n\nNote\nThe last sample case correspond to the picture in the statement.","299":"B. Verse Pattern time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given a text consisting of n lines. Each line contains some space-separated words, consisting of lowercase English letters. We define a syllable as a string that contains exactly one vowel and any arbitrary number (possibly none) of consonants. In English alphabet following letters are considered to be vowels: ' a ', ' e ', ' i ', ' o ', ' u ' and ' y '. Each word of the text that contains at least one vowel can be divided into syllables. Each character should be a part of exactly one syllable. For example, the word \" mamma \" can be divided into syllables as \" ma \" and \" mma \", \" mam \" and \" ma \", and \" mamm \" and \" a \". Words that consist of only consonants should be ignored. The verse patterns for the given text is a sequence of n integers p 1 , p 2 , ..., p n . Text matches the given verse pattern if for each i from 1 to n one can divide words of the i -th line in syllables in such a way that the total number of syllables is equal to p i . You are given the text and the verse pattern. Check, if the given text matches the given verse pattern.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of lines in the text. The second line contains integers p 1 , ..., p n ( 0 \u2264 p i \u2264 100 ) \u2014 the verse pattern. Next n lines contain the text itself. Text consists of lowercase English letters and spaces. It's guaranteed that all lines are non-empty, each line starts and ends with a letter and words are separated by exactly one space. The length of each line doesn't exceed 100 characters.\n\nOutput\nIf the given text matches the given verse pattern, then print \" YES \" (without quotes) in the only line of the output. Otherwise, print \" NO \" (without quotes). Examples\n\nInput\n3 2 2 3 intel code ch allenge\n\nOutput\nYES\n\nInput\n4 1 2 3 1 a bcdefghi jklmnopqrstu vwxyz\n\nOutput\nNO\n\nInput\n4 13 11 15 15 to be or not to be that is the question whether tis nobler in the mind to suffer the slings and arrows of outrageous fortune or to take arms against a sea of troubles\n\nOutput\nYES\n\nNote\nIn the first sample, one can split words into syllables in the following way: in-tel co-de ch al-len-ge Since the word \" ch \" in the third line doesn't contain vowels, we can ignore it. As the result we get 2 syllabels in first two lines and 3 syllables in the third one.","301":"A. The New Year: Meeting Friends time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There are three friend living on the straight line Ox in Lineland. The first friend lives at the point x 1 , the second friend lives at the point x 2 , and the third friend lives at the point x 3 . They plan to celebrate the New Year together, so they need to meet at one point. What is the minimum total distance they have to travel in order to meet at some point and celebrate the New Year? It's guaranteed that the optimal answer is always integer.\n\nInput\nThe first line of the input contains three distinct integers x 1 , x 2 and x 3 ( 1 \u2264 x 1 , x 2 , x 3 \u2264 100 ) \u2014 the coordinates of the houses of the first, the second and the third friends respectively.\n\nOutput\nPrint one integer \u2014 the minimum total distance the friends need to travel in order to meet together. Examples\n\nInput\n7 1 4\n\nOutput\n6\n\nInput\n30 20 10\n\nOutput\n20\n\nNote\nIn the first sample, friends should meet at the point 4 . Thus, the first friend has to travel the distance of 3 (from the point 7 to the point 4 ), the second friend also has to travel the distance of 3 (from the point 1 to the point 4 ), while the third friend should not go anywhere because he lives at the point 4 .","307":"A. Checking the Calendar time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given names of two days of the week. Please, determine whether it is possible that during some non-leap year the first day of some month was equal to the first day of the week you are given, while the first day of the next month was equal to the second day of the week you are given. Both months should belong to one year . In this problem, we consider the Gregorian calendar to be used. The number of months in this calendar is equal to 12. The number of days in months during any non-leap year is: 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 . Names of the days of the week are given with lowercase English letters: \" monday \", \" tuesday \", \" wednesday \", \" thursday \", \" friday \", \" saturday \", \" sunday \".\n\nInput\nThe input consists of two lines, each of them containing the name of exactly one day of the week. It's guaranteed that each string in the input is from the set \" monday \", \" tuesday \", \" wednesday \", \" thursday \", \" friday \", \" saturday \", \" sunday \".\n\nOutput\nPrint \" YES \" (without quotes) if such situation is possible during some non-leap year. Otherwise, print \" NO \" (without quotes). Examples\n\nInput\nmonday tuesday\n\nOutput\nNO\n\nInput\nsunday sunday\n\nOutput\nYES\n\nInput\nsaturday tuesday\n\nOutput\nYES\n\nNote\nIn the second sample, one can consider February 1 and March 1 of year 2015. Both these days were Sundays. In the third sample, one can consider July 1 and August 1 of year 2017. First of these two days is Saturday, while the second one is Tuesday.","309":"A. Jumping Ball time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In a new version of the famous Pinball game, one of the most important parts of the game field is a sequence of n bumpers. The bumpers are numbered with integers from 1 to n from left to right. There are two types of bumpers. They are denoted by the characters ' < ' and ' > '. When the ball hits the bumper at position i it goes one position to the right (to the position i + 1 ) if the type of this bumper is ' > ', or one position to the left (to i - 1 ) if the type of the bumper at position i is ' < '. If there is no such position, in other words if i - 1 < 1 or i + 1 > n , the ball falls from the game field. Depending on the ball's starting position, the ball may eventually fall from the game field or it may stay there forever. You are given a string representing the bumpers' types. Calculate the number of positions such that the ball will eventually fall from the game field if it starts at that position.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 200 000 ) \u2014 the length of the sequence of bumpers. The second line contains the string, which consists of the characters ' < ' and ' > '. The character at the i -th position of this string corresponds to the type of the i -th bumper.\n\nOutput\nPrint one integer \u2014 the number of positions in the sequence such that the ball will eventually fall from the game field if it starts at that position. Examples\n\nInput\n4 <<><\n\nOutput\n2\n\nInput\n5 >>>>>\n\nOutput\n5\n\nInput\n4 >><<\n\nOutput\n0\n\nNote\nIn the first sample, the ball will fall from the field if starts at position 1 or position 2 . In the second sample, any starting position will result in the ball falling from the field.","313":"B. Food on the Plane time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A new airplane SuperPuperJet has an infinite number of rows, numbered with positive integers starting with 1 from cockpit to tail. There are six seats in each row, denoted with letters from ' a ' to ' f '. Seats ' a ', ' b ' and ' c ' are located to the left of an aisle (if one looks in the direction of the cockpit), while seats ' d ', ' e ' and ' f ' are located to the right. Seats ' a ' and ' f ' are located near the windows, while seats ' c ' and ' d ' are located near the aisle. It's lunch time and two flight attendants have just started to serve food. They move from the first rows to the tail, always maintaining a distance of two rows from each other because of the food trolley. Thus, at the beginning the first attendant serves row 1 while the second attendant serves row 3 . When both rows are done they move one row forward: the first attendant serves row 2 while the second attendant serves row 4 . Then they move three rows forward and the first attendant serves row 5 while the second attendant serves row 7 . Then they move one row forward again and so on. Flight attendants work with the same speed: it takes exactly 1 second to serve one passenger and 1 second to move one row forward. Each attendant first serves the passengers on the seats to the right of the aisle and then serves passengers on the seats to the left of the aisle (if one looks in the direction of the cockpit). Moreover, they always serve passengers in order from the window to the aisle. Thus, the first passenger to receive food in each row is located in seat ' f ', and the last one \u2014 in seat ' c '. Assume that all seats are occupied. Vasya has seat s in row n and wants to know how many seconds will pass before he gets his lunch.\n\nInput\nThe only line of input contains a description of Vasya's seat in the format ns , where n ( 1 \u2264 n \u2264 10 18 ) is the index of the row and s is the seat in this row, denoted as letter from ' a ' to ' f '. The index of the row and the seat are not separated by a space.\n\nOutput\nPrint one integer \u2014 the number of seconds Vasya has to wait until he gets his lunch. Examples\n\nInput\n1f\n\nOutput\n1\n\nInput\n2d\n\nOutput\n10\n\nInput\n4a\n\nOutput\n11\n\nInput\n5e\n\nOutput\n18\n\nNote\nIn the first sample, the first flight attendant serves Vasya first, so Vasya gets his lunch after 1 second. In the second sample, the flight attendants will spend 6 seconds to serve everyone in the rows 1 and 3 , then they will move one row forward in 1 second. As they first serve seats located to the right of the aisle in order from window to aisle, Vasya has to wait 3 more seconds. The total is 6 + 1 + 3 = 10 .","317":"A. Interview with Oleg time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarp has interviewed Oleg and has written the interview down without punctuation marks and spaces to save time. Thus, the interview is now a string s consisting of n lowercase English letters. There is a filler word ogo in Oleg's speech. All words that can be obtained from ogo by adding go several times to the end of it are also considered to be fillers. For example, the words ogo , ogogo , ogogogo are fillers, but the words go , og , ogog , ogogog and oggo are not fillers. The fillers have maximal size, for example, for ogogoo speech we can't consider ogo a filler and goo as a normal phrase. We should consider ogogo as a filler here. To print the interview, Polycarp has to replace each of the fillers with three asterisks.\n\nNote\nthat a filler word is replaced with exactly three asterisks regardless of its length. Polycarp has dealt with this problem in no time. Can you do the same? The clock is ticking!\n\nInput\nThe first line contains a positive integer n ( 1 \u2264 n \u2264 100 ) \u2014 the length of the interview. The second line contains the string s of length n , consisting of lowercase English letters.\n\nOutput\nPrint the interview text after the replacement of each of the fillers with \" *** \". It is allowed for the substring \" *** \" to have several consecutive occurences. Examples\n\nInput\n7 aogogob\n\nOutput\na***b\n\nInput\n13 ogogmgogogogo\n\nOutput\n***gmg***\n\nInput\n9 ogoogoogo\n\nOutput\n*********\n\nNote\nThe first sample contains one filler word ogogo , so the interview for printing is \" a***b \". The second sample contains two fillers ogo and ogogogo . Thus, the interview is transformed to \" ***gmg*** \".","319":"B. Minimum and Maximum time limit per test 4 seconds memory limit per test 512 megabytes input standard input output standard output This is an interactive problem. You have to use flush operation right after printing each line. For example, in C++ you should use function fflush(stdout) , in Java \u2014 System.out.flush() , in Pascal \u2014 flush(output) and in Python \u2014 sys.stdout.flush() . In this problem, you need to find maximal and minimal elements of an array. What could be simpler? You can imagine that the jury has an array, and initially you know the only number n \u2014 array's length. Array's elements are numbered from 1 to n . You are allowed to compare two elements of the array by using their indices i and j . There are three possible responses to this query: ' < ' (if a i is less than a j ), ' = ' (if a i is equal to a j ) and finally ' > ' (if a i is greater than a j ). It's known that it's always possible to find both maximal and minimal elements of the array by using no more than comparisons, where \u2308 x \u2309 is the result of rounding x up. Write the program that will find positions of the minimum and the maximum in the jury's array of length n , by using no more than f ( n ) comparisons. Interaction Each test for this problem will contain one or more arrays. You have to find positions of minimal and maximal elements for each of these arrays. The first line of the input contains integer T ( 1 \u2264 T \u2264 1000 ) \u2014 number of arrays in the test. Thus, at the beginning, you program should read number T , and then it should solve the problem for T jury's arrays one by one. Then input for each array goes. Firstly, your program has to read the number n ( 1 \u2264 n \u2264 50 ) \u2014 the length of the array. It will be provided in the next line of the input. Further, your program can perform comparisons or report that the answer is found. To perform a comparison, you have to output string of the following pattern \u00ab ? i j \u00bb ( i and j must be integer numbers from 1 to n ) \u2014 the indices of the elements to compare in the current query. To report the indices of minimal and maximal elements of the hidden array, your program have to output a line in the form \u00ab ! i j \u00bb ( i and j must be integer numbers from 1 to n ), where i is an index of the minimal element of array, and j is an index of the maximal element of the array. If there are several possible answers to the problem, you can output any of them. There are several possible responses for a comparison: ' < ' \u2014 if a i is less than a j , ' = ' \u2014 if a i is equal to a j , ' > ' \u2014 if a i is greater than a j . For an array of length n your program can make at most comparisons.\n\nNote\nthat the operation of reporting an answer (\u00ab ! i j \u00bb ) is not included into the value of f ( n ) . After the answer is reported, your program has to solve the problem for the next array or it should terminate if all T arrays are processed. Example\n\nInput\n2 2 > 3 = =\n\nOutput\n? 1 2 ! 2 1 ? 3 1 ? 2 1 ! 2 3","329":"A. Night at the Museum time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Grigoriy, like the hero of one famous comedy film, found a job as a night security guard at the museum. At first night he received embosser and was to take stock of the whole exposition. Embosser is a special devise that allows to \"print\" the text of a plastic tape. Text is printed sequentially, character by character. The device consists of a wheel with a lowercase English letters written in a circle, static pointer to the current letter and a button that print the chosen letter. At one move it's allowed to rotate the alphabetic wheel one step clockwise or counterclockwise. Initially, static pointer points to letter ' a '. Other letters are located as shown on the picture: After Grigoriy add new item to the base he has to print its name on the plastic tape and attach it to the corresponding exhibit. It's not required to return the wheel to its initial position with pointer on the letter ' a '. Our hero is afraid that some exhibits may become alive and start to attack him, so he wants to print the names as fast as possible. Help him, for the given string find the minimum number of rotations of the wheel required to print it.\n\nInput\nThe only line of input contains the name of some exhibit \u2014 the non-empty string consisting of no more than 100 characters. It's guaranteed that the string consists of only lowercase English letters.\n\nOutput\nPrint one integer \u2014 the minimum number of rotations of the wheel, required to print the name given in the input. Examples\n\nInput\nzeus\n\nOutput\n18\n\nInput\nmap\n\nOutput\n35\n\nInput\nares\n\nOutput\n34\n\nNote\nTo print the string from the first sample it would be optimal to perform the following sequence of rotations: from ' a ' to ' z ' ( 1 rotation counterclockwise), from ' z ' to ' e ' ( 5 clockwise rotations), from ' e ' to ' u ' ( 10 rotations counterclockwise), from ' u ' to ' s ' ( 2 counterclockwise rotations). In total, 1 + 5 + 10 + 2 = 18 rotations are required.","331":"A. Buy a Shovel time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarp urgently needs a shovel! He comes to the shop and chooses an appropriate one. The shovel that Policarp chooses is sold for k burles. Assume that there is an unlimited number of such shovels in the shop. In his pocket Polycarp has an unlimited number of \"10-burle coins\" and exactly one coin of r burles ( 1 \u2264 r \u2264 9 ). What is the minimum number of shovels Polycarp has to buy so that he can pay for the purchase without any change? It is obvious that he can pay for 10 shovels without any change (by paying the requied amount of 10-burle coins and not using the coin of r burles). But perhaps he can buy fewer shovels and pay without any change.\n\nNote\nthat Polycarp should buy at least one shovel.\n\nInput\nThe single line of input contains two integers k and r ( 1 \u2264 k \u2264 1000 , 1 \u2264 r \u2264 9 ) \u2014 the price of one shovel and the denomination of the coin in Polycarp's pocket that is different from \"10-burle coins\". Remember that he has an unlimited number of coins in the denomination of 10, that is, Polycarp has enough money to buy any number of shovels.\n\nOutput\nPrint the required minimum number of shovels Polycarp has to buy so that he can pay for them without any change. Examples\n\nInput\n117 3\n\nOutput\n9\n\nInput\n237 7\n\nOutput\n1\n\nInput\n15 2\n\nOutput\n2\n\nNote\nIn the first example Polycarp can buy 9 shovels and pay 9\u00b7117 = 1053 burles. Indeed, he can pay this sum by using 10-burle coins and one 3-burle coin. He can't buy fewer shovels without any change. In the second example it is enough for Polycarp to buy one shovel. In the third example Polycarp should buy two shovels and pay 2\u00b715 = 30 burles. It is obvious that he can pay this sum without any change.","333":"B. Cormen \u2014 The Best Friend Of a Man time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Recently a dog was bought for Polycarp. The dog's name is Cormen. Now Polycarp has a lot of troubles. For example, Cormen likes going for a walk. Empirically Polycarp learned that the dog needs at least k walks for any two consecutive days in order to feel good. For example, if k = 5 and yesterday Polycarp went for a walk with Cormen 2 times, today he has to go for a walk at least 3 times. Polycarp analysed all his affairs over the next n days and made a sequence of n integers a 1 , a 2 , ..., a n , where a i is the number of times Polycarp will walk with the dog on the i -th day while doing all his affairs (for example, he has to go to a shop, throw out the trash, etc.). Help Polycarp determine the minimum number of walks he needs to do additionaly in the next n days so that Cormen will feel good during all the n days. You can assume that on the day before the first day and on the day after the n -th day Polycarp will go for a walk with Cormen exactly k times. Write a program that will find the minumum number of additional walks and the appropriate schedule \u2014 the sequence of integers b 1 , b 2 , ..., b n ( b i \u2265 a i ), where b i means the total number of walks with the dog on the i -th day.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 n , k \u2264 500 ) \u2014 the number of days and the minimum number of walks with Cormen for any two consecutive days. The second line contains integers a 1 , a 2 , ..., a n ( 0 \u2264 a i \u2264 500 ) \u2014 the number of walks with Cormen on the i -th day which Polycarp has already planned.\n\nOutput\nIn the first line print the smallest number of additional walks that Polycarp should do during the next n days so that Cormen will feel good during all days. In the second line print n integers b 1 , b 2 , ..., b n , where b i \u2014 the total number of walks on the i -th day according to the found solutions ( a i \u2264 b i for all i from 1 to n ). If there are multiple solutions, print any of them. Examples\n\nInput\n3 5 2 0 1\n\nOutput\n4 2 3 2\n\nInput\n3 1 0 0 0\n\nOutput\n1 0 1 0\n\nInput\n4 6 2 4 3 5\n\nOutput\n0 2 4 3 5","345":"A. Grasshopper And the String time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output One day, the Grasshopper was jumping on the lawn and found a piece of paper with a string. Grasshopper became interested what is the minimum jump ability he should have in order to be able to reach the far end of the string, jumping only on vowels of the English alphabet. Jump ability is the maximum possible length of his jump. Formally, consider that at the begginning the Grasshopper is located directly in front of the leftmost character of the string. His goal is to reach the position right after the rightmost character of the string. In one jump the Grasshopper could jump to the right any distance from 1 to the value of his jump ability . The picture corresponds to the first example. The following letters are vowels: ' A ', ' E ', ' I ', ' O ', ' U ' and ' Y '.\n\nInput\nThe first line contains non-empty string consisting of capital English letters. It is guaranteed that the length of the string does not exceed 100.\n\nOutput\nPrint single integer a \u2014 the minimum jump ability of the Grasshopper (in the number of symbols) that is needed to overcome the given string, jumping only on vowels. Examples\n\nInput\nABABBBACFEYUKOTT\n\nOutput\n4\n\nInput\nAAA\n\nOutput\n1","351":"B. Parade time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Very soon there will be a parade of victory over alien invaders in Berland. Unfortunately, all soldiers died in the war and now the army consists of entirely new recruits, many of whom do not even know from which leg they should begin to march. The civilian population also poorly understands from which leg recruits begin to march, so it is only important how many soldiers march in step. There will be n columns participating in the parade, the i -th column consists of l i soldiers, who start to march from left leg, and r i soldiers, who start to march from right leg. The beauty of the parade is calculated by the following formula: if L is the total number of soldiers on the parade who start to march from the left leg, and R is the total number of soldiers on the parade who start to march from the right leg, so the beauty will equal | L - R | . No more than once you can choose one column and tell all the soldiers in this column to switch starting leg, i.e. everyone in this columns who starts the march from left leg will now start it from right leg, and vice versa. Formally, you can pick no more than one index i and swap values l i and r i . Find the index of the column, such that switching the starting leg for soldiers in it will maximize the the beauty of the parade, or determine, that no such operation can increase the current beauty.\n\nInput\nThe first line contains single integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of columns. The next n lines contain the pairs of integers l i and r i ( 1 \u2264 l i , r i \u2264 500 ) \u2014 the number of soldiers in the i -th column which start to march from the left or the right leg respectively.\n\nOutput\nPrint single integer k \u2014 the number of the column in which soldiers need to change the leg from which they start to march, or 0 if the maximum beauty is already reached. Consider that columns are numbered from 1 to n in the order they are given in the input data. If there are several answers, print any of them. Examples\n\nInput\n3 5 6 8 9 10 3\n\nOutput\n3\n\nInput\n2 6 5 5 6\n\nOutput\n1\n\nInput\n6 5 9 1 3 4 8 4 5 23 54 12 32\n\nOutput\n0\n\nNote\nIn the first example if you don't give the order to change the leg, the number of soldiers, who start to march from the left leg, would equal 5 + 8 + 10 = 23 , and from the right leg \u2014 6 + 9 + 3 = 18 . In this case the beauty of the parade will equal |23 - 18| = 5 . If you give the order to change the leg to the third column, so the number of soldiers, who march from the left leg, will equal 5 + 8 + 3 = 16 , and who march from the right leg \u2014 6 + 9 + 10 = 25 . In this case the beauty equals |16 - 25| = 9 . It is impossible to reach greater beauty by giving another orders. Thus, the maximum beauty that can be achieved is 9.","363":"A. Anton and Danik time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Anton likes to play chess, and so does his friend Danik. Once they have played n games in a row. For each game it's known who was the winner \u2014 Anton or Danik. None of the games ended with a tie. Now Anton wonders, who won more games, he or Danik? Help him determine this.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of games played. The second line contains a string s , consisting of n uppercase English letters ' A ' and ' D ' \u2014 the outcome of each of the games. The i -th character of the string is equal to ' A ' if the Anton won the i -th game and ' D ' if Danik won the i -th game.\n\nOutput\nIf Anton won more games than Danik, print \" Anton \" (without quotes) in the only line of the output. If Danik won more games than Anton, print \" Danik \" (without quotes) in the only line of the output. If Anton and Danik won the same number of games, print \" Friendship \" (without quotes). Examples\n\nInput\n6 ADAAAA\n\nOutput\nAnton\n\nInput\n7 DDDAADA\n\nOutput\nDanik\n\nInput\n6 DADADA\n\nOutput\nFriendship\n\nNote\nIn the first sample, Anton won 6 games, while Danik \u2014 only 1 . Hence, the answer is \" Anton \". In the second sample, Anton won 3 games and Danik won 4 games, so the answer is \" Danik \". In the third sample, both Anton and Danik won 3 games and the answer is \" Friendship \".","367":"A. Ostap and Grasshopper time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output On the way to Rio de Janeiro Ostap kills time playing with a grasshopper he took with him in a special box. Ostap builds a line of length n such that some cells of this line are empty and some contain obstacles. Then, he places his grasshopper to one of the empty cells and a small insect in another empty cell. The grasshopper wants to eat the insect. Ostap knows that grasshopper is able to jump to any empty cell that is exactly k cells away from the current (to the left or to the right).\n\nNote\nthat it doesn't matter whether intermediate cells are empty or not as the grasshopper makes a jump over them. For example, if k = 1 the grasshopper can jump to a neighboring cell only, and if k = 2 the grasshopper can jump over a single cell. Your goal is to determine whether there is a sequence of jumps such that grasshopper will get from his initial position to the cell with an insect.\n\nInput\nThe first line of the input contains two integers n and k ( 2 \u2264 n \u2264 100 , 1 \u2264 k \u2264 n - 1 ) \u2014 the number of cells in the line and the length of one grasshopper's jump. The second line contains a string of length n consisting of characters ' . ', ' # ', ' G ' and ' T '. Character ' . ' means that the corresponding cell is empty, character ' # ' means that the corresponding cell contains an obstacle and grasshopper can't jump there. Character ' G ' means that the grasshopper starts at this position and, finally, ' T ' means that the target insect is located at this cell. It's guaranteed that characters ' G ' and ' T ' appear in this line exactly once .\n\nOutput\nIf there exists a sequence of jumps (each jump of length k ), such that the grasshopper can get from his initial position to the cell with the insect, print \" YES \" (without quotes) in the only line of the input. Otherwise, print \" NO \" (without quotes). Examples\n\nInput\n5 2 #G#T#\n\nOutput\nYES\n\nInput\n6 1 T....G\n\nOutput\nYES\n\nInput\n7 3 T..#..G\n\nOutput\nNO\n\nInput\n6 2 ..GT..\n\nOutput\nNO\n\nNote\nIn the first sample, the grasshopper can make one jump to the right in order to get from cell 2 to cell 4 . In the second sample, the grasshopper is only able to jump to neighboring cells but the way to the insect is free \u2014 he can get there by jumping left 5 times. In the third sample, the grasshopper can't make a single jump. In the fourth sample, the grasshopper can only jump to the cells with odd indices, thus he won't be able to reach the insect.","374":"B. Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There are some beautiful girls in Arpa\u2019s land as mentioned before. Once Arpa came up with an obvious problem: Given an array and a number x , count the number of pairs of indices i , j ( 1 \u2264 i < j \u2264 n ) such that , where is bitwise xor operation (see notes for explanation). Immediately, Mehrdad discovered a terrible solution that nobody trusted. Now Arpa needs your help to implement the solution to that problem.\n\nInput\nFirst line contains two integers n and x ( 1 \u2264 n \u2264 10 5 , 0 \u2264 x \u2264 10 5 ) \u2014 the number of elements in the array and the integer x . Second line contains n integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 10 5 ) \u2014 the elements of the array.\n\nOutput\nPrint a single integer: the answer to the problem. Examples\n\nInput\n2 3 1 2\n\nOutput\n1\n\nInput\n6 1 5 1 2 3 4 1\n\nOutput\n2\n\nNote\nIn the first sample there is only one pair of i = 1 and j = 2 . so the answer is 1 . In the second sample the only two pairs are i = 3 , j = 4 (since ) and i = 1 , j = 5 (since ). A bitwise xor takes two bit integers of equal length and performs the logical xor operation on each pair of corresponding bits. The result in each position is 1 if only the first bit is 1 or only the second bit is 1 , but will be 0 if both are 0 or both are 1 . You can read more about bitwise xor operation here: https:\/\/en.wikipedia.org\/wiki\/Bitwise_operation#XOR .","376":"A. Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There exists an island called Arpa\u2019s land, some beautiful girls live there, as ugly ones do. Mehrdad wants to become minister of Arpa\u2019s land. Arpa has prepared an exam. Exam has only one question, given n , print the last digit of 1378 n . Mehrdad has become quite confused and wants you to help him. Please help, although it's a naive cheat.\n\nInput\nThe single line of input contains one integer n ( 0 \u2264 n \u2264 10 9 ).\n\nOutput\nPrint single integer \u2014 the last digit of 1378 n . Examples\n\nInput\n1\n\nOutput\n8\n\nInput\n2\n\nOutput\n4\n\nNote\nIn the first example, last digit of 1378 1 = 1378 is 8 . In the second example, last digit of 1378 2 = 1378\u00b71378 = 1898884 is 4 .","379":"A. Compote time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Nikolay has a lemons, b apples and c pears. He decided to cook a compote. According to the recipe the fruits should be in the ratio 1: 2: 4 . It means that for each lemon in the compote should be exactly 2 apples and exactly 4 pears. You can't crumble up, break up or cut these fruits into pieces. These fruits \u2014 lemons, apples and pears \u2014 should be put in the compote as whole fruits. Your task is to determine the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. It is possible that Nikolay can't use any fruits, in this case print 0 .\n\nInput\nThe first line contains the positive integer a ( 1 \u2264 a \u2264 1000 ) \u2014 the number of lemons Nikolay has. The second line contains the positive integer b ( 1 \u2264 b \u2264 1000 ) \u2014 the number of apples Nikolay has. The third line contains the positive integer c ( 1 \u2264 c \u2264 1000 ) \u2014 the number of pears Nikolay has.\n\nOutput\nPrint the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. Examples\n\nInput\n2 5 7\n\nOutput\n7\n\nInput\n4 7 13\n\nOutput\n21\n\nInput\n2 3 2\n\nOutput\n0\n\nNote\nIn the first example Nikolay can use 1 lemon, 2 apples and 4 pears, so the answer is 1 + 2 + 4 = 7 . In the second example Nikolay can use 3 lemons, 6 apples and 12 pears, so the answer is 3 + 6 + 12 = 21 . In the third example Nikolay don't have enough pears to cook any compote, so the answer is 0 .","384":"B. Decoding time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarp is mad about coding, that is why he writes Sveta encoded messages. He calls the median letter in a word the letter which is in the middle of the word. If the word's length is even, the median letter is the left of the two middle letters. In the following examples, the median letter is highlighted: con t est , i n fo . If the word consists of single letter, then according to above definition this letter is the median letter. Polycarp encodes each word in the following way: he writes down the median letter of the word, then deletes it and repeats the process until there are no letters left. For example, he encodes the word volga as logva . You are given an encoding s of some word, your task is to decode it.\n\nInput\nThe first line contains a positive integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the length of the encoded word. The second line contains the string s of length n consisting of lowercase English letters \u2014 the encoding.\n\nOutput\nPrint the word that Polycarp encoded. Examples\n\nInput\n5 logva\n\nOutput\nvolga\n\nInput\n2 no\n\nOutput\nno\n\nInput\n4 abba\n\nOutput\nbaba\n\nNote\nIn the first example Polycarp encoded the word volga . At first, he wrote down the letter l from the position 3 , after that his word looked like voga . After that Polycarp wrote down the letter o from the position 2 , his word became vga . Then Polycarp wrote down the letter g which was at the second position, the word became va . Then he wrote down the letter v , then the letter a . Thus, the encoding looked like logva . In the second example Polycarp encoded the word no . He wrote down the letter n , the word became o , and he wrote down the letter o . Thus, in this example, the word and its encoding are the same. In the third example Polycarp encoded the word baba . At first, he wrote down the letter a , which was at the position 2 , after that the word looked like bba . Then he wrote down the letter b , which was at the position 2 , his word looked like ba . After that he wrote down the letter b , which was at the position 1 , the word looked like a , and he wrote down that letter a . Thus, the encoding is abba .","385":"C. Tram time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The tram in Berland goes along a straight line from the point 0 to the point s and back, passing 1 meter per t 1 seconds in both directions. It means that the tram is always in the state of uniform rectilinear motion, instantly turning around at points x = 0 and x = s . Igor is at the point x 1 . He should reach the point x 2 . Igor passes 1 meter per t 2 seconds. Your task is to determine the minimum time Igor needs to get from the point x 1 to the point x 2 , if it is known where the tram is and in what direction it goes at the moment Igor comes to the point x 1 . Igor can enter the tram unlimited number of times at any moment when his and the tram's positions coincide. It is not obligatory that points in which Igor enter and exit the tram are integers. Assume that any boarding and unboarding happens instantly. Igor can move arbitrary along the line (but not faster than 1 meter per t 2 seconds). He can also stand at some point for some time.\n\nInput\nThe first line contains three integers s , x 1 and x 2 ( 2 \u2264 s \u2264 1000 , 0 \u2264 x 1 , x 2 \u2264 s , x 1 \u2260 x 2 ) \u2014 the maximum coordinate of the point to which the tram goes, the point Igor is at, and the point he should come to. The second line contains two integers t 1 and t 2 ( 1 \u2264 t 1 , t 2 \u2264 1000 ) \u2014 the time in seconds in which the tram passes 1 meter and the time in seconds in which Igor passes 1 meter. The third line contains two integers p and d ( 1 \u2264 p \u2264 s - 1 , d is either 1 or ) \u2014 the position of the tram in the moment Igor came to the point x 1 and the direction of the tram at this moment. If , the tram goes in the direction from the point s to the point 0 . If d = 1 , the tram goes in the direction from the point 0 to the point s .\n\nOutput\nPrint the minimum time in seconds which Igor needs to get from the point x 1 to the point x 2 . Examples\n\nInput\n4 2 4 3 4 1 1\n\nOutput\n8\n\nInput\n5 4 0 1 2 3 1\n\nOutput\n7\n\nNote\nIn the first example it is profitable for Igor to go by foot and not to wait the tram. Thus, he has to pass 2 meters and it takes 8 seconds in total, because he passes 1 meter per 4 seconds. In the second example Igor can, for example, go towards the point x 2 and get to the point 1 in 6 seconds (because he has to pass 3 meters, but he passes 1 meters per 2 seconds). At that moment the tram will be at the point 1 , so Igor can enter the tram and pass 1 meter in 1 second. Thus, Igor will reach the point x 2 in 7 seconds in total.","386":"D. Green and Black Tea time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Innokentiy likes tea very much and today he wants to drink exactly n cups of tea. He would be happy to drink more but he had exactly n tea bags, a of them are green and b are black. Innokentiy doesn't like to drink the same tea (green or black) more than k times in a row. Your task is to determine the order of brewing tea bags so that Innokentiy will be able to drink n cups of tea, without drinking the same tea more than k times in a row, or to inform that it is impossible. Each tea bag has to be used exactly once.\n\nInput\nThe first line contains four integers n , k , a and b ( 1 \u2264 k \u2264 n \u2264 10 5 , 0 \u2264 a , b \u2264 n ) \u2014 the number of cups of tea Innokentiy wants to drink, the maximum number of cups of same tea he can drink in a row, the number of tea bags of green and black tea. It is guaranteed that a + b = n .\n\nOutput\nIf it is impossible to drink n cups of tea, print \" NO \" (without quotes). Otherwise, print the string of the length n , which consists of characters ' G ' and ' B '. If some character equals ' G ', then the corresponding cup of tea should be green. If some character equals ' B ', then the corresponding cup of tea should be black. If there are multiple answers, print any of them. Examples\n\nInput\n5 1 3 2\n\nOutput\nGBGBG\n\nInput\n7 2 2 5\n\nOutput\nBBGBGBB\n\nInput\n4 3 4 0\n\nOutput\nNO","393":"B. Mammoth's Genome Decoding time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The process of mammoth's genome decoding in Berland comes to its end! One of the few remaining tasks is to restore unrecognized nucleotides in a found chain s . Each nucleotide is coded with a capital letter of English alphabet: ' A ', ' C ', ' G ' or ' T '. Unrecognized nucleotides are coded by a question mark ' ? '. Thus, s is a string consisting of letters ' A ', ' C ', ' G ', ' T ' and characters ' ? '. It is known that the number of nucleotides of each of the four types in the decoded genome of mammoth in Berland should be equal. Your task is to decode the genome and replace each unrecognized nucleotide with one of the four types so that the number of nucleotides of each of the four types becomes equal.\n\nInput\nThe first line contains the integer n ( 4 \u2264 n \u2264 255 ) \u2014 the length of the genome. The second line contains the string s of length n \u2014 the coded genome. It consists of characters ' A ', ' C ', ' G ', ' T ' and ' ? '.\n\nOutput\nIf it is possible to decode the genome, print it. If there are multiple answer, print any of them. If it is not possible, print three equals signs in a row: \" === \" (without quotes). Examples\n\nInput\n8 AG?C??CT\n\nOutput\nAGACGTCT\n\nInput\n4 AGCT\n\nOutput\nAGCT\n\nInput\n6 ????G?\n\nOutput\n===\n\nInput\n4 AA??\n\nOutput\n===\n\nNote\nIn the first example you can replace the first question mark with the letter ' A ', the second question mark with the letter ' G ', the third question mark with the letter ' T ', then each nucleotide in the genome would be presented twice. In the second example the genome is already decoded correctly and each nucleotide is exactly once in it. In the third and the fourth examples it is impossible to decode the genom.","395":"A. Display Size time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A big company decided to launch a new series of rectangular displays, and decided that the display must have exactly n pixels. Your task is to determine the size of the rectangular display \u2014 the number of lines (rows) of pixels a and the number of columns of pixels b , so that: there are exactly n pixels on the display; the number of rows does not exceed the number of columns, it means a \u2264 b ; the difference b - a is as small as possible.\n\nInput\nThe first line contains the positive integer n ( 1 \u2264 n \u2264 10 6 ) \u2014 the number of pixels display should have.\n\nOutput\nPrint two integers \u2014 the number of rows and columns on the display. Examples\n\nInput\n8\n\nOutput\n2 4\n\nInput\n64\n\nOutput\n8 8\n\nInput\n5\n\nOutput\n1 5\n\nInput\n999999\n\nOutput\n999 1001\n\nNote\nIn the first example the minimum possible difference equals 2, so on the display should be 2 rows of 4 pixels. In the second example the minimum possible difference equals 0, so on the display should be 8 rows of 8 pixels. In the third example the minimum possible difference equals 4, so on the display should be 1 row of 5 pixels.","398":"A. Santa Claus and a Place in a Class time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Santa Claus is the first who came to the Christmas Olympiad, and he is going to be the first to take his place at a desk! In the classroom there are n lanes of m desks each, and there are two working places at each of the desks. The lanes are numbered from 1 to n from the left to the right, the desks in a lane are numbered from 1 to m starting from the blackboard.\n\nNote\nthat the lanes go perpendicularly to the blackboard, not along it (see picture). The organizers numbered all the working places from 1 to 2 nm . The places are numbered by lanes (i. e. all the places of the first lane go first, then all the places of the second lane, and so on), in a lane the places are numbered starting from the nearest to the blackboard (i. e. from the first desk in the lane), at each desk, the place on the left is numbered before the place on the right. The picture illustrates the first and the second samples. Santa Clause knows that his place has number k . Help him to determine at which lane at which desk he should sit, and whether his place is on the left or on the right!\n\nInput\nThe only line contains three integers n , m and k ( 1 \u2264 n , m \u2264 10 000 , 1 \u2264 k \u2264 2 nm ) \u2014 the number of lanes, the number of desks in each lane and the number of Santa Claus' place.\n\nOutput\nPrint two integers: the number of lane r , the number of desk d , and a character s , which stands for the side of the desk Santa Claus. The character s should be \" L \", if Santa Clause should sit on the left, and \" R \" if his place is on the right. Examples\n\nInput\n4 3 9\n\nOutput\n2 2 L\n\nInput\n4 3 24\n\nOutput\n4 3 R\n\nInput\n2 4 4\n\nOutput\n1 2 R\n\nNote\nThe first and the second samples are shown on the picture. The green place corresponds to Santa Claus' place in the first example, the blue place corresponds to Santa Claus' place in the second example. In the third sample there are two lanes with four desks in each, and Santa Claus has the fourth place. Thus, his place is in the first lane at the second desk on the right.","400":"A. New Year and Hurry time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Limak is going to participate in a contest on the last day of the 2016. The contest will start at 20:00 and will last four hours, exactly until midnight. There will be n problems, sorted by difficulty, i.e. problem 1 is the easiest and problem n is the hardest. Limak knows it will take him 5\u00b7 i minutes to solve the i -th problem. Limak's friends organize a New Year's Eve party and Limak wants to be there at midnight or earlier. He needs k minutes to get there from his house, where he will participate in the contest first. How many problems can Limak solve if he wants to make it to the party?\n\nInput\nThe only line of the input contains two integers n and k ( 1 \u2264 n \u2264 10 , 1 \u2264 k \u2264 240 ) \u2014 the number of the problems in the contest and the number of minutes Limak needs to get to the party from his house.\n\nOutput\nPrint one integer, denoting the maximum possible number of problems Limak can solve so that he could get to the party at midnight or earlier. Examples\n\nInput\n3 222\n\nOutput\n2\n\nInput\n4 190\n\nOutput\n4\n\nInput\n7 1\n\nOutput\n7\n\nNote\nIn the first sample, there are 3 problems and Limak needs 222 minutes to get to the party. The three problems require 5 , 10 and 15 minutes respectively. Limak can spend 5 + 10 = 15 minutes to solve first two problems. Then, at 20:15 he can leave his house to get to the party at 23:57 (after 222 minutes). In this scenario Limak would solve 2 problems. He doesn't have enough time to solve 3 problems so the answer is 2 . In the second sample, Limak can solve all 4 problems in 5 + 10 + 15 + 20 = 50 minutes. At 20:50 he will leave the house and go to the party. He will get there exactly at midnight. In the third sample, Limak needs only 1 minute to get to the party. He has enough time to solve all 7 problems.","402":"A. Santa Claus and Candies time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Santa Claus has n candies, he dreams to give them as gifts to children. What is the maximal number of children for whose he can give candies if Santa Claus want each kid should get distinct positive integer number of candies. Santa Class wants to give all n candies he has.\n\nInput\nThe only line contains positive integer number n ( 1 \u2264 n \u2264 1000 ) \u2014 number of candies Santa Claus has.\n\nOutput\nPrint to the first line integer number k \u2014 maximal number of kids which can get candies. Print to the second line k distinct integer numbers: number of candies for each of k kid. The sum of k printed numbers should be exactly n . If there are many solutions, print any of them. Examples\n\nInput\n5\n\nOutput\n2 2 3\n\nInput\n9\n\nOutput\n3 3 5 1\n\nInput\n2\n\nOutput\n1 2","404":"B. PolandBall and Game time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output PolandBall is playing a game with EnemyBall. The rules are simple. Players have to say words in turns. You cannot say a word which was already said. PolandBall starts. The Ball which can't say a new word loses. You're given two lists of words familiar to PolandBall and EnemyBall. Can you determine who wins the game, if both play optimally?\n\nInput\nThe first input line contains two integers n and m ( 1 \u2264 n , m \u2264 10 3 ) \u2014 number of words PolandBall and EnemyBall know, respectively. Then n strings follow, one per line \u2014 words familiar to PolandBall. Then m strings follow, one per line \u2014 words familiar to EnemyBall.\n\nNote\nthat one Ball cannot know a word more than once (strings are unique), but some words can be known by both players. Each word is non-empty and consists of no more than 500 lowercase English alphabet letters.\n\nOutput\nIn a single line of print the answer \u2014 \" YES \" if PolandBall wins and \" NO \" otherwise. Both Balls play optimally. Examples\n\nInput\n5 1 polandball is a cool character nope\n\nOutput\nYES\n\nInput\n2 2 kremowka wadowicka kremowka wiedenska\n\nOutput\nYES\n\nInput\n1 2 a a b\n\nOutput\nNO\n\nNote\nIn the first example PolandBall knows much more words and wins effortlessly. In the second example if PolandBall says kremowka first, then EnemyBall cannot use that word anymore. EnemyBall can only say wiedenska . PolandBall says wadowicka and wins.","407":"A. PolandBall and Hypothesis time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output PolandBall is a young, clever Ball. He is interested in prime numbers. He has stated a following hypothesis: \" There exists such a positive integer n that for each positive integer m number n \u00b7 m + 1 is a prime number \". Unfortunately, PolandBall is not experienced yet and doesn't know that his hypothesis is incorrect. Could you prove it wrong? Write a program that finds a counterexample for any n .\n\nInput\nThe only number in the input is n ( 1 \u2264 n \u2264 1000 ) \u2014 number from the PolandBall's hypothesis.\n\nOutput\nOutput such m that n \u00b7 m + 1 is not a prime number. Your answer will be considered correct if you output any suitable m such that 1 \u2264 m \u2264 10 3 . It is guaranteed the the answer exists. Examples\n\nInput\n3\n\nOutput\n1\n\nInput\n4\n\nOutput\n2\n\nNote\nA prime number (or a prime) is a natural number greater than 1 that has no positive divisors other than 1 and itself. For the first sample testcase, 3\u00b71 + 1 = 4 . We can output 1 . In the second sample testcase, 4\u00b71 + 1 = 5 . We cannot output 1 because 5 is prime. However, m = 2 is okay since 4\u00b72 + 1 = 9 , which is not a prime number.","412":"C. PolandBall and Forest time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output PolandBall lives in a forest with his family. There are some trees in the forest. Trees are undirected acyclic graphs with k vertices and k - 1 edges, where k is some integer.\n\nNote\nthat one vertex is a valid tree. There is exactly one relative living in each vertex of each tree, they have unique ids from 1 to n . For each Ball i we know the id of its most distant relative living on the same tree. If there are several such vertices, we only know the value of the one with smallest id among those. How many trees are there in the forest?\n\nInput\nThe first line contains single integer n ( 1 \u2264 n \u2264 10 4 ) \u2014 the number of Balls living in the forest. The second line contains a sequence p 1 , p 2 , ..., p n of length n , where ( 1 \u2264 p i \u2264 n ) holds and p i denotes the most distant from Ball i relative living on the same tree. If there are several most distant relatives living on the same tree, p i is the id of one with the smallest id. It's guaranteed that the sequence p corresponds to some valid forest. Hacking : To hack someone, you should provide a correct forest as a test. The sequence p will be calculated according to the forest and given to the solution you try to hack as input. Use the following format: In the first line, output the integer n ( 1 \u2264 n \u2264 10 4 ) \u2014 the number of Balls and the integer m ( 0 \u2264 m < n ) \u2014 the total number of edges in the forest. Then m lines should follow. The i -th of them should contain two integers a i and b i and represent an edge between vertices in which relatives a i and b i live. For example, the first sample is written as follows: 5 3 1 2 3 4 4 5\n\nOutput\nYou should output the number of trees in the forest where PolandBall lives. Interaction From the technical side, this problem is interactive. However, it should not affect you (except hacking) since there is no interaction. Examples\n\nInput\n5 2 1 5 3 3\n\nOutput\n2\n\nInput\n1 1\n\nOutput\n1\n\nNote\nIn the first sample testcase, possible forest is: 1-2 3-4-5 . There are 2 trees overall. In the second sample testcase, the only possible graph is one vertex and no edges. Therefore, there is only one tree.","421":"A. Holiday Of Equality time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output In Berland it is the holiday of equality. In honor of the holiday the king decided to equalize the welfare of all citizens in Berland by the expense of the state treasury. Totally in Berland there are n citizens, the welfare of each of them is estimated as the integer in a i burles (burle is the currency in Berland). You are the royal treasurer, which needs to count the minimum charges of the kingdom on the king's present. The king can only give money, he hasn't a power to take away them.\n\nInput\nThe first line contains the integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of citizens in the kingdom. The second line contains n integers a 1 , a 2 , ..., a n , where a i ( 0 \u2264 a i \u2264 10 6 ) \u2014 the welfare of the i -th citizen.\n\nOutput\nIn the only line print the integer S \u2014 the minimum number of burles which are had to spend. Examples\n\nInput\n5 0 1 2 3 4\n\nOutput\n10\n\nInput\n5 1 1 0 1 1\n\nOutput\n1\n\nInput\n3 1 3 1\n\nOutput\n4\n\nInput\n1 12\n\nOutput\n0\n\nNote\nIn the first example if we add to the first citizen 4 burles, to the second 3 , to the third 2 and to the fourth 1 , then the welfare of all citizens will equal 4 . In the second example it is enough to give one burle to the third citizen. In the third example it is necessary to give two burles to the first and the third citizens to make the welfare of citizens equal 3 . In the fourth example it is possible to give nothing to everyone because all citizens have 12 burles.","427":"A. Petr and a calendar time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petr wants to make a calendar for current month. For this purpose he draws a table in which columns correspond to weeks (a week is seven consequent days from Monday to Sunday), rows correspond to weekdays, and cells contain dates. For example, a calendar for January 2017 should look like on the picture: Petr wants to know how many columns his table should have given the month and the weekday of the first date of that month? Assume that the year is non-leap.\n\nInput\nThe only line contain two integers m and d ( 1 \u2264 m \u2264 12 , 1 \u2264 d \u2264 7 ) \u2014 the number of month (January is the first month, December is the twelfth) and the weekday of the first date of this month ( 1 is Monday, 7 is Sunday).\n\nOutput\nPrint single integer: the number of columns the table should have. Examples\n\nInput\n1 7\n\nOutput\n6\n\nInput\n1 1\n\nOutput\n5\n\nInput\n11 6\n\nOutput\n5\n\nNote\nThe first example corresponds to the January 2017 shown on the picture in the statements. In the second example 1 -st January is Monday, so the whole month fits into 5 columns. In the third example 1 -st November is Saturday and 5 columns is enough.","433":"A. Dasha and Stairs time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output On her way to programming school tiger Dasha faced her first test \u2014 a huge staircase! The steps were numbered from one to infinity. As we know, tigers are very fond of all striped things, it is possible that it has something to do with their color. So on some interval of her way she calculated two values \u2014 the number of steps with even and odd numbers. You need to check whether there is an interval of steps from the l -th to the r -th (1 \u2264 l \u2264 r ) , for which values that Dasha has found are correct.\n\nInput\nIn the only line you are given two integers a , b (0 \u2264 a , b \u2264 100) \u2014 the number of even and odd steps, accordingly.\n\nOutput\nIn the only line print \" YES \", if the interval of steps described above exists, and \" NO \" otherwise. Examples\n\nInput\n2 3\n\nOutput\nYES\n\nInput\n3 1\n\nOutput\nNO\n\nNote\nIn the first example one of suitable intervals is from 1 to 5 . The interval contains two even steps \u2014 2 and 4 , and three odd: 1 , 3 and 5 .","435":"A. k-th divisor time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given two integers n and k . Find k -th smallest divisor of n , or report that it doesn't exist. Divisor of n is any such natural number, that n can be divided by it without remainder.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 n \u2264 10 15 , 1 \u2264 k \u2264 10 9 ).\n\nOutput\nIf n has less than k divisors, output -1 . Otherwise, output the k -th smallest divisor of n . Examples\n\nInput\n4 2\n\nOutput\n2\n\nInput\n5 3\n\nOutput\n-1\n\nInput\n12 5\n\nOutput\n6\n\nNote\nIn the first example, number 4 has three divisors: 1 , 2 and 4 . The second one is 2 . In the second example, number 5 has only two divisors: 1 and 5 . The third divisor doesn't exist, so the answer is -1 .","437":"A. Theatre Square time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Theatre Square in the capital city of Berland has a rectangular shape with the size n \u00d7 m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a \u00d7 a . What is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.\n\nInput\nThe input contains three positive integer numbers in the first line: n , m and a ( 1 \u2264 n , m , a \u2264 10 9 ).\n\nOutput\nWrite the needed number of flagstones. Examples\n\nInput\n6 6 4\n\nOutput\n4","450":"A. Power Consumption Calculation time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Tom is interested in power consumption of his favourite laptop. His laptop has three modes. In normal mode laptop consumes P 1 watt per minute. T 1 minutes after Tom moved the mouse or touched the keyboard for the last time, a screensaver starts and power consumption changes to P 2 watt per minute. Finally, after T 2 minutes from the start of the screensaver, laptop switches to the \"sleep\" mode and consumes P 3 watt per minute. If Tom moves the mouse or touches the keyboard when the laptop is in the second or in the third mode, it switches to the first (normal) mode. Tom's work with the laptop can be divided into n time periods [ l 1 , r 1 ], [ l 2 , r 2 ], ..., [ l n , r n ] . During each interval Tom continuously moves the mouse and presses buttons on the keyboard. Between the periods Tom stays away from the laptop. Find out the total amount of power consumed by the laptop during the period [ l 1 , r n ] .\n\nInput\nThe first line contains 6 integer numbers n , P 1 , P 2 , P 3 , T 1 , T 2 ( 1 \u2264 n \u2264 100, 0 \u2264 P 1 , P 2 , P 3 \u2264 100, 1 \u2264 T 1 , T 2 \u2264 60 ). The following n lines contain description of Tom's work. Each i -th of these lines contains two space-separated integers l i and r i ( 0 \u2264 l i < r i \u2264 1440 , r i < l i + 1 for i < n ), which stand for the start and the end of the i -th period of work.\n\nOutput\nOutput the answer to the problem. Examples\n\nInput\n1 3 2 1 5 10 0 10\n\nOutput\n30\n\nInput\n2 8 4 2 5 10 20 30 50 100\n\nOutput\n570","454":"B. Sum of Digits time limit per test 2 seconds memory limit per test 265 megabytes input standard input output standard output Having watched the last Harry Potter film, little Gerald also decided to practice magic. He found in his father's magical book a spell that turns any number in the sum of its digits. At the moment Gerald learned that, he came across a number n . How many times can Gerald put a spell on it until the number becomes one-digit?\n\nInput\nThe first line contains the only integer n ( 0 \u2264 n \u2264 10 100000 ). It is guaranteed that n doesn't contain any leading zeroes.\n\nOutput\nPrint the number of times a number can be replaced by the sum of its digits until it only contains one digit. Examples\n\nInput\n0\n\nOutput\n0\n\nInput\n10\n\nOutput\n1\n\nInput\n991\n\nOutput\n3\n\nNote\nIn the first sample the number already is one-digit \u2014 Herald can't cast a spell. The second test contains number 10 . After one casting of a spell it becomes 1 , and here the process is completed. Thus, Gerald can only cast the spell once. The third test contains number 991 . As one casts a spell the following transformations take place: 991 \u2192 19 \u2192 10 \u2192 1 . After three transformations the number becomes one-digit.","457":"A. Blackjack time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One rainy gloomy evening when all modules hid in the nearby cafes to drink hot energetic cocktails, the Hexadecimal virus decided to fly over the Mainframe to look for a Great Idea. And she has found one! Why not make her own Codeforces, with blackjack and other really cool stuff? Many people will surely be willing to visit this splendid shrine of high culture. In Mainframe a standard pack of 52 cards is used to play blackjack. The pack contains cards of 13 values: 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , jacks, queens, kings and aces. Each value also exists in one of four suits: hearts, diamonds, clubs and spades. Also, each card earns some value in points assigned to it: cards with value from two to ten earn from 2 to 10 points, correspondingly. An ace can either earn 1 or 11 , whatever the player wishes. The picture cards (king, queen and jack) earn 10 points. The number of points a card earns does not depend on the suit. The rules of the game are very simple. The player gets two cards, if the sum of points of those cards equals n , then the player wins, otherwise the player loses. The player has already got the first card, it's the queen of spades. To evaluate chances for victory, you should determine how many ways there are to get the second card so that the sum of points exactly equals n .\n\nInput\nThe only line contains n ( 1 \u2264 n \u2264 25 ) \u2014 the required sum of points.\n\nOutput\nPrint the numbers of ways to get the second card in the required way if the first card is the queen of spades. Examples\n\nInput\n12\n\nOutput\n4\n\nInput\n20\n\nOutput\n15\n\nInput\n10\n\nOutput\n0\n\nNote\nIn the first sample only four two's of different suits can earn the required sum of points. In the second sample we can use all tens, jacks, queens and kings; overall it's 15 cards, as the queen of spades (as any other card) is only present once in the pack of cards and it's already in use. In the third sample there is no card, that would add a zero to the current ten points.","475":"C. Cthulhu time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output ...Once upon a time a man came to the sea. The sea was stormy and dark. The man started to call for the little mermaid to appear but alas, he only woke up Cthulhu... Whereas on the other end of the world Pentagon is actively collecting information trying to predict the monster's behavior and preparing the secret super weapon. Due to high seismic activity and poor weather conditions the satellites haven't yet been able to make clear shots of the monster. The analysis of the first shot resulted in an undirected graph with n vertices and m edges. Now the world's best minds are about to determine whether this graph can be regarded as Cthulhu or not. To add simplicity, let's suppose that Cthulhu looks from the space like some spherical body with tentacles attached to it. Formally, we shall regard as Cthulhu such an undirected graph that can be represented as a set of three or more rooted trees, whose roots are connected by a simple cycle. It is guaranteed that the graph contains no multiple edges and self-loops.\n\nInput\nThe first line contains two integers \u2014 the number of vertices n and the number of edges m of the graph ( 1 \u2264 n \u2264 100 , 0 \u2264 m \u2264 ). Each of the following m lines contains a pair of integers x and y , that show that an edge exists between vertices x and y ( 1 \u2264 x , y \u2264 n , x \u2260 y ). For each pair of vertices there will be at most one edge between them, no edge connects a vertex to itself.\n\nOutput\nPrint \" NO \", if the graph is not Cthulhu and \" FHTAGN! \" if it is. Examples\n\nInput\n6 6 6 3 6 4 5 1 2 5 1 4 5 4\n\nOutput\nFHTAGN!\n\nInput\n6 5 5 6 4 6 3 1 5 1 1 2\n\nOutput\nNO\n\nNote\nLet us denote as a simple cycle a set of v vertices that can be numbered so that the edges will only exist between vertices number 1 and 2 , 2 and 3 , ..., v - 1 and v , v and 1 . A tree is a connected undirected graph consisting of n vertices and n - 1 edges ( n > 0 ). A rooted tree is a tree where one vertex is selected to be the root.","478":"A. Card Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There is a card game called \"Durak\", which means \"Fool\" in Russian. The game is quite popular in the countries that used to form USSR. The problem does not state all the game's rules explicitly \u2014 you can find them later yourselves if you want. To play durak you need a pack of 36 cards. Each card has a suit (\" S \", \" H \", \" D \" and \" C \") and a rank (in the increasing order \" 6 \", \" 7 \", \" 8 \", \" 9 \", \" T \", \" J \", \" Q \", \" K \" and \" A \"). At the beginning of the game one suit is arbitrarily chosen as trump. The players move like that: one player puts one or several of his cards on the table and the other one should beat each of them with his cards. A card beats another one if both cards have similar suits and the first card has a higher rank then the second one. Besides, a trump card can beat any non-trump card whatever the cards\u2019 ranks are. In all other cases you can not beat the second card with the first one. You are given the trump suit and two different cards. Determine whether the first one beats the second one or not.\n\nInput\nThe first line contains the tramp suit. It is \" S \", \" H \", \" D \" or \" C \". The second line contains the description of the two different cards. Each card is described by one word consisting of two symbols. The first symbol stands for the rank (\" 6 \", \" 7 \", \" 8 \", \" 9 \", \" T \", \" J \", \" Q \", \" K \" and \" A \"), and the second one stands for the suit (\" S \", \" H \", \" D \" and \" C \").\n\nOutput\nPrint \" YES \" (without the quotes) if the first cards beats the second one. Otherwise, print \" NO \" (also without the quotes). Examples\n\nInput\nH QH 9S\n\nOutput\nYES\n\nInput\nS 8D 6D\n\nOutput\nYES\n\nInput\nC 7H AS\n\nOutput\nNO","484":"B. Choosing Laptop time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya is choosing a laptop. The shop has n laptops to all tastes. Vasya is interested in the following properties: processor speed, ram and hdd. Vasya is a programmer and not a gamer which is why he is not interested in all other properties. If all three properties of a laptop are strictly less than those properties of some other laptop, then the first laptop is considered outdated by Vasya. Among all laptops Vasya does not consider outdated, he chooses the cheapest one. There are very many laptops, which is why Vasya decided to write a program that chooses the suitable laptop. However, Vasya doesn't have his own laptop yet and he asks you to help him.\n\nInput\nThe first line contains number n ( 1 \u2264 n \u2264 100 ). Then follow n lines. Each describes a laptop as speed ram hdd cost . Besides, speed , ram , hdd and cost are integers 1000 \u2264 speed \u2264 4200 is the processor's speed in megahertz 256 \u2264 ram \u2264 4096 the RAM volume in megabytes 1 \u2264 hdd \u2264 500 is the HDD in gigabytes 100 \u2264 cost \u2264 1000 is price in tugriks All laptops have different prices.\n\nOutput\nPrint a single number \u2014 the number of a laptop Vasya will choose. The laptops are numbered with positive integers from 1 to n in the order in which they are given in the input data. Examples\n\nInput\n5 2100 512 150 200 2000 2048 240 350 2300 1024 200 320 2500 2048 80 300 2000 512 180 150\n\nOutput\n4\n\nNote\nIn the third sample Vasya considers the first and fifth laptops outdated as all of their properties cannot match those of the third laptop. The fourth one is the cheapest among the laptops that are left. Thus, Vasya chooses the fourth laptop.","486":"A. Palindromic Times time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Tattah is asleep if and only if Tattah is attending a lecture. This is a well-known formula among Tattah's colleagues. On a Wednesday afternoon, Tattah was attending Professor HH's lecture. At 12:21 , right before falling asleep, he was staring at the digital watch around Saher's wrist. He noticed that the digits on the clock were the same when read from both directions i.e. a palindrome. In his sleep, he started dreaming about such rare moments of the day when the time displayed on a digital clock is a palindrome. As soon as he woke up, he felt destined to write a program that finds the next such moment. However, he still hasn't mastered the skill of programming while sleeping, so your task is to help him.\n\nInput\nThe first and only line of the input starts with a string with the format \" HH:MM \" where \" HH \" is from \" 00 \" to \" 23 \" and \" MM \" is from \" 00 \" to \" 59 \". Both \" HH \" and \" MM \" have exactly two digits.\n\nOutput\nPrint the palindromic time of day that comes soonest after the time given in the input. If the input time is palindromic, output the soonest palindromic time after the input time. Examples\n\nInput\n12:21\n\nOutput\n13:31\n\nInput\n23:59\n\nOutput\n00:00","516":"A. Lucky Sum of Digits time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Petya wonders eagerly what minimum lucky number has the sum of digits equal to n . Help him cope with the task.\n\nInput\nThe single line contains an integer n ( 1 \u2264 n \u2264 10 6 ) \u2014 the sum of digits of the required lucky number.\n\nOutput\nPrint on the single line the result \u2014 the minimum lucky number, whose sum of digits equals n . If such number does not exist, print -1. Examples\n\nInput\n11\n\nOutput\n47\n\nInput\n10\n\nOutput\n-1","518":"A. Increasing Sequence time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output A sequence a 0 , a 1 , ..., a t - 1 is called increasing if a i - 1 < a i for each i : 0 < i < t . You are given a sequence b 0 , b 1 , ..., b n - 1 and a positive integer d . In each move you may choose one element of the given sequence and add d to it. What is the least number of moves required to make the given sequence increasing?\n\nInput\nThe first line of the input contains two integer numbers n and d ( 2 \u2264 n \u2264 2000, 1 \u2264 d \u2264 10 6 ). The second line contains space separated sequence b 0 , b 1 , ..., b n - 1 ( 1 \u2264 b i \u2264 10 6 ).\n\nOutput\nOutput the minimal number of moves needed to make the sequence increasing. Examples\n\nInput\n4 2 1 3 3 2\n\nOutput\n3","521":"A. Nearly Lucky Number time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Unfortunately, not all numbers are lucky. Petya calls a number nearly lucky if the number of lucky digits in it is a lucky number. He wonders whether number n is a nearly lucky number.\n\nInput\nThe only line contains an integer n ( 1 \u2264 n \u2264 10 18 ). Please do not use the %lld specificator to read or write 64-bit numbers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.\n\nOutput\nPrint on the single line \" YES \" if n is a nearly lucky number. Otherwise, print \" NO \" (without the quotes). Examples\n\nInput\n40047\n\nOutput\nNO\n\nInput\n7747774\n\nOutput\nYES\n\nInput\n1000000000000000000\n\nOutput\nNO\n\nNote\nIn the first sample there are 3 lucky digits (first one and last two), so the answer is \" NO \". In the second sample there are 7 lucky digits, 7 is lucky number, so the answer is \" YES \". In the third sample there are no lucky digits, so the answer is \" NO \".","529":"A. Petya and Inequiations time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya loves inequations. Help him find n positive integers a 1 , a 2 , ..., a n , such that the following two conditions are satisfied: a 1 2 + a 2 2 + ... + a n 2 \u2265 x a 1 + a 2 + ... + a n \u2264 y\n\nInput\nThe first line contains three space-separated integers n , x and y ( 1 \u2264 n \u2264 10 5 , 1 \u2264 x \u2264 10 12 , 1 \u2264 y \u2264 10 6 ). Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is recommended to use cin, cout streams or the %I64d specificator.\n\nOutput\nPrint n positive integers that satisfy the conditions, one integer per line. If such numbers do not exist, print a single number \"-1\". If there are several solutions, print any of them. Examples\n\nInput\n5 15 15\n\nOutput\n4 4 1 1 2\n\nInput\n2 3 2\n\nOutput\n-1\n\nInput\n1 99 11\n\nOutput\n11","531":"A. Petya and Strings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya loves presents. His mum bought him two strings of the same size for his birthday. The strings consist of uppercase and lowercase Latin letters. Now Petya wants to compare those two strings lexicographically . The letters' case does not matter, that is an uppercase letter is considered equivalent to the corresponding lowercase letter. Help Petya perform the comparison.\n\nInput\nEach of the first two lines contains a bought string. The strings' lengths range from 1 to 100 inclusive. It is guaranteed that the strings are of the same length and also consist of uppercase and lowercase Latin letters.\n\nOutput\nIf the first string is less than the second one, print \"-1\". If the second string is less than the first one, print \"1\". If the strings are equal, print \"0\".\n\nNote\nthat the letters' case is not taken into consideration when the strings are compared. Examples\n\nInput\naaaa aaaA\n\nOutput\n0\n\nInput\nabs Abz\n\nOutput\n-1\n\nInput\nabcdefg AbCdEfF\n\nOutput\n1\n\nNote\nIf you want more formal information about the lexicographical order (also known as the \" dictionary order \" or \" alphabetical order \"), you can visit the following site: http:\/\/en.wikipedia.org\/wiki\/Lexicographical_order","543":"A. Cifera time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output When Petya went to school, he got interested in large numbers and what they were called in ancient times. For instance, he learned that the Russian word \"tma\" (which now means \"too much to be counted\") used to stand for a thousand and \"tma tmyschaya\" (which literally means \"the tma of tmas\") used to stand for a million. Petya wanted to modernize the words we use for numbers and invented a word petricium that represents number k . Moreover, petricium la petricium stands for number k 2 , petricium la petricium la petricium stands for k 3 and so on. All numbers of this form are called petriciumus cifera , and the number's importance is the number of articles la in its title. Petya's invention brought on a challenge that needed to be solved quickly: does some number l belong to the set petriciumus cifera ? As Petya is a very busy schoolboy he needs to automate the process, he asked you to solve it.\n\nInput\nThe first input line contains integer number k , the second line contains integer number l ( 2 \u2264 k , l \u2264 2 31 - 1 ).\n\nOutput\nYou should print in the first line of the output \" YES \", if the number belongs to the set petriciumus cifera and otherwise print \" NO \". If the number belongs to the set, then print on the seconds line the only number \u2014 the importance of number l . Examples\n\nInput\n5 25\n\nOutput\nYES 1\n\nInput\n3 8\n\nOutput\nNO","550":"A. Party time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output A company has n employees numbered from 1 to n . Each employee either has no immediate manager or exactly one immediate manager, who is another employee with a different number. An employee A is said to be the superior of another employee B if at least one of the following is true: Employee A is the immediate manager of employee B Employee B has an immediate manager employee C such that employee A is the superior of employee C . The company will not have a managerial cycle. That is, there will not exist an employee who is the superior of his\/her own immediate manager. Today the company is going to arrange a party. This involves dividing all n employees into several groups: every employee must belong to exactly one group. Furthermore, within any single group, there must not be two employees A and B such that A is the superior of B . What is the minimum number of groups that must be formed?\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the number of employees. The next n lines contain the integers p i ( 1 \u2264 p i \u2264 n or p i = -1). Every p i denotes the immediate manager for the i -th employee. If p i is -1, that means that the i -th employee does not have an immediate manager. It is guaranteed, that no employee will be the immediate manager of him\/herself ( p i \u2260 i ). Also, there will be no managerial cycles.\n\nOutput\nPrint a single integer denoting the minimum number of groups that will be formed in the party. Examples\n\nInput\n5 -1 1 2 1 -1\n\nOutput\n3\n\nNote\nFor the first example, three groups are sufficient, for example: Employee 1 Employees 2 and 4 Employees 3 and 5","556":"A. Tram time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Linear Kingdom has exactly one tram line. It has n stops, numbered from 1 to n in the order of tram's movement. At the i -th stop a i passengers exit the tram, while b i passengers enter it. The tram is empty before it arrives at the first stop. Also, when the tram arrives at the last stop, all passengers exit so that it becomes empty. Your task is to calculate the tram's minimum capacity such that the number of people inside the tram at any time never exceeds this capacity.\n\nNote\nthat at each stop all exiting passengers exit before any entering passenger enters the tram.\n\nInput\nThe first line contains a single number n ( 2 \u2264 n \u2264 1000 ) \u2014 the number of the tram's stops. Then n lines follow, each contains two integers a i and b i ( 0 \u2264 a i , b i \u2264 1000 ) \u2014 the number of passengers that exits the tram at the i -th stop, and the number of passengers that enter the tram at the i -th stop. The stops are given from the first to the last stop in the order of tram's movement. The number of people who exit at a given stop does not exceed the total number of people in the tram immediately before it arrives at the stop. More formally, . This particularly means that a 1 = 0 . At the last stop, all the passengers exit the tram and it becomes empty. More formally, . No passenger will enter the train at the last stop. That is, b n = 0 .\n\nOutput\nPrint a single integer denoting the minimum possible capacity of the tram (0 is allowed). Examples\n\nInput\n4 0 3 2 5 4 2 4 0\n\nOutput\n6\n\nNote\nFor the first example, a capacity of 6 is sufficient: At the first stop, the number of passengers inside the tram before arriving is 0. Then, 3 passengers enter the tram, and the number of passengers inside the tram becomes 3. At the second stop, 2 passengers exit the tram (1 passenger remains inside). Then, 5 passengers enter the tram. There are 6 passengers inside the tram now. At the third stop, 4 passengers exit the tram (2 passengers remain inside). Then, 2 passengers enter the tram. There are 4 passengers inside the tram now. Finally, all the remaining passengers inside the tram exit the tram at the last stop. There are no passenger inside the tram now, which is in line with the constraints. Since the number of passengers inside the tram never exceeds 6, a capacity of 6 is sufficient. Furthermore it is not possible for the tram to have a capacity less than 6. Hence, 6 is the correct answer.","562":"A. Elevator time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output And now the numerous qualifying tournaments for one of the most prestigious Russian contests Russian Codec Cup are over. All n participants who have made it to the finals found themselves in a huge m -floored 10 8 -star hotel. Of course the first thought to come in a place like this is \"How about checking out the elevator?\". The hotel's elevator moves between floors according to one never changing scheme. Initially (at the moment of time 0 ) the elevator is located on the 1 -st floor, then it moves to the 2 -nd floor, then \u2014 to the 3 -rd floor and so on until it reaches the m -th floor. After that the elevator moves to floor m - 1 , then to floor m - 2 , and so on until it reaches the first floor. This process is repeated infinitely. We know that the elevator has infinite capacity; we also know that on every floor people get on the elevator immediately. Moving between the floors takes a unit of time. For each of the n participant you are given s i , which represents the floor where the i -th participant starts, f i , which represents the floor the i -th participant wants to reach, and t i , which represents the time when the i -th participant starts on the floor s i . For each participant print the minimum time of his\/her arrival to the floor f i . If the elevator stops on the floor s i at the time t i , then the i -th participant can enter the elevator immediately. If the participant starts on the floor s i and that's the floor he wanted to reach initially ( s i = f i ), then the time of arrival to the floor f i for this participant is considered equal to t i .\n\nInput\nThe first line contains two space-separated integers n and m ( 1 \u2264 n \u2264 10 5 , 2 \u2264 m \u2264 10 8 ). Next n lines contain information about the participants in the form of three space-separated integers s i f i t i ( 1 \u2264 s i , f i \u2264 m , 0 \u2264 t i \u2264 10 8 ), described in the problem statement.\n\nOutput\nPrint n lines each containing one integer \u2014 the time of the arrival for each participant to the required floor. Examples\n\nInput\n7 4 2 4 3 1 2 0 2 2 0 1 2 1 4 3 5 1 2 2 4 2 0\n\nOutput\n9 1 0 7 10 7 5\n\nInput\n5 5 1 5 4 1 3 1 1 3 4 3 1 5 4 2 5\n\nOutput\n12 10 10 8 7\n\nNote\nLet's consider the first sample. The first participant starts at floor s = 2 by the time equal to t = 3 . To get to the floor f = 4 , he has to wait until the time equals 7 , that's the time when the elevator will go upwards for the second time. Then the first participant should get on the elevator and go two floors up. In this case the first participant gets to the floor f at time equal to 9 . The second participant starts at the time t = 0 on the floor s = 1 , enters the elevator immediately, and arrives to the floor f = 2 . The third participant doesn't wait for the elevator, because he needs to arrive to the same floor where he starts.","582":"A. String Task time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya started to attend programming lessons. On the first lesson his task was to write a simple program. The program was supposed to do the following: in the given string, consisting if uppercase and lowercase Latin letters, it: deletes all the vowels, inserts a character \" . \" before each consonant, replaces all uppercase consonants with corresponding lowercase ones. Vowels are letters \"A\", \"O\", \"Y\", \"E\", \"U\", \"I\", and the rest are consonants. The program's input is exactly one string, it should return the output as a single string, resulting after the program's processing the initial string. Help Petya cope with this easy task.\n\nInput\nThe first line represents input string of Petya's program. This string only consists of uppercase and lowercase Latin letters and its length is from 1 to 100 , inclusive.\n\nOutput\nPrint the resulting string. It is guaranteed that this string is not empty. Examples\n\nInput\ntour\n\nOutput\n.t.r\n\nInput\nCodeforces\n\nOutput\n.c.d.f.r.c.s\n\nInput\naBAcAba\n\nOutput\n.b.c.b","593":"A. Epic Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Simon and Antisimon play a game. Initially each player receives one fixed positive integer that doesn't change throughout the game. Simon receives number a and Antisimon receives number b . They also have a heap of n stones. The players take turns to make a move and Simon starts. During a move a player should take from the heap the number of stones equal to the greatest common divisor of the fixed number he has received and the number of stones left in the heap. A player loses when he cannot take the required number of stones (i. e. the heap has strictly less stones left than one needs to take). Your task is to determine by the given a , b and n who wins the game.\n\nInput\nThe only string contains space-separated integers a , b and n ( 1 \u2264 a , b , n \u2264 100 ) \u2014 the fixed numbers Simon and Antisimon have received correspondingly and the initial number of stones in the pile.\n\nOutput\nIf Simon wins, print \" 0 \" (without the quotes), otherwise print \" 1 \" (without the quotes). Examples\n\nInput\n3 5 9\n\nOutput\n0\n\nInput\n1 1 100\n\nOutput\n1\n\nNote\nThe greatest common divisor of two non-negative integers a and b is such maximum positive integer k , that a is divisible by k without remainder and similarly, b is divisible by k without remainder. Let gcd ( a , b ) represent the operation of calculating the greatest common divisor of numbers a and b . Specifically, gcd ( x , 0) = gcd (0, x ) = x . In the first sample the game will go like that: Simon should take gcd (3, 9) = 3 stones from the heap. After his move the heap has 6 stones left. Antisimon should take gcd (5, 6) = 1 stone from the heap. After his move the heap has 5 stones left. Simon should take gcd (3, 5) = 1 stone from the heap. After his move the heap has 4 stones left. Antisimon should take gcd (5, 4) = 1 stone from the heap. After his move the heap has 3 stones left. Simon should take gcd (3, 3) = 3 stones from the heap. After his move the heap has 0 stones left. Antisimon should take gcd (5, 0) = 5 stones from the heap. As 0 < 5 , it is impossible and Antisimon loses. In the second sample each player during each move takes one stone from the heap. As n is even, Antisimon takes the last stone and Simon can't make a move after that.","597":"A. Super Agent time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There is a very secret base in Potatoland where potato mash is made according to a special recipe. The neighbours from Porridgia decided to seize this recipe and to sell it to Pilauland. For this mission they have been preparing special agent Pearlo for many years. When, finally, Pearlo learned all secrets of espionage, he penetrated into the Potatoland territory and reached the secret base. Now he is standing at the entrance, but to get inside he need to pass combination lock. Minute ago one of the workers entered the password on the terminal and opened the door. The terminal is a square digital keyboard 3 \u00d7 3 with digits from 1 to 9 . Pearlo knows that the password consists from distinct digits and is probably symmetric with respect to the central button of the terminal. He has heat sensor which allowed him to detect the digits which the worker pressed. Now he wants to check whether the password entered by the worker is symmetric with respect to the central button of the terminal. This fact can Help Pearlo to reduce the number of different possible password combinations.\n\nInput\nInput contains the matrix of three rows of three symbols each. Symbol \u00ab X \u00bb means that the corresponding button was pressed, and \u00ab . \u00bb means that is was not pressed. The matrix may contain no \u00ab X \u00bb, also it may contain no \u00ab . \u00bb.\n\nOutput\nPrint YES if the password is symmetric with respect to the central button of the terminal and NO otherwise. Examples\n\nInput\nXX. ... .XX\n\nOutput\nYES\n\nInput\nX.X X.. ...\n\nOutput\nNO\n\nNote\nIf you are not familiar with the term \u00abcentral symmetry\u00bb, you may look into http:\/\/en.wikipedia.org\/wiki\/Central_symmetry","601":"B. Correct Solution? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said: \u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes. \u2014No problem! \u2014 said Bob and immediately gave her an answer. Alice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.\n\nInput\nThe first line contains one integer n ( 0 \u2264 n \u2264 10 9 ) without leading zeroes. The second lines contains one integer m ( 0 \u2264 m \u2264 10 9 ) \u2014 Bob's answer, possibly with leading zeroes.\n\nOutput\nPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise. Examples\n\nInput\n3310 1033\n\nOutput\nOK\n\nInput\n4 5\n\nOutput\nWRONG_ANSWER","604":"B. Quiz League time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt A team quiz game called \"What? Where? When?\" is very popular in Berland. The game is centered on two teams competing. They are the team of six Experts versus the team of the Audience. A person from the audience asks a question and the experts are allowed a minute on brainstorming and finding the right answer to the question. All it takes to answer a typical question is general knowledge and common logic. The question sent be the audience are in envelops lain out in a circle on a round table. Each envelop is marked by the name of the asker's town. Each question is positioned in a separate sector. In the centre of the table is a spinning arrow. Thus, the table rather resembles a roulette table with no ball but with a spinning arrow instead. The host sets off the spinning arrow to choose a question for the experts: when the arrow stops spinning, the question it is pointing at is chosen. If the arrow points at the question that has already been asked, the host chooses the next unanswered question in the clockwise direction. Your task is to determine which will be the number of the next asked question if the arrow points at sector number k .\n\nInput\nThe first line contains two positive integers n and k ( 1 \u2264 n \u2264 1000 and 1 \u2264 k \u2264 n ) \u2014 the numbers of sectors on the table and the number of the sector where the arrow is pointing. The second line contains n numbers: a i = 0 if the question from sector i has already been asked and a i = 1 if the question from sector i hasn't been asked yet ( 1 \u2264 i \u2264 n ). The sectors are given in the clockwise order, the first sector follows after the n -th one.\n\nOutput\nPrint the single number \u2014 the number of the sector containing the question the experts will be asked. It is guaranteed that the answer exists, that is that not all the questions have already been asked. Examples\n\nInput\n5 5 0 1 0 1 0\n\nOutput\n2\n\nInput\n2 1 1 1\n\nOutput\n1","605":"A. Elevator time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt A sky scraper with 1000 floors has been built in the city of N. It has modern superfast elevators to help to travel from one floor to another. Each elevator has two doors, the front one and the back one. If one goes in through the front door, he goes out through the back one and vice versa. The elevator has two rails numbered with numbers 1 and 2. Rail 1 is located to the left of the entrance to the front door (or correspondingly, to the right of the entrance to the back door). Rail 2 is located opposite it, to the right of the entrance to the front door and to the left of the entrance to the back door. We know that each person in the city of N holds at a rail with the strongest hand. One day a VIP person visited the city and of course, he took a look at the skyscraper and took a ride in the elevator. We know the door through which he entered and the rail he was holding at. Now we need to determine as soon as possible whether he is left-handed or right-handed.\n\nInput\nThe first line indicates the door through which the very important person entered the elevator. It contains \"front\" if the person enters the elevator through the front door and \"back\" if he entered the elevator through the back door. The second line contains integer a ( 1 \u2264 a \u2264 2 ) which denotes the number of the rail at which the person was holding.\n\nOutput\nPrint character \"R\" if the VIP is right-handed or \"L\" if he is left-handed. Examples\n\nInput\nfront 1\n\nOutput\nL","608":"F. Spiders time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt One day mum asked Petya to sort his toys and get rid of some of them. Petya found a whole box of toy spiders. They were quite dear to him and the boy didn't want to throw them away. Petya conjured a cunning plan: he will glue all the spiders together and attach them to the ceiling. Besides, Petya knows that the lower the spiders will hang, the more mum is going to like it and then she won't throw his favourite toys away. Help Petya carry out the plan. A spider consists of k beads tied together by k - 1 threads. Each thread connects two different beads, at that any pair of beads that make up a spider is either directly connected by a thread, or is connected via some chain of threads and beads. Petya may glue spiders together directly gluing their beads. The length of each thread equals 1. The sizes of the beads can be neglected. That's why we can consider that gluing spiders happens by identifying some of the beads (see the picture). Besides, the construction resulting from the gluing process should also represent a spider, that is, it should have the given features. After Petya glues all spiders together, he measures the length of the resulting toy. The distance between a pair of beads is identified as the total length of the threads that connect these two beads. The length of the resulting construction is the largest distance between all pairs of beads. Petya wants to make the spider whose length is as much as possible. The picture two shows two spiders from the second sample. We can glue to the bead number 2 of the first spider the bead number 1 of the second spider. The threads in the spiders that form the sequence of threads of maximum lengths are highlighted on the picture.\n\nInput\nThe first input file line contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of spiders. Next n lines contain the descriptions of each spider: integer n i ( 2 \u2264 n i \u2264 100 ) \u2014 the number of beads, then n i - 1 pairs of numbers denoting the numbers of the beads connected by threads. The beads that make up each spider are numbered from 1 to n i .\n\nOutput\nPrint a single number \u2014 the length of the required construction. Examples\n\nInput\n1 3 1 2 2 3\n\nOutput\n2\n\nInput\n2 3 1 2 1 3 4 1 2 2 3 2 4\n\nOutput\n4\n\nInput\n2 5 1 2 2 3 3 4 3 5 7 3 4 1 2 2 4 4 6 2 7 6 5\n\nOutput\n7","628":"A. Lucky Division time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Petya calls a number almost lucky if it could be evenly divided by some lucky number. Help him find out if the given number n is almost lucky.\n\nInput\nThe single line contains an integer n (1 \u2264 n \u2264 1000) \u2014 the number that needs to be checked.\n\nOutput\nIn the only line print \" YES \" (without the quotes), if number n is almost lucky. Otherwise, print \" NO \" (without the quotes). Examples\n\nInput\n47\n\nOutput\nYES\n\nInput\n16\n\nOutput\nYES\n\nInput\n78\n\nOutput\nNO\n\nNote\nNote that all lucky numbers are almost lucky as any number is evenly divisible by itself. In the first sample 47 is a lucky number. In the second sample 16 is divisible by 4 .","640":"A. The number of positions time limit per test 0.5 second memory limit per test 256 megabytes input standard input output standard output Petr stands in line of n people, but he doesn't know exactly which position he occupies. He can say that there are no less than a people standing in front of him and no more than b people standing behind him. Find the number of different positions Petr can occupy.\n\nInput\nThe only line contains three integers n , a and b ( 0 \u2264 a , b < n \u2264 100 ).\n\nOutput\nPrint the single number \u2014 the number of the sought positions. Examples\n\nInput\n3 1 1\n\nOutput\n2\n\nInput\n5 2 3\n\nOutput\n3\n\nNote\nThe possible positions in the first sample are: 2 and 3 (if we number the positions starting with 1). In the second sample they are 3, 4 and 5.","653":"A. Measuring Lengths in Baden time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Lengths are measures in Baden in inches and feet. To a length from centimeters it is enough to know that an inch equals three centimeters in Baden and one foot contains 12 inches. You are given a length equal to n centimeters. Your task is to convert it to feet and inches so that the number of feet was maximum. The result should be an integer rounded to the closest value containing an integral number of inches.\n\nNote\nthat when you round up, 1 cm rounds up to 0 inches and 2 cm round up to 1 inch.\n\nInput\nThe only line contains an integer n ( 1 \u2264 n \u2264 10000 ).\n\nOutput\nPrint two non-negative space-separated integers a and b , where a is the numbers of feet and b is the number of inches. Examples\n\nInput\n42\n\nOutput\n1 2\n\nInput\n5\n\nOutput\n0 2","659":"A. Wasted Time time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Mr. Scrooge, a very busy man, decided to count the time he wastes on all sorts of useless stuff to evaluate the lost profit. He has already counted the time he wastes sleeping and eating. And now Mr. Scrooge wants to count the time he has wasted signing papers. Mr. Scrooge's signature can be represented as a polyline A 1 A 2 ... A n . Scrooge signs like that: first it places a pen at the point A 1 , then draws a segment from point A 1 to point A 2 , then he draws a segment from point A 2 to point A 3 and so on to point A n , where he stops signing and takes the pen off the paper. At that the resulting line can intersect with itself and partially repeat itself but Scrooge pays no attention to it and never changes his signing style. As Scrooge makes the signature, he never takes the pen off the paper and his writing speed is constant \u2014 50 millimeters per second. Scrooge signed exactly k papers throughout his life and all those signatures look the same. Find the total time Scrooge wasted signing the papers.\n\nInput\nThe first line contains two integers n and k ( 2 \u2264 n \u2264 100 , 1 \u2264 k \u2264 1000 ). Each of the following n lines contains the coordinates of the polyline's endpoints. The i -th one contains coordinates of the point A i \u2014 integers x i and y i , separated by a space. All points A i are different. The absolute value of all coordinates does not exceed 20 . The coordinates are measured in millimeters.\n\nOutput\nPrint one real number \u2014 the total time Scrooges wastes on signing the papers in seconds. The absolute or relative error should not exceed 10 - 6 . Examples\n\nInput\n2 1 0 0 10 0\n\nOutput\n0.200000000\n\nInput\n5 10 3 1 -5 6 -2 -1 3 2 10 0\n\nOutput\n6.032163204\n\nInput\n6 10 5 0 4 0 6 0 3 0 7 0 2 0\n\nOutput\n3.000000000","667":"A. Cookies time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Olga came to visit the twins Anna and Maria and saw that they have many cookies. The cookies are distributed into bags. As there are many cookies, Olga decided that it's no big deal if she steals a bag. However, she doesn't want the sisters to quarrel because of nothing when they divide the cookies. That's why Olga wants to steal a bag with cookies so that the number of cookies in the remaining bags was even, that is, so that Anna and Maria could evenly divide it into two (even 0 remaining cookies will do, just as any other even number). How many ways there are to steal exactly one cookie bag so that the total number of cookies in the remaining bags was even?\n\nInput\nThe first line contains the only integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of cookie bags Anna and Maria have. The second line contains n integers a i ( 1 \u2264 a i \u2264 100 ) \u2014 the number of cookies in the i -th bag.\n\nOutput\nPrint in the only line the only number \u2014 the sought number of ways. If there are no such ways print 0. Examples\n\nInput\n1 1\n\nOutput\n1\n\nInput\n10 1 2 2 3 4 4 4 2 2 2\n\nOutput\n8\n\nInput\n11 2 2 2 2 2 2 2 2 2 2 99\n\nOutput\n1\n\nNote\nIn the first sample Olga should take the only bag so that the twins ended up with the even number of cookies. In the second sample Olga can take any of five bags with two cookies or any of three bags with four cookies \u2014 5 + 3 = 8 ways in total. In the third sample, no matter which bag with two cookies Olga chooses, the twins are left with 2 * 9 + 99 = 117 cookies. Thus, Olga has only one option: to take the bag with 99 cookies.","671":"A. Numbers time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output Little Petya likes numbers a lot. He found that number 123 in base 16 consists of two digits: the first is 7 and the second is 11. So the sum of digits of 123 in base 16 is equal to 18. Now he wonders what is an average value of sum of digits of the number A written in all bases from 2 to A - 1 .\n\nNote\nthat all computations should be done in base 10. You should find the result as an irreducible fraction, written in base 10.\n\nInput\nInput contains one integer number A ( 3 \u2264 A \u2264 1000 ).\n\nOutput\nOutput should contain required average value in format \u00ab X\/Y \u00bb, where X is the numerator and Y is the denominator. Examples\n\nInput\n5\n\nOutput\n7\/3\n\nInput\n3\n\nOutput\n2\/1\n\nNote\nIn the first sample number 5 written in all bases from 2 to 4 looks so: 101, 12, 11. Sums of digits are 2, 3 and 2, respectively.","673":"A. HQ9+ time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output HQ9+ is a joke programming language which has only four one-character instructions: \" H \" prints \" Hello, World! \", \" Q \" prints the source code of the program itself, \" 9 \" prints the lyrics of \"99 Bottles of Beer\" song, \" + \" increments the value stored in the internal accumulator. Instructions \" H \" and \" Q \" are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored. You are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.\n\nInput\nThe input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.\n\nOutput\nOutput \" YES \", if executing the program will produce any output, and \" NO \" otherwise. Examples\n\nInput\nHi!\n\nOutput\nYES\n\nInput\nCodeforces\n\nOutput\nNO\n\nNote\nIn the first case the program contains only one instruction \u2014 \" H \", which prints \" Hello, World! \". In the second case none of the program characters are language instructions.","676":"A. Average Numbers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given a sequence of positive integers a 1 , a 2 , ..., a n . Find all such indices i , that the i -th element equals the arithmetic mean of all other elements (that is all elements except for this one).\n\nInput\nThe first line contains the integer n ( 2 \u2264 n \u2264 2\u00b710 5 ). The second line contains elements of the sequence a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 1000 ). All the elements are positive integers.\n\nOutput\nPrint on the first line the number of the sought indices. Print on the second line the sought indices in the increasing order. All indices are integers from 1 to n . If the sought elements do not exist, then the first output line should contain number 0 . In this case you may either not print the second line or print an empty line. Examples\n\nInput\n5 1 2 3 4 5\n\nOutput\n1 3\n\nInput\n4 50 50 50 50\n\nOutput\n4 1 2 3 4","678":"A. Presents time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya very much likes gifts. Recently he has received a new laptop as a New Year gift from his mother. He immediately decided to give it to somebody else as what can be more pleasant than giving somebody gifts. And on this occasion he organized a New Year party at his place and invited n his friends there. If there's one thing Petya likes more that receiving gifts, that's watching others giving gifts to somebody else. Thus, he safely hid the laptop until the next New Year and made up his mind to watch his friends exchanging gifts while he does not participate in the process. He numbered all his friends with integers from 1 to n . Petya remembered that a friend number i gave a gift to a friend number p i . He also remembered that each of his friends received exactly one gift. Now Petya wants to know for each friend i the number of a friend who has given him a gift.\n\nInput\nThe first line contains one integer n ( 1 \u2264 n \u2264 100 ) \u2014 the quantity of friends Petya invited to the party. The second line contains n space-separated integers: the i -th number is p i \u2014 the number of a friend who gave a gift to friend number i . It is guaranteed that each friend received exactly one gift. It is possible that some friends do not share Petya's ideas of giving gifts to somebody else. Those friends gave the gifts to themselves.\n\nOutput\nPrint n space-separated integers: the i -th number should equal the number of the friend who gave a gift to friend number i . Examples\n\nInput\n4 2 3 4 1\n\nOutput\n4 1 2 3\n\nInput\n3 1 3 2\n\nOutput\n1 3 2\n\nInput\n2 1 2\n\nOutput\n1 2","688":"A. Postcards and photos time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Polycarpus has postcards and photos hung in a row on the wall. He decided to put them away to the closet and hang on the wall a famous painter's picture. Polycarpus does it like that: he goes from the left to the right and removes the objects consecutively. As Polycarpus doesn't want any mix-ups to happen, he will not carry in his hands objects of two different types. In other words, Polycarpus can't carry both postcards and photos simultaneously. Sometimes he goes to the closet and puts the objects there, thus leaving his hands free. Polycarpus must put all the postcards and photos to the closet. He cannot skip objects. What minimum number of times he should visit the closet if he cannot carry more than 5 items?\n\nInput\nThe only line of the input data contains a non-empty string consisting of letters \"\u0421\" and \"P\" whose length does not exceed 100 characters. If the i -th character in the string is the letter \"\u0421\" , that means that the i -th object (the numbering goes from the left to the right) on Polycarpus' wall is a postcard. And if the i -th character is the letter \"P\" , than the i -th object on the wall is a photo.\n\nOutput\nPrint the only number \u2014 the minimum number of times Polycarpus has to visit the closet. Examples\n\nInput\nCPCPCPC\n\nOutput\n7\n\nInput\nCCCCCCPPPPPP\n\nOutput\n4\n\nInput\nCCCCCCPPCPPPPPPPPPP\n\nOutput\n6\n\nInput\nCCCCCCCCCC\n\nOutput\n2\n\nNote\nIn the first sample Polycarpus needs to take one item to the closet 7 times. In the second sample Polycarpus can first take 3 postcards to the closet; then 3 more. He can take the 6 photos that are left in the similar way, going to the closet twice. In the third sample Polycarpus can visit the closet twice, both times carrying 3 postcards. Then he can take there 2 photos at once, then one postcard and finally, he can carry the last 10 photos if he visits the closet twice. In the fourth sample Polycarpus can visit the closet twice and take there all 10 postcards (5 items during each go).","689":"A. Petr and Book time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One Sunday Petr went to a bookshop and bought a new book on sports programming. The book had exactly n pages. Petr decided to start reading it starting from the next day, that is, from Monday. Petr's got a very tight schedule and for each day of the week he knows how many pages he will be able to read on that day. Some days are so busy that Petr will have no time to read whatsoever. However, we know that he will be able to read at least one page a week. Assuming that Petr will not skip days and will read as much as he can every day, determine on which day of the week he will read the last page of the book.\n\nInput\nThe first input line contains the single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of pages in the book. The second line contains seven non-negative space-separated integers that do not exceed 1000 \u2014 those integers represent how many pages Petr can read on Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday correspondingly. It is guaranteed that at least one of those numbers is larger than zero.\n\nOutput\nPrint a single number \u2014 the number of the day of the week, when Petr will finish reading the book. The days of the week are numbered starting with one in the natural order: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday. Examples\n\nInput\n100 15 20 20 15 10 30 45\n\nOutput\n6\n\nInput\n2 1 0 0 0 0 0 0\n\nOutput\n1\n\nNote\nNote to the first sample: By the end of Monday and therefore, by the beginning of Tuesday Petr has 85 pages left. He has 65 pages left by Wednesday, 45 by Thursday, 30 by Friday, 20 by Saturday and on Saturday Petr finishes reading the book (and he also has time to read 10 pages of something else).\n\nNote\nto the second sample: On Monday of the first week Petr will read the first page. On Monday of the second week Petr will read the second page and will finish reading the book.","695":"D. Two Paths time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output As you know, Bob's brother lives in Flatland. In Flatland there are n cities, connected by n - 1 two-way roads. The cities are numbered from 1 to n . You can get from one city to another moving along the roads. The \u00abTwo Paths\u00bb company, where Bob's brother works, has won a tender to repair two paths in Flatland. A path is a sequence of different cities, connected sequentially by roads. The company is allowed to choose by itself the paths to repair. The only condition they have to meet is that the two paths shouldn't cross (i.e. shouldn't have common cities). It is known that the profit, the \u00abTwo Paths\u00bb company will get, equals the product of the lengths of the two paths. Let's consider the length of each road equals 1, and the length of a path equals the amount of roads in it. Find the maximum possible profit for the company.\n\nInput\nThe first line contains an integer n ( 2 \u2264 n \u2264 200 ), where n is the amount of cities in the country. The following n - 1 lines contain the information about the roads. Each line contains a pair of numbers of the cities, connected by the road a i , b i ( 1 \u2264 a i , b i \u2264 n ).\n\nOutput\nOutput the maximum possible profit. Examples\n\nInput\n4 1 2 2 3 3 4\n\nOutput\n1\n\nInput\n7 1 2 1 3 1 4 1 5 1 6 1 7\n\nOutput\n0\n\nInput\n6 1 2 2 3 2 4 5 4 6 4\n\nOutput\n4","697":"A. Letter time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output A boy Bob likes to draw. Not long ago he bought a rectangular graph (checked) sheet with n rows and m columns. Bob shaded some of the squares on the sheet. Having seen his masterpiece, he decided to share it with his elder brother, who lives in Flatland. Now Bob has to send his picture by post, but because of the world economic crisis and high oil prices, he wants to send his creation, but to spend as little money as possible. For each sent square of paper (no matter whether it is shaded or not) Bob has to pay 3.14 burles. Please, help Bob cut out of his masterpiece a rectangle of the minimum cost, that will contain all the shaded squares. The rectangle's sides should be parallel to the sheet's sides.\n\nInput\nThe first line of the input data contains numbers n and m ( 1 \u2264 n , m \u2264 50 ), n \u2014 amount of lines, and m \u2014 amount of columns on Bob's sheet. The following n lines contain m characters each. Character \u00ab . \u00bb stands for a non-shaded square on the sheet, and \u00ab * \u00bb \u2014 for a shaded square. It is guaranteed that Bob has shaded at least one square.\n\nOutput\nOutput the required rectangle of the minimum cost. Study the output data in the sample tests to understand the output format better. Examples\n\nInput\n6 7 ....... ..***.. ..*.... ..***.. ..*.... ..***..\n\nOutput\n*** *.. *** *.. ***\n\nInput\n3 3 *** *.* ***\n\nOutput\n*** *.* ***","699":"B. Young Photographer time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Among other things, Bob is keen on photography. Especially he likes to take pictures of sportsmen. That was the reason why he placed himself in position x 0 of a long straight racetrack and got ready to take pictures. But the problem was that not all the runners passed him. The total amount of sportsmen, training at that racetrack, equals n . And each of them regularly runs distances within a particular segment of the racetrack, which is the same for each sportsman. For example, the first sportsman runs from position a 1 to position b 1 , the second \u2014 from a 2 to b 2 What is the minimum distance that Bob should move to have a chance to take pictures of each sportsman? Bob can take a picture of a sportsman, if he stands within the segment that this sportsman covers on the racetrack.\n\nInput\nThe first line of the input file contains integers n and x 0 ( 1 \u2264 n \u2264 100 ; 0 \u2264 x 0 \u2264 1000 ). The following n lines contain pairs of integers a i , b i ( 0 \u2264 a i , b i \u2264 1000 ; a i \u2260 b i ).\n\nOutput\nOutput the required minimum distance in the same units as the positions on the racetrack. If there is no such a position, output -1. Examples\n\nInput\n3 3 0 7 14 2 4 6\n\nOutput\n1","703":"A. Amusing Joke time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output So, the New Year holidays are over. Santa Claus and his colleagues can take a rest and have guests at last. When two \"New Year and Christmas Men\" meet, thear assistants cut out of cardboard the letters from the guest's name and the host's name in honor of this event. Then the hung the letters above the main entrance. One night, when everyone went to bed, someone took all the letters of our characters' names. Then he may have shuffled the letters and put them in one pile in front of the door. The next morning it was impossible to find the culprit who had made the disorder. But everybody wondered whether it is possible to restore the names of the host and his guests from the letters lying at the door? That is, we need to verify that there are no extra letters, and that nobody will need to cut more letters. Help the \"New Year and Christmas Men\" and their friends to cope with this problem. You are given both inscriptions that hung over the front door the previous night, and a pile of letters that were found at the front door next morning.\n\nInput\nThe input file consists of three lines: the first line contains the guest's name, the second line contains the name of the residence host and the third line contains letters in a pile that were found at the door in the morning. All lines are not empty and contain only uppercase Latin letters. The length of each line does not exceed 100 .\n\nOutput\nPrint \" YES \" without the quotes, if the letters in the pile could be permuted to make the names of the \"New Year and Christmas Men\". Otherwise, print \" NO \" without the quotes. Examples\n\nInput\nSANTACLAUS DEDMOROZ SANTAMOROZDEDCLAUS\n\nOutput\nYES\n\nInput\nPAPAINOEL JOULUPUKKI JOULNAPAOILELUPUKKI\n\nOutput\nNO\n\nInput\nBABBONATALE FATHERCHRISTMAS BABCHRISTMASBONATALLEFATHER\n\nOutput\nNO\n\nNote\nIn the first sample the letters written in the last line can be used to write the names and there won't be any extra letters left. In the second sample letter \" P \" is missing from the pile and there's an extra letter \" L \". In the third sample there's an extra letter \" L \".","705":"C. Queue time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In the Main Berland Bank n people stand in a queue at the cashier, everyone knows his\/her height h i , and the heights of the other people in the queue. Each of them keeps in mind number a i \u2014 how many people who are taller than him\/her and stand in queue in front of him. After a while the cashier has a lunch break and the people in the queue seat on the chairs in the waiting room in a random order. When the lunch break was over, it turned out that nobody can remember the exact order of the people in the queue, but everyone remembers his number a i . Your task is to restore the order in which the people stood in the queue if it is possible. There may be several acceptable orders, but you need to find any of them. Also, you need to print a possible set of numbers h i \u2014 the heights of people in the queue, so that the numbers a i are correct.\n\nInput\nThe first input line contains integer n \u2014 the number of people in the queue ( 1 \u2264 n \u2264 3000 ). Then n lines contain descriptions of the people as \" name i a i \" (one description on one line), where name i is a non-empty string consisting of lowercase Latin letters whose length does not exceed 10 characters (the i -th person's name), a i is an integer ( 0 \u2264 a i \u2264 n - 1 ), that represents the number of people who are higher and stand in the queue in front of person i . It is guaranteed that all names are different.\n\nOutput\nIf there's no acceptable order of the people in the queue, print the single line containing \" -1 \" without the quotes. Otherwise, print in n lines the people as \" name i h i \", where h i is the integer from 1 to 10 9 (inclusive), the possible height of a man whose name is name i . Print the people in the order in which they stand in the queue, starting from the head of the queue and moving to its tail. Numbers h i are not necessarily unique. Examples\n\nInput\n4 a 0 b 2 c 0 d 0\n\nOutput\na 150 c 170 d 180 b 160\n\nInput\n4 vasya 0 petya 1 manya 3 dunay 3\n\nOutput\n-1","717":"E. Help Greg the Dwarf 2 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Greg the Dwarf has been really busy recently with excavations by the Neverland Mountain. However for the well-known reasons (as you probably remember he is a very unusual dwarf and he cannot stand sunlight) Greg can only excavate at night. And in the morning he should be in his crypt before the first sun ray strikes. That's why he wants to find the shortest route from the excavation point to his crypt. Greg has recollected how the Codeforces participants successfully solved the problem of transporting his coffin to a crypt. So, in some miraculous way Greg appeared in your bedroom and asks you to help him in a highly persuasive manner. As usual, you didn't feel like turning him down. After some thought, you formalized the task as follows: as the Neverland mountain has a regular shape and ends with a rather sharp peak, it can be represented as a cone whose base radius equals r and whose height equals h . The graveyard where Greg is busy excavating and his crypt can be represented by two points on the cone's surface. All you've got to do is find the distance between points on the cone's surface. The task is complicated by the fact that the mountain's base on the ground level and even everything below the mountain has been dug through by gnome (one may wonder whether they've been looking for the same stuff as Greg...). So, one can consider the shortest way to pass not only along the side surface, but also along the cone's base (and in a specific case both points can lie on the cone's base \u2014 see the first sample test) Greg will be satisfied with the problem solution represented as the length of the shortest path between two points \u2014 he can find his way pretty well on his own. He gave you two hours to solve the problem and the time is ticking!\n\nInput\nThe first input line contains space-separated integers r and h ( 1 \u2264 r , h \u2264 1000 ) \u2014 the base radius and the cone height correspondingly. The second and third lines contain coordinates of two points on the cone surface, groups of three space-separated real numbers. The coordinates of the points are given in the systems of coordinates where the origin of coordinates is located in the centre of the cone's base and its rotation axis matches the OZ axis. In this coordinate system the vertex of the cone is located at the point (0, 0, h ) , the base of the cone is a circle whose center is at the point (0, 0, 0) , lying on the XOY plane, and all points on the cone surface have a non-negative coordinate z . It is guaranteed that the distances from the points to the cone surface do not exceed 10 - 12 . All real numbers in the input have no more than 16 digits after decimal point.\n\nOutput\nPrint the length of the shortest path between the points given in the input, with absolute or relative error not exceeding 10 - 6 . Examples\n\nInput\n2 2 1.0 0.0 0.0 -1.0 0.0 0.0\n\nOutput\n2.000000000\n\nInput\n2 2 1.0 0.0 0.0 1.0 0.0 1.0\n\nOutput\n2.414213562\n\nInput\n2 2 1.0 0.0 1.0 -1.0 0.0 1.0\n\nOutput\n2.534324263\n\nInput\n2 2 1.0 0.0 0.0 0.0 1.0 1.0\n\nOutput\n3.254470198","720":"B. Help Kingdom of Far Far Away 2 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output For some time the program of rounding numbers that had been developed by the Codeforces participants during one of the previous rounds, helped the citizens of Far Far Away to convert numbers into a more easily readable format. However, as time went by, the economy of the Far Far Away developed and the scale of operations grew. So the King ordered to found the Bank of Far Far Away and very soon even the rounding didn't help to quickly determine even the order of the numbers involved in operations. Besides, rounding a number to an integer wasn't very convenient as a bank needed to operate with all numbers with accuracy of up to 0.01 , and not up to an integer. The King issued yet another order: to introduce financial format to represent numbers denoting amounts of money. The formal rules of storing a number in the financial format are as follows: A number contains the integer part and the fractional part. The two parts are separated with a character \" . \" (decimal point). To make digits in the integer part of a number easier to read, they are split into groups of three digits, starting from the least significant ones. The groups are separated with the character \" , \" (comma). For example, if the integer part of a number equals 12345678, then it will be stored in the financial format as 12,345,678 In the financial format a number's fractional part should contain exactly two digits. So, if the initial number (the number that is converted into the financial format) contains less than two digits in the fractional part (or contains no digits at all), it is complemented with zeros until its length equals 2. If the fractional part contains more than two digits, the extra digits are simply discarded (they are not rounded: see sample tests). When a number is stored in the financial format, the minus sign is not written. Instead, if the initial number had the minus sign, the result is written in round brackets. Please keep in mind that the bank of Far Far Away operates using an exotic foreign currency \u2014 snakes ($), that's why right before the number in the financial format we should put the sign \" $ \". If the number should be written in the brackets, then the snake sign should also be inside the brackets. For example, by the above given rules number 2012 will be stored in the financial format as \" $2,012.00 \" and number -12345678.9 will be stored as \" ($12,345,678.90) \". The merchants of Far Far Away visited you again and expressed much hope that you supply them with the program that can convert arbitrary numbers to the financial format. Can you help them?\n\nInput\nThe input contains a number that needs to be converted into financial format. The number's notation length does not exceed 100 characters, including (possible) signs \" - \" (minus) and \" . \" (decimal point). The number's notation is correct, that is: The number's notation only contains characters from the set {\" 0 \" \u2013 \" 9 \", \" - \", \" . \"}. The decimal point (if it is present) is unique and is preceded and followed by a non-zero quantity on decimal digits A number cannot start with digit 0 , except for a case when its whole integer part equals zero (in this case the integer parts is guaranteed to be a single zero: \" 0 \"). The minus sign (if it is present) is unique and stands in the very beginning of the number's notation If a number is identically equal to 0 (that is, if it is written as, for example, \" 0 \" or \" 0.000 \"), than it is not preceded by the minus sign. The input data contains no spaces. The number's notation contains at least one decimal digit.\n\nOutput\nPrint the number given in the input in the financial format by the rules described in the problem statement. Examples\n\nInput\n2012\n\nOutput\n$2,012.00\n\nInput\n0.000\n\nOutput\n$0.00\n\nInput\n-0.00987654321\n\nOutput\n($0.00)\n\nInput\n-12345678.9\n\nOutput\n($12,345,678.90)\n\nNote\nPay attention to the second and third sample tests. They show that the sign of a number in the financial format (and consequently, the presence or absence of brackets) is determined solely by the sign of the initial number. It does not depend on the sign of the number you got after translating the number to the financial format.","722":"A. Help Vasilisa the Wise 2 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasilisa the Wise from the Kingdom of Far Far Away got a magic box with a secret as a present from her friend Hellawisa the Wise from the Kingdom of A Little Closer. However, Vasilisa the Wise does not know what the box's secret is, since she cannot open it again. She hopes that you will help her one more time with that. The box's lock looks as follows: it contains 4 identical deepenings for gems as a 2 \u00d7 2 square, and some integer numbers are written at the lock's edge near the deepenings. The example of a lock is given on the picture below. The box is accompanied with 9 gems. Their shapes match the deepenings' shapes and each gem contains one number from 1 to 9 (each number is written on exactly one gem). The box will only open after it is decorated with gems correctly: that is, each deepening in the lock should be filled with exactly one gem. Also, the sums of numbers in the square's rows, columns and two diagonals of the square should match the numbers written at the lock's edge. For example, the above lock will open if we fill the deepenings with gems with numbers as is shown on the picture below. Now Vasilisa the Wise wants to define, given the numbers on the box's lock, which gems she should put in the deepenings to open the box. Help Vasilisa to solve this challenging task.\n\nInput\nThe input contains numbers written on the edges of the lock of the box. The first line contains space-separated integers r 1 and r 2 that define the required sums of numbers in the rows of the square. The second line contains space-separated integers c 1 and c 2 that define the required sums of numbers in the columns of the square. The third line contains space-separated integers d 1 and d 2 that define the required sums of numbers on the main and on the side diagonals of the square ( 1 \u2264 r 1 , r 2 , c 1 , c 2 , d 1 , d 2 \u2264 20 ). Correspondence between the above 6 variables and places where they are written is shown on the picture below. For more clarifications please look at the second sample test that demonstrates the example given in the problem statement.\n\nOutput\nPrint the scheme of decorating the box with stones: two lines containing two space-separated integers from 1 to 9 . The numbers should be pairwise different. If there is no solution for the given lock, then print the single number \" -1 \" (without the quotes). If there are several solutions, output any. Examples\n\nInput\n3 7 4 6 5 5\n\nOutput\n1 2 3 4\n\nInput\n11 10 13 8 5 16\n\nOutput\n4 7 9 1\n\nInput\n1 2 3 4 5 6\n\nOutput\n-1\n\nInput\n10 10 10 10 10 10\n\nOutput\n-1\n\nNote\nPay attention to the last test from the statement: it is impossible to open the box because for that Vasilisa the Wise would need 4 identical gems containing number \"5\". However, Vasilisa only has one gem with each number from 1 to 9 .","724":"A. Arrival of the General time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A Ministry for Defense sent a general to inspect the Super Secret Military Squad under the command of the Colonel SuperDuper. Having learned the news, the colonel ordered to all n squad soldiers to line up on the parade ground. By the military charter the soldiers should stand in the order of non-increasing of their height. But as there's virtually no time to do that, the soldiers lined up in the arbitrary order. However, the general is rather short-sighted and he thinks that the soldiers lined up correctly if the first soldier in the line has the maximum height and the last soldier has the minimum height. Please note that the way other solders are positioned does not matter, including the case when there are several soldiers whose height is maximum or minimum. Only the heights of the first and the last soldier are important. For example, the general considers the sequence of heights (4, 3, 4, 2, 1, 1) correct and the sequence (4, 3, 1, 2, 2) wrong. Within one second the colonel can swap any two neighboring soldiers. Help him count the minimum time needed to form a line-up which the general will consider correct.\n\nInput\nThe first input line contains the only integer n ( 2 \u2264 n \u2264 100 ) which represents the number of soldiers in the line. The second line contains integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 100 ) the values of the soldiers' heights in the order of soldiers' heights' increasing in the order from the beginning of the line to its end. The numbers are space-separated. Numbers a 1 , a 2 , ..., a n are not necessarily different.\n\nOutput\nPrint the only integer \u2014 the minimum number of seconds the colonel will need to form a line-up the general will like. Examples\n\nInput\n4 33 44 11 22\n\nOutput\n2\n\nInput\n7 10 10 58 31 63 40 76\n\nOutput\n10\n\nNote\nIn the first sample the colonel will need to swap the first and second soldier and then the third and fourth soldier. That will take 2 seconds. The resulting position of the soldiers is (44, 33, 22, 11) . In the second sample the colonel may swap the soldiers in the following sequence: (10, 10, 58, 31, 63, 40, 76) (10, 58, 10, 31, 63, 40, 76) (10, 58, 10, 31, 63, 76, 40) (10, 58, 10, 31, 76, 63, 40) (10, 58, 31, 10, 76, 63, 40) (10, 58, 31, 76, 10, 63, 40) (10, 58, 31, 76, 63, 10, 40) (10, 58, 76, 31, 63, 10, 40) (10, 76, 58, 31, 63, 10, 40) (76, 10, 58, 31, 63, 10, 40) (76, 10, 58, 31, 63, 40, 10)","730":"A. Lucky Conversion time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Petya has two strings a and b of the same length n . The strings consist only of lucky digits. Petya can perform operations of two types: replace any one digit from string a by its opposite (i.e., replace 4 by 7 and 7 by 4 ); swap any pair of digits in string a . Petya is interested in the minimum number of operations that are needed to make string a equal to string b . Help him with the task.\n\nInput\nThe first and the second line contains strings a and b , correspondingly. Strings a and b have equal lengths and contain only lucky digits. The strings are not empty, their length does not exceed 10 5 .\n\nOutput\nPrint on the single line the single number \u2014 the minimum number of operations needed to convert string a into string b . Examples\n\nInput\n47 74\n\nOutput\n1\n\nInput\n774 744\n\nOutput\n1\n\nInput\n777 444\n\nOutput\n3\n\nNote\nIn the first sample it is enough simply to swap the first and the second digit. In the second sample we should replace the second digit with its opposite. In the third number we should replace all three digits with their opposites.","732":"A. Insomnia cure time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output \u00abOne dragon. Two dragon. Three dragon\u00bb, \u2014 the princess was counting. She had trouble falling asleep, and she got bored of counting lambs when she was nine. However, just counting dragons was boring as well, so she entertained herself at best she could. Tonight she imagined that all dragons were here to steal her, and she was fighting them off. Every k -th dragon got punched in the face with a frying pan. Every l -th dragon got his tail shut into the balcony door. Every m -th dragon got his paws trampled with sharp heels. Finally, she threatened every n -th dragon to call her mom, and he withdrew in panic. How many imaginary dragons suffered moral or physical damage tonight, if the princess counted a total of d dragons?\n\nInput\nInput data contains integer numbers k , l , m , n and d , each number in a separate line ( 1 \u2264 k , l , m , n \u2264 10 , 1 \u2264 d \u2264 10 5 ).\n\nOutput\nOutput the number of damaged dragons. Examples\n\nInput\n1 2 3 4 12\n\nOutput\n12\n\nInput\n2 3 4 5 24\n\nOutput\n17\n\nNote\nIn the first case every first dragon got punched with a frying pan. Some of the dragons suffered from other reasons as well, but the pan alone would be enough. In the second case dragons 1, 7, 11, 13, 17, 19 and 23 escaped unharmed.","751":"A. Business trip time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output What joy! Petya's parents went on a business trip for the whole year and the playful kid is left all by himself. Petya got absolutely happy. He jumped on the bed and threw pillows all day long, until... Today Petya opened the cupboard and found a scary note there. His parents had left him with duties: he should water their favourite flower all year, each day, in the morning, in the afternoon and in the evening. \"Wait a second!\" \u2014 thought Petya. He know for a fact that if he fulfills the parents' task in the i -th ( 1 \u2264 i \u2264 12 ) month of the year, then the flower will grow by a i centimeters, and if he doesn't water the flower in the i -th month, then the flower won't grow this month. Petya also knows that try as he might, his parents won't believe that he has been watering the flower if it grows strictly less than by k centimeters. Help Petya choose the minimum number of months when he will water the flower, given that the flower should grow no less than by k centimeters.\n\nInput\nThe first line contains exactly one integer k ( 0 \u2264 k \u2264 100 ). The next line contains twelve space-separated integers: the i -th ( 1 \u2264 i \u2264 12 ) number in the line represents a i ( 0 \u2264 a i \u2264 100 ).\n\nOutput\nPrint the only integer \u2014 the minimum number of months when Petya has to water the flower so that the flower grows no less than by k centimeters. If the flower can't grow by k centimeters in a year, print -1 . Examples\n\nInput\n5 1 1 1 1 2 2 3 2 2 1 1 1\n\nOutput\n2\n\nInput\n0 0 0 0 0 0 0 0 1 1 2 3 0\n\nOutput\n0\n\nInput\n11 1 1 4 1 1 5 1 1 4 1 1 1\n\nOutput\n3\n\nNote\nLet's consider the first sample test. There it is enough to water the flower during the seventh and the ninth month. Then the flower grows by exactly five centimeters. In the second sample Petya's parents will believe him even if the flower doesn't grow at all ( k = 0 ). So, it is possible for Petya not to water the flower at all.","757":"A. Soft Drinking time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output This winter is so cold in Nvodsk! A group of n friends decided to buy k bottles of a soft drink called \"Take-It-Light\" to warm up a bit. Each bottle has l milliliters of the drink. Also they bought c limes and cut each of them into d slices. After that they found p grams of salt. To make a toast, each friend needs nl milliliters of the drink, a slice of lime and np grams of salt. The friends want to make as many toasts as they can, provided they all drink the same amount. How many toasts can each friend make?\n\nInput\nThe first and only line contains positive integers n , k , l , c , d , p , nl , np , not exceeding 1000 and no less than 1 . The numbers are separated by exactly one space.\n\nOutput\nPrint a single integer \u2014 the number of toasts each friend can make. Examples\n\nInput\n3 4 5 10 8 100 3 1\n\nOutput\n2\n\nInput\n5 100 10 1 19 90 4 3\n\nOutput\n3\n\nInput\n10 1000 1000 25 23 1 50 1\n\nOutput\n0\n\nNote\nA comment to the first sample: Overall the friends have 4 * 5 = 20 milliliters of the drink, it is enough to make 20 \/ 3 = 6 toasts. The limes are enough for 10 * 8 = 80 toasts and the salt is enough for 100 \/ 1 = 100 toasts. However, there are 3 friends in the group, so the answer is min (6, 80, 100) \/ 3 = 2 .","770":"A. Marks time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya, or Mr. Vasily Petrov is a dean of a department in a local university. After the winter exams he got his hands on a group's gradebook. Overall the group has n students. They received marks for m subjects. Each student got a mark from 1 to 9 (inclusive) for each subject. Let's consider a student the best at some subject , if there is no student who got a higher mark for this subject. Let's consider a student successful , if there exists a subject he is the best at . Your task is to find the number of successful students in the group.\n\nInput\nThe first input line contains two integers n and m ( 1 \u2264 n , m \u2264 100 ) \u2014 the number of students and the number of subjects, correspondingly. Next n lines each containing m characters describe the gradebook. Each character in the gradebook is a number from 1 to 9 .\n\nNote\nthat the marks in a rows are not sepatated by spaces.\n\nOutput\nPrint the single number \u2014 the number of successful students in the given group. Examples\n\nInput\n3 3 223 232 112\n\nOutput\n2\n\nInput\n3 5 91728 11828 11111\n\nOutput\n3\n\nNote\nIn the first sample test the student number 1 is the best at subjects 1 and 3 , student 2 is the best at subjects 1 and 2 , but student 3 isn't the best at any subject. In the second sample test each student is the best at at least one subject.","772":"A. Hometask time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Sergey attends lessons of the N -ish language. Each lesson he receives a hometask. This time the task is to translate some sentence to the N -ish language. Sentences of the N -ish language can be represented as strings consisting of lowercase Latin letters without spaces or punctuation marks. Sergey totally forgot about the task until half an hour before the next lesson and hastily scribbled something down. But then he recollected that in the last lesson he learned the grammar of N -ish. The spelling rules state that N -ish contains some \"forbidden\" pairs of letters: such letters can never occur in a sentence next to each other. Also, the order of the letters doesn't matter (for example, if the pair of letters \" ab \" is forbidden, then any occurrences of substrings \" ab \" and \" ba \" are also forbidden). Also, each pair has different letters and each letter occurs in no more than one forbidden pair. Now Sergey wants to correct his sentence so that it doesn't contain any \"forbidden\" pairs of letters that stand next to each other. However, he is running out of time, so he decided to simply cross out some letters from the sentence. What smallest number of letters will he have to cross out? When a letter is crossed out, it is \"removed\" so that the letters to its left and right (if they existed), become neighboring. For example, if we cross out the first letter from the string \" aba \", we get the string \" ba \", and if we cross out the second letter, we get \" aa \".\n\nInput\nThe first line contains a non-empty string s , consisting of lowercase Latin letters \u2014 that's the initial sentence in N -ish, written by Sergey. The length of string s doesn't exceed 10 5 . The next line contains integer k ( 0 \u2264 k \u2264 13 ) \u2014 the number of forbidden pairs of letters. Next k lines contain descriptions of forbidden pairs of letters. Each line contains exactly two different lowercase Latin letters without separators that represent the forbidden pairs. It is guaranteed that each letter is included in no more than one pair.\n\nOutput\nPrint the single number \u2014 the smallest number of letters that need to be removed to get a string without any forbidden pairs of neighboring letters. Please note that the answer always exists as it is always possible to remove all letters. Examples\n\nInput\nababa 1 ab\n\nOutput\n2\n\nInput\ncodeforces 2 do cs\n\nOutput\n1\n\nNote\nIn the first sample you should remove two letters b . In the second sample you should remove the second or the third letter. The second restriction doesn't influence the solution.","774":"A. I_love_%username% time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya adores sport programming. He can't write programs but he loves to watch the contests' progress. Vasya even has a favorite coder and Vasya pays special attention to him. One day Vasya decided to collect the results of all contests where his favorite coder participated and track the progress of his coolness. For each contest where this coder participated, he wrote out a single non-negative number \u2014 the number of points his favorite coder earned in the contest. Vasya wrote out the points for the contest in the order, in which the contests run (naturally, no two contests ran simultaneously). Vasya considers a coder's performance in a contest amazing in two situations: he can break either his best or his worst performance record. First, it is amazing if during the contest the coder earns strictly more points that he earned on each past contest. Second, it is amazing if during the contest the coder earns strictly less points that he earned on each past contest. A coder's first contest isn't considered amazing. Now he wants to count the number of amazing performances the coder had throughout his whole history of participating in contests. But the list of earned points turned out long and Vasya can't code... That's why he asks you to help him.\n\nInput\nThe first line contains the single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of contests where the coder participated. The next line contains n space-separated non-negative integer numbers \u2014 they are the points which the coder has earned. The points are given in the chronological order. All points do not exceed 10000 .\n\nOutput\nPrint the single number \u2014 the number of amazing performances the coder has had during his whole history of participating in the contests. Examples\n\nInput\n5 100 50 200 150 200\n\nOutput\n2\n\nInput\n10 4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n\nOutput\n4\n\nNote\nIn the first sample the performances number 2 and 3 are amazing. In the second sample the performances number 2, 4, 9 and 10 are amazing.","778":"A. Game Outcome time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Sherlock Holmes and Dr. Watson played some game on a checkered board n \u00d7 n in size. During the game they put numbers on the board's squares by some tricky rules we don't know. However, the game is now over and each square of the board contains exactly one number. To understand who has won, they need to count the number of winning squares. To determine if the particular square is winning you should do the following. Calculate the sum of all numbers on the squares that share this column (including the given square) and separately calculate the sum of all numbers on the squares that share this row (including the given square). A square is considered winning if the sum of the column numbers is strictly greater than the sum of the row numbers. For instance, lets game was ended like is shown in the picture. Then the purple cell is winning, because the sum of its column numbers equals 8 + 3 + 6 + 7 = 24 , sum of its row numbers equals 9 + 5 + 3 + 2 = 19 , and 24 > 19 .\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 30 ). Each of the following n lines contain n space-separated integers. The j -th number on the i -th line represents the number on the square that belongs to the j -th column and the i -th row on the board. All number on the board are integers from 1 to 100 .\n\nOutput\nPrint the single number \u2014 the number of the winning squares. Examples\n\nInput\n1 1\n\nOutput\n0\n\nInput\n2 1 2 3 4\n\nOutput\n2\n\nInput\n4 5 7 8 4 9 5 3 2 1 6 6 4 9 5 7 3\n\nOutput\n6\n\nNote\nIn the first example two upper squares are winning. In the third example three left squares in the both middle rows are winning: 5 7 8 4 9 5 3 2 1 6 6 4 9 5 7 3","780":"A. Next Round time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output \"Contestant who earns a score equal to or greater than the k -th place finisher's score will advance to the next round, as long as the contestant earns a positive score...\" \u2014 an excerpt from contest rules. A total of n participants took part in the contest ( n \u2265 k ), and you already know their scores. Calculate how many participants will advance to the next round.\n\nInput\nThe first line of the input contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 50 ) separated by a single space. The second line contains n space-separated integers a 1 , a 2 , ..., a n ( 0 \u2264 a i \u2264 100 ), where a i is the score earned by the participant who got the i -th place. The given sequence is non-increasing (that is, for all i from 1 to n - 1 the following condition is fulfilled: a i \u2265 a i + 1 ).\n\nOutput\nOutput the number of participants who advance to the next round. Examples\n\nInput\n8 5 10 9 8 7 7 7 5 5\n\nOutput\n6\n\nInput\n4 2 0 0 0 0\n\nOutput\n0\n\nNote\nIn the first example the participant on the 5th place earned 7 points. As the participant on the 6th place also earned 7 points, there are 6 advancers. In the second example nobody got a positive score.","783":"B. Taxi time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output After the lessons n groups of schoolchildren went outside and decided to visit Polycarpus to celebrate his birthday. We know that the i -th group consists of s i friends ( 1 \u2264 s i \u2264 4 ), and they want to go to Polycarpus together. They decided to get there by taxi. Each car can carry at most four passengers. What minimum number of cars will the children need if all members of each group should ride in the same taxi (but one taxi can take more than one group)?\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of groups of schoolchildren. The second line contains a sequence of integers s 1 , s 2 , ..., s n ( 1 \u2264 s i \u2264 4 ). The integers are separated by a space, s i is the number of children in the i -th group.\n\nOutput\nPrint the single number \u2014 the minimum number of taxis necessary to drive all children to Polycarpus. Examples\n\nInput\n5 1 2 4 3 3\n\nOutput\n4\n\nInput\n8 2 3 4 4 2 1 3 1\n\nOutput\n5\n\nNote\nIn the first test we can sort the children into four cars like this: the third group (consisting of four children), the fourth group (consisting of three children), the fifth group (consisting of three children), the first and the second group (consisting of one and two children, correspondingly). There are other ways to sort the groups into four cars.","788":"C. String Manipulation 1.0 time limit per test 3 seconds memory limit per test 256 megabytes input standard input output standard output One popular website developed an unusual username editing procedure. One can change the username only by deleting some characters from it: to change the current name s , a user can pick number p and character c and delete the p -th occurrence of character c from the name. After the user changed his name, he can't undo the change. For example, one can change name \" arca \" by removing the second occurrence of character \" a \" to get \" arc \". Polycarpus learned that some user initially registered under nickname t , where t is a concatenation of k copies of string s . Also, Polycarpus knows the sequence of this user's name changes. Help Polycarpus figure out the user's final name.\n\nInput\nThe first line contains an integer k ( 1 \u2264 k \u2264 2000 ). The second line contains a non-empty string s , consisting of lowercase Latin letters, at most 100 characters long. The third line contains an integer n ( 0 \u2264 n \u2264 20000 ) \u2014 the number of username changes. Each of the next n lines contains the actual changes, one per line. The changes are written as \" p i c i \" (without the quotes), where p i ( 1 \u2264 p i \u2264 200000 ) is the number of occurrences of letter c i , c i is a lowercase Latin letter. It is guaranteed that the operations are correct, that is, the letter to be deleted always exists, and after all operations not all letters are deleted from the name. The letters' occurrences are numbered starting from 1.\n\nOutput\nPrint a single string \u2014 the user's final name after all changes are applied to it. Examples\n\nInput\n2 bac 3 2 a 1 b 2 c\n\nOutput\nacb\n\nInput\n1 abacaba 4 1 a 1 a 1 c 2 b\n\nOutput\nbaa\n\nNote\nLet's consider the first sample. Initially we have name \" bacbac \"; the first operation transforms it into \" bacbc \", the second one \u2014 to \" acbc \", and finally, the third one transforms it into \" acb \".","790":"A. Twins time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Imagine that you have a twin brother or sister. Having another person that looks exactly like you seems very unusual. It's hard to say if having something of an alter ego is good or bad. And if you do have a twin, then you very well know what it's like. Now let's imagine a typical morning in your family. You haven't woken up yet, and Mom is already going to work. She has been so hasty that she has nearly forgotten to leave the two of her darling children some money to buy lunches in the school cafeteria. She fished in the purse and found some number of coins, or to be exact, n coins of arbitrary values a 1 , a 2 , ..., a n . But as Mom was running out of time, she didn't split the coins for you two. So she scribbled a note asking you to split the money equally. As you woke up, you found Mom's coins and read her note. \"But why split the money equally?\" \u2014 you thought. After all, your twin is sleeping and he won't know anything. So you decided to act like that: pick for yourself some subset of coins so that the sum of values of your coins is strictly larger than the sum of values of the remaining coins that your twin will have. However, you correctly thought that if you take too many coins, the twin will suspect the deception. So, you've decided to stick to the following strategy to avoid suspicions: you take the minimum number of coins , whose sum of values is strictly more than the sum of values of the remaining coins. On this basis, determine what minimum number of coins you need to take to divide them in the described manner.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of coins. The second line contains a sequence of n integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 100 ) \u2014 the coins' values. All numbers are separated with spaces.\n\nOutput\nIn the single line print the single number \u2014 the minimum needed number of coins. Examples\n\nInput\n2 3 3\n\nOutput\n2\n\nInput\n3 2 1 2\n\nOutput\n2\n\nNote\nIn the first sample you will have to take 2 coins (you and your twin have sums equal to 6, 0 correspondingly). If you take 1 coin, you get sums 3, 3 . If you take 0 coins, you get sums 0, 6 . Those variants do not satisfy you as your sum should be strictly more that your twins' sum. In the second sample one coin isn't enough for us, too. You can pick coins with values 1, 2 or 2, 2 . In any case, the minimum number of coins equals 2 .","796":"D. Distance in Tree time limit per test 3 seconds memory limit per test 512 megabytes input standard input output standard output A tree is a connected graph that doesn't contain any cycles. The distance between two vertices of a tree is the length (in edges) of the shortest path between these vertices. You are given a tree with n vertices and a positive number k . Find the number of distinct pairs of the vertices which have a distance of exactly k between them.\n\nNote\nthat pairs ( v , u ) and ( u , v ) are considered to be the same pair.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 n \u2264 50000 , 1 \u2264 k \u2264 500 ) \u2014 the number of vertices and the required distance between the vertices. Next n - 1 lines describe the edges as \" a i b i \" (without the quotes) ( 1 \u2264 a i , b i \u2264 n , a i \u2260 b i ), where a i and b i are the vertices connected by the i -th edge. All given edges are different.\n\nOutput\nPrint a single integer \u2014 the number of distinct pairs of the tree's vertices which have a distance of exactly k between them. Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin , cout streams or the %I64d specifier. Examples\n\nInput\n5 2 1 2 2 3 3 4 2 5\n\nOutput\n4\n\nInput\n5 3 1 2 2 3 3 4 4 5\n\nOutput\n2\n\nNote\nIn the first sample the pairs of vertexes at distance 2 from each other are (1, 3), (1, 5), (3, 5) and (2, 4).","827":"A. Supercentral Point time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Vasya painted a Cartesian coordinate system on a piece of paper and marked some set of points ( x 1 , y 1 ), ( x 2 , y 2 ), ..., ( x n , y n ) . Let's define neighbors for some fixed point from the given set ( x , y ) : point ( x ', y ') is ( x , y ) 's right neighbor, if x ' > x and y ' = y point ( x ', y ') is ( x , y ) 's left neighbor, if x ' < x and y ' = y point ( x ', y ') is ( x , y ) 's lower neighbor, if x ' = x and y ' < y point ( x ', y ') is ( x , y ) 's upper neighbor, if x ' = x and y ' > y We'll consider point ( x , y ) from the given set supercentral, if it has at least one upper, at least one lower, at least one left and at least one right neighbor among this set's points. Vasya marked quite many points on the paper. Analyzing the picture manually is rather a challenge, so Vasya asked you to help him. Your task is to find the number of supercentral points in the given set.\n\nInput\nThe first input line contains the only integer n ( 1 \u2264 n \u2264 200 ) \u2014 the number of points in the given set. Next n lines contain the coordinates of the points written as \" x y \" (without the quotes) ( | x |, | y | \u2264 1000 ), all coordinates are integers. The numbers in the line are separated by exactly one space. It is guaranteed that all points are different.\n\nOutput\nPrint the only number \u2014 the number of supercentral points of the given set. Examples\n\nInput\n8 1 1 4 2 3 1 1 2 0 2 0 1 1 0 1 3\n\nOutput\n2\n\nInput\n5 0 0 0 1 1 0 0 -1 -1 0\n\nOutput\n1\n\nNote\nIn the first sample the supercentral points are only points (1, 1) and (1, 2) . In the second sample there is one supercental point \u2014 point (0, 0) .","832":"A. Rank List time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Another programming contest is over. You got hold of the contest's final results table. The table has the following data. For each team we are shown two numbers: the number of problems and the total penalty time. However, for no team we are shown its final place. You know the rules of comparing the results of two given teams very well. Let's say that team a solved p a problems with total penalty time t a and team b solved p b problems with total penalty time t b . Team a gets a higher place than team b in the end, if it either solved more problems on the contest, or solved the same number of problems but in less total time. In other words, team a gets a higher place than team b in the final results' table if either p a > p b , or p a = p b and t a < t b . It is considered that the teams that solve the same number of problems with the same penalty time share all corresponding places. More formally, let's say there is a group of x teams that solved the same number of problems with the same penalty time. Let's also say that y teams performed better than the teams from this group. In this case all teams from the group share places y + 1 , y + 2 , ... , y + x . The teams that performed worse than the teams from this group, get their places in the results table starting from the y + x + 1 -th place. Your task is to count what number of teams from the given list shared the k -th place.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 k \u2264 n \u2264 50 ). Then n lines contain the description of the teams: the i -th line contains two integers p i and t i ( 1 \u2264 p i , t i \u2264 50 ) \u2014 the number of solved problems and the total penalty time of the i -th team, correspondingly. All numbers in the lines are separated by spaces.\n\nOutput\nIn the only line print the sought number of teams that got the k -th place in the final results' table. Examples\n\nInput\n7 2 4 10 4 10 4 10 3 20 2 1 2 1 1 10\n\nOutput\n3\n\nInput\n5 4 3 1 3 1 5 3 3 1 3 1\n\nOutput\n4\n\nNote\nThe final results' table for the first sample is: 1-3 places \u2014 4 solved problems, the penalty time equals 10 4 place \u2014 3 solved problems, the penalty time equals 20 5-6 places \u2014 2 solved problems, the penalty time equals 1 7 place \u2014 1 solved problem, the penalty time equals 10 The table shows that the second place is shared by the teams that solved 4 problems with penalty time 10. There are 3 such teams. The final table for the second sample is: 1 place \u2014 5 solved problems, the penalty time equals 3 2-5 places \u2014 3 solved problems, the penalty time equals 1 The table shows that the fourth place is shared by the teams that solved 3 problems with penalty time 1. There are 4 such teams.","834":"A. Wizards and Demonstration time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Some country is populated by wizards. They want to organize a demonstration. There are n people living in the city, x of them are the wizards who will surely go to the demonstration. Other city people ( n - x people) do not support the wizards and aren't going to go to the demonstration. We know that the city administration will react only to the demonstration involving at least y percent of the city people. Having considered the matter, the wizards decided to create clone puppets which can substitute the city people on the demonstration. So all in all, the demonstration will involve only the wizards and their puppets. The city administration cannot tell the difference between a puppet and a person, so, as they calculate the percentage, the administration will consider the city to be consisting of only n people and not containing any clone puppets. Help the wizards and find the minimum number of clones to create to that the demonstration had no less than y percent of the city people.\n\nInput\nThe first line contains three space-separated integers, n , x , y ( 1 \u2264 n , x , y \u2264 10 4 , x \u2264 n ) \u2014 the number of citizens in the city, the number of wizards and the percentage the administration needs, correspondingly. Please note that y can exceed 100 percent, that is, the administration wants to see on a demonstration more people that actually live in the city ( > n ).\n\nOutput\nPrint a single integer \u2014 the answer to the problem, the minimum number of clones to create, so that the demonstration involved no less than y percent of n (the real total city population). Examples\n\nInput\n10 1 14\n\nOutput\n1\n\nInput\n20 10 50\n\nOutput\n0\n\nInput\n1000 352 146\n\nOutput\n1108\n\nNote\nIn the first sample it is necessary that at least 14% of 10 people came to the demonstration. As the number of people should be integer, then at least two people should come. There is only one wizard living in the city and he is going to come. That isn't enough, so he needs to create one clone. In the second sample 10 people should come to the demonstration. The city has 10 wizards. They will all come to the demonstration, so nobody has to create any clones.","841":"A. Chores time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya and Vasya are brothers. Today is a special day for them as their parents left them home alone and commissioned them to do n chores. Each chore is characterized by a single parameter \u2014 its complexity. The complexity of the i -th chore equals h i . As Petya is older, he wants to take the chores with complexity larger than some value x ( h i > x ) to leave to Vasya the chores with complexity less than or equal to x ( h i \u2264 x ). The brothers have already decided that Petya will do exactly a chores and Vasya will do exactly b chores ( a + b = n ). In how many ways can they choose an integer x so that Petya got exactly a chores and Vasya got exactly b chores?\n\nInput\nThe first input line contains three integers n , a and b ( 2 \u2264 n \u2264 2000 ; a , b \u2265 1 ; a + b = n ) \u2014 the total number of chores, the number of Petya's chores and the number of Vasya's chores. The next line contains a sequence of integers h 1 , h 2 , ..., h n ( 1 \u2264 h i \u2264 10 9 ), h i is the complexity of the i -th chore. The numbers in the given sequence are not necessarily different. All numbers on the lines are separated by single spaces.\n\nOutput\nPrint the required number of ways to choose an integer value of x . If there are no such ways, print 0 . Examples\n\nInput\n5 2 3 6 2 3 100 1\n\nOutput\n3\n\nInput\n7 3 4 1 1 9 1 1 1 1\n\nOutput\n0\n\nNote\nIn the first sample the possible values of x are 3, 4 or 5. In the second sample it is impossible to find such x , that Petya got 3 chores and Vasya got 4.","843":"B. Replacing Digits time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given an integer a that consists of n digits. You are also given a sequence of digits s of length m . The digit in position j ( 1 \u2264 j \u2264 m ) of sequence s means that you can choose an arbitrary position i ( 1 \u2264 i \u2264 n ) in a and replace the digit in the chosen position i with s j . Each element in the sequence s can participate in no more than one replacing operation. Your task is to perform such sequence of replacements, that the given number a gets maximum value. You are allowed to use not all elements from s .\n\nInput\nThe first line contains positive integer a . Its length n is positive and doesn't exceed 10 5 . The second line contains sequence of digits s . Its length m is positive and doesn't exceed 10 5 . The digits in the sequence s are written consecutively without any separators. The given number a doesn't contain leading zeroes.\n\nOutput\nPrint the maximum value that can be obtained from a after a series of replacements. You are allowed to use not all elements from s . The printed number shouldn't contain any leading zeroes. Examples\n\nInput\n1024 010\n\nOutput\n1124\n\nInput\n987 1234567\n\nOutput\n987","847":"A. Noldbach problem time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Nick is interested in prime numbers. Once he read about Goldbach problem . It states that every even integer greater than 2 can be expressed as the sum of two primes. That got Nick's attention and he decided to invent a problem of his own and call it Noldbach problem . Since Nick is interested only in prime numbers, Noldbach problem states that at least k prime numbers from 2 to n inclusively can be expressed as the sum of three integer numbers: two neighboring prime numbers and 1 . For example, 19 = 7 + 11 + 1 , or 13 = 5 + 7 + 1 . Two prime numbers are called neighboring if there are no other prime numbers between them. You are to help Nick, and find out if he is right or wrong.\n\nInput\nThe first line of the input contains two integers n ( 2 \u2264 n \u2264 1000 ) and k ( 0 \u2264 k \u2264 1000 ).\n\nOutput\nOutput YES if at least k prime numbers from 2 to n inclusively can be expressed as it was described above. Otherwise output NO . Examples\n\nInput\n27 2\n\nOutput\nYES\n\nInput\n45 7\n\nOutput\nNO\n\nNote\nIn the first sample the answer is YES since at least two numbers can be expressed as it was described (for example, 13 and 19). In the second sample the answer is NO since it is impossible to express 7 prime numbers from 2 to 45 in the desired form.","849":"C. A Piece of Cake time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output How to make a cake you'll never eat. Ingredients. 2 carrots 0 calories 100 g chocolate spread 1 pack of flour 1 egg Method. Put calories into the mixing bowl. Take carrots from refrigerator. Chop carrots. Take chocolate spread from refrigerator. Put chocolate spread into the mixing bowl. Combine pack of flour into the mixing bowl. Fold chocolate spread into the mixing bowl. Add chocolate spread into the mixing bowl. Put pack of flour into the mixing bowl. Add egg into the mixing bowl. Fold pack of flour into the mixing bowl. Chop carrots until choped. Pour contents of the mixing bowl into the baking dish. Serves 1.\n\nInput\nThe only line of input contains a sequence of integers a 0 , a 1 , ... ( 1 \u2264 a 0 \u2264 100 , 0 \u2264 a i \u2264 1000 for i \u2265 1 ).\n\nOutput\nOutput a single integer. Examples\n\nInput\n4 1 2 3 4\n\nOutput\n30","850":"A. Mysterious numbers - 1 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains two integers a 1 , a 2 ( 0 \u2264 a i \u2264 10 9 ), separated by a single space.\n\nOutput\nOutput a single integer. Examples\n\nInput\n3 14\n\nOutput\n44\n\nInput\n27 12\n\nOutput\n48\n\nInput\n100 200\n\nOutput\n102","853":"B. Star time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 18257 ).\n\nOutput\nPrint a single integer output ( 1 \u2264 output \u2264 2\u00b710 9 ) . Examples\n\nInput\n2\n\nOutput\n13","857":"D. Broken checker time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output \"This problem is rubbish! There is not statement, and there are only 5 test cases. The problemsetter took liberties with this problem!\" \u2014 people complained in the comments to one round on Codeforces. And even more... No, wait, the checker for the problem was alright, that's a mercy.\n\nInput\nThe only line of the input contains an integer between 1 and 5, inclusive. All tests for this problem are different. The contents of the test case doesn't need to be equal to its index.\n\nOutput\nThe only line of the output contains an integer between 1 and 3, inclusive.\n\nExamples\nNote This problem has no samples, since there so few test cases.","859":"A. Phone Code time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Polycarpus has n friends in Tarasov city. Polycarpus knows phone numbers of all his friends: they are strings s 1 , s 2 , ..., s n . All these strings consist only of digits and have the same length. Once Polycarpus needed to figure out Tarasov city phone code. He assumed that the phone code of the city is the longest common prefix of all phone numbers of his friends. In other words, it is the longest string c which is a prefix (the beginning) of each s i for all i ( 1 \u2264 i \u2264 n ). Help Polycarpus determine the length of the city phone code.\n\nInput\nThe first line of the input contains an integer n ( 2 \u2264 n \u2264 3\u00b710 4 ) \u2014 the number of Polycarpus's friends. The following n lines contain strings s 1 , s 2 , ..., s n \u2014 the phone numbers of Polycarpus's friends. It is guaranteed that all strings consist only of digits and have the same length from 1 to 20 , inclusive. It is also guaranteed that all strings are different.\n\nOutput\nPrint the number of digits in the city phone code. Examples\n\nInput\n4 00209 00219 00999 00909\n\nOutput\n2\n\nInput\n2 1 2\n\nOutput\n0\n\nInput\n3 77012345678999999999 77012345678901234567 77012345678998765432\n\nOutput\n12\n\nNote\nA prefix of string t is a string that is obtained by deleting zero or more digits from the end of string t . For example, string \" 00209 \" has 6 prefixes: \"\" (an empty prefix), \" 0 \", \" 00 \", \" 002 \", \" 0020 \", \" 00209 \". In the first sample the city phone code is string \" 00 \". In the second sample the city phone code is an empty string. In the third sample the city phone code is string \" 770123456789 \".","863":"A. Problem About Equation time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A group of n merry programmers celebrate Robert Floyd's birthday. Polucarpus has got an honourable task of pouring Ber-Cola to everybody. Pouring the same amount of Ber-Cola to everybody is really important. In other words, the drink's volume in each of the n mugs must be the same. Polycarpus has already began the process and he partially emptied the Ber-Cola bottle. Now the first mug has a 1 milliliters of the drink, the second one has a 2 milliliters and so on. The bottle has b milliliters left and Polycarpus plans to pour them into the mugs so that the main equation was fulfilled. Write a program that would determine what volume of the drink Polycarpus needs to add into each mug to ensure that the following two conditions were fulfilled simultaneously: there were b milliliters poured in total. That is, the bottle need to be emptied; after the process is over, the volumes of the drink in the mugs should be equal.\n\nInput\nThe first line contains a pair of integers n , b ( 2 \u2264 n \u2264 100, 1 \u2264 b \u2264 100 ), where n is the total number of friends in the group and b is the current volume of drink in the bottle. The second line contains a sequence of integers a 1 , a 2 , ..., a n ( 0 \u2264 a i \u2264 100 ), where a i is the current volume of drink in the i -th mug.\n\nOutput\nPrint a single number \" -1 \" (without the quotes), if there is no solution. Otherwise, print n float numbers c 1 , c 2 , ..., c n , where c i is the volume of the drink to add in the i -th mug. Print the numbers with no less than 6 digits after the decimal point, print each c i on a single line. Polycarpus proved that if a solution exists then it is unique. Russian locale is installed by default on the testing computer. Make sure that your solution use the point to separate the integer part of a real number from the decimal, not a comma. Examples\n\nInput\n5 50 1 2 3 4 5\n\nOutput\n12.000000 11.000000 10.000000 9.000000 8.000000\n\nInput\n2 2 1 100\n\nOutput\n-1","865":"A1. Good Matrix Elements time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy studying an n \u00d7 n size matrix, where n is odd. The Smart Beaver considers the following matrix elements good: Elements of the main diagonal. Elements of the secondary diagonal. Elements of the \"middle\" row \u2014 the row which has exactly rows above it and the same number of rows below it. Elements of the \"middle\" column \u2014 the column that has exactly columns to the left of it and the same number of columns to the right of it. The figure shows a 5 \u00d7 5 matrix. The good elements are marked with green. Help the Smart Beaver count the sum of good elements of the given matrix.\n\nInput\nThe first line of input data contains a single odd integer n . Each of the next n lines contains n integers a ij (0 \u2264 a ij \u2264 100) separated by single spaces \u2014 the elements of the given matrix. The input limitations for getting 30 points are: 1 \u2264 n \u2264 5 The input limitations for getting 100 points are: 1 \u2264 n \u2264 101\n\nOutput\nPrint a single integer \u2014 the sum of good matrix elements. Examples\n\nInput\n3 1 2 3 4 5 6 7 8 9\n\nOutput\n45\n\nInput\n5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\nOutput\n17\n\nNote\nIn the first sample all matrix elements will be good. Good elements in the second sample are shown on the figure.","867":"C. Stripe time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Once Bob took a paper stripe of n squares (the height of the stripe is 1 square). In each square he wrote an integer number, possibly negative. He became interested in how many ways exist to cut this stripe into two pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece, and each piece contains positive integer amount of squares. Would you help Bob solve this problem?\n\nInput\nThe first input line contains integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 amount of squares in the stripe. The second line contains n space-separated numbers \u2014 they are the numbers written in the squares of the stripe. These numbers are integer and do not exceed 10000 in absolute value.\n\nOutput\nOutput the amount of ways to cut the stripe into two non-empty pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece. Don't forget that it's allowed to cut the stripe along the squares' borders only. Examples\n\nInput\n9 1 5 -6 7 9 -16 0 -2 2\n\nOutput\n3\n\nInput\n3 1 1 1\n\nOutput\n0\n\nInput\n2 0 0\n\nOutput\n1","871":"A. Triangle time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output At a geometry lesson Bob learnt that a triangle is called right-angled if it is nondegenerate and one of its angles is right. Bob decided to draw such a triangle immediately: on a sheet of paper he drew three points with integer coordinates, and joined them with segments of straight lines, then he showed the triangle to Peter. Peter said that Bob's triangle is not right-angled, but is almost right-angled: the triangle itself is not right-angled, but it is possible to move one of the points exactly by distance 1 so, that all the coordinates remain integer, and the triangle become right-angled. Bob asks you to help him and find out if Peter tricks him. By the given coordinates of the triangle you should find out if it is right-angled, almost right-angled, or neither of these.\n\nInput\nThe first input line contains 6 space-separated integers x 1 , y 1 , x 2 , y 2 , x 3 , y 3 \u2014 coordinates of the triangle's vertices. All the coordinates are integer and don't exceed 100 in absolute value. It's guaranteed that the triangle is nondegenerate, i.e. its total area is not zero.\n\nOutput\nIf the given triangle is right-angled, output RIGHT , if it is almost right-angled, output ALMOST , and if it is neither of these, output NEITHER . Examples\n\nInput\n0 0 2 0 0 1\n\nOutput\nRIGHT\n\nInput\n2 3 4 5 6 6\n\nOutput\nNEITHER\n\nInput\n-1 0 2 0 0 1\n\nOutput\nALMOST","877":"C. Letter time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Patrick has just finished writing a message to his sweetheart Stacey when he noticed that the message didn't look fancy. Patrick was nervous while writing the message, so some of the letters there were lowercase and some of them were uppercase. Patrick believes that a message is fancy if any uppercase letter stands to the left of any lowercase one. In other words, this rule describes the strings where first go zero or more uppercase letters, and then \u2014 zero or more lowercase letters. To make the message fancy, Patrick can erase some letter and add the same letter in the same place in the opposite case (that is, he can replace an uppercase letter with the lowercase one and vice versa). Patrick got interested in the following question: what minimum number of actions do we need to make a message fancy? Changing a letter's case in the message counts as one action. Patrick cannot perform any other actions.\n\nInput\nThe only line of the input contains a non-empty string consisting of uppercase and lowercase letters. The string's length does not exceed 10 5 .\n\nOutput\nPrint a single number \u2014 the least number of actions needed to make the message fancy . Examples\n\nInput\nPRuvetSTAaYA\n\nOutput\n5\n\nInput\nOYPROSTIYAOPECHATALSYAPRIVETSTASYA\n\nOutput\n0\n\nInput\nhelloworld\n\nOutput\n0","879":"A. Series of Crimes time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Berland capital is shaken with three bold crimes committed by the Pihsters, a notorious criminal gang. The Berland capital's map is represented by an n \u00d7 m rectangular table. Each cell of the table on the map represents some districts of the capital. The capital's main detective Polycarpus took a map and marked there the districts where the first three robberies had been committed as asterisks. Deduction tells Polycarpus that the fourth robbery will be committed in such district, that all four robbed districts will form the vertices of some rectangle, parallel to the sides of the map. Polycarpus is good at deduction but he's hopeless at math. So he asked you to find the district where the fourth robbery will be committed.\n\nInput\nThe first line contains two space-separated integers n and m ( 2 \u2264 n , m \u2264 100 ) \u2014 the number of rows and columns in the table, correspondingly. Each of the next n lines contains m characters \u2014 the description of the capital's map. Each character can either be a \" . \" (dot), or an \" * \" (asterisk). A character equals \" * \" if the corresponding district has been robbed. Otherwise, it equals \" . \". It is guaranteed that the map has exactly three characters \" * \" and we can always find the fourth district that meets the problem requirements.\n\nOutput\nPrint two integers \u2014 the number of the row and the number of the column of the city district that is the fourth one to be robbed. The rows are numbered starting from one from top to bottom and the columns are numbered starting from one from left to right. Examples\n\nInput\n3 2 .* .. **\n\nOutput\n1 1\n\nInput\n3 3 *.* *.. ...\n\nOutput\n2 3","908":"B. Vasya's Calendar time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya lives in a strange world. The year has n months and the i -th month has a i days. Vasya got a New Year present \u2014 the clock that shows not only the time, but also the date. The clock's face can display any number from 1 to d . It is guaranteed that a i \u2264 d for all i from 1 to n . The clock does not keep information about the current month, so when a new day comes, it simply increases the current day number by one. The clock cannot display number d + 1 , so after day number d it shows day 1 (the current day counter resets). The mechanism of the clock allows you to increase the day number by one manually. When you execute this operation, day d is also followed by day 1 . Vasya begins each day checking the day number on the clock. If the day number on the clock does not match the actual day number in the current month, then Vasya manually increases it by one. Vasya is persistent and repeats this operation until the day number on the clock matches the actual number of the current day in the current month. A year passed and Vasya wonders how many times he manually increased the day number by one, from the first day of the first month to the last day of the n -th month inclusive, considering that on the first day of the first month the clock display showed day 1 .\n\nInput\nThe first line contains the single number d \u2014 the maximum number of the day that Vasya's clock can show (1 \u2264 d \u2264 10 6 ) . The second line contains a single integer n \u2014 the number of months in the year (1 \u2264 n \u2264 2000) . The third line contains n space-separated integers: a i (1 \u2264 a i \u2264 d ) \u2014 the number of days in each month in the order in which they follow, starting from the first one.\n\nOutput\nPrint a single number \u2014 the number of times Vasya manually increased the day number by one throughout the last year. Examples\n\nInput\n4 2 2 2\n\nOutput\n2\n\nInput\n5 3 3 4 3\n\nOutput\n3\n\nInput\n31 12 31 28 31 30 31 30 31 31 30 31 30 31\n\nOutput\n7\n\nNote\nIn the first sample the situation is like this: Day 1. Month 1. The clock shows 1 . Vasya changes nothing. Day 2. Month 1. The clock shows 2 . Vasya changes nothing. Day 1. Month 2. The clock shows 3 . Vasya manually increases the day number by 1 . After that the clock shows 4 . Vasya increases the day number by 1 manually. After that the clock shows 1 . Day 2. Month 2. The clock shows 2 . Vasya changes nothing. In total, Vasya manually changed the day number by 1 exactly 2 times.","910":"A. Comparing Strings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Some dwarves that are finishing the StUDY (State University for Dwarven Youngsters) Bachelor courses, have been told \"no genome, no degree\". That means that all dwarves should write a thesis on genome. Dwarven genome is far from simple. It is represented by a string that consists of lowercase Latin letters. Dwarf Misha has already chosen the subject for his thesis: determining by two dwarven genomes, whether they belong to the same race. Two dwarves belong to the same race if we can swap two characters in the first dwarf's genome and get the second dwarf's genome as a result. Help Dwarf Misha and find out whether two gnomes belong to the same race or not.\n\nInput\nThe first line contains the first dwarf's genome: a non-empty string, consisting of lowercase Latin letters. The second line contains the second dwarf's genome: a non-empty string, consisting of lowercase Latin letters. The number of letters in each genome doesn't exceed 10 5 . It is guaranteed that the strings that correspond to the genomes are different. The given genomes may have different length.\n\nOutput\nPrint \"YES\", if the dwarves belong to the same race. Otherwise, print \"NO\". Examples\n\nInput\nab ba\n\nOutput\nYES\n\nInput\naa ab\n\nOutput\nNO\n\nNote\nFirst example: you can simply swap two letters in string \"ab\". So we get \"ba\". Second example: we can't change string \"aa\" into string \"ab\", because \"aa\" does not contain letter \"b\".","914":"A. Cut Ribbon time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarpus has a ribbon, its length is n . He wants to cut the ribbon in a way that fulfils the following two conditions: After the cutting each ribbon piece should have length a , b or c . After the cutting the number of ribbon pieces should be maximum. Help Polycarpus and find the number of ribbon pieces after the required cutting.\n\nInput\nThe first line contains four space-separated integers n , a , b and c (1 \u2264 n , a , b , c \u2264 4000) \u2014 the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a , b and c can coincide.\n\nOutput\nPrint a single number \u2014 the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists. Examples\n\nInput\n5 5 3 2\n\nOutput\n2\n\nInput\n7 5 5 2\n\nOutput\n2\n\nNote\nIn the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3. In the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2.","916":"A. Vasya and the Bus time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Vasya heard a story: \"In the city of High Bertown a bus number 62 left from the bus station. It had n grown-ups and m kids...\" The latter events happen to be of no importance to us. Vasya is an accountant and he loves counting money. So he wondered what maximum and minimum sum of money these passengers could have paid for the ride. The bus fare equals one berland ruble in High Bertown. However, not everything is that easy \u2014 no more than one child can ride for free with each grown-up passenger. That means that a grown-up passenger who rides with his k ( k > 0) children, pays overall k rubles: a ticket for himself and ( k - 1) tickets for his children. Also, a grown-up can ride without children, in this case he only pays one ruble. We know that in High Bertown children can't ride in a bus unaccompanied by grown-ups. Help Vasya count the minimum and the maximum sum in Berland rubles, that all passengers of this bus could have paid in total.\n\nInput\nThe input file consists of a single line containing two space-separated numbers n and m (0 \u2264 n , m \u2264 10 5 ) \u2014 the number of the grown-ups and the number of the children in the bus, correspondingly.\n\nOutput\nIf n grown-ups and m children could have ridden in the bus, then print on a single line two space-separated integers \u2014 the minimum and the maximum possible total bus fare, correspondingly. Otherwise, print \" Impossible \" (without the quotes). Examples\n\nInput\n1 2\n\nOutput\n2 2\n\nInput\n0 5\n\nOutput\nImpossible\n\nInput\n2 2\n\nOutput\n2 3\n\nNote\nIn the first sample a grown-up rides with two children and pays two rubles. In the second sample there are only children in the bus, so the situation is impossible. In the third sample there are two cases: Each of the two grown-ups rides with one children and pays one ruble for the tickets. In this case the passengers pay two rubles in total. One of the grown-ups ride with two children's and pays two rubles, the another one rides alone and pays one ruble for himself. So, they pay three rubles in total.","918":"C. Fools and Roads time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output They say that Berland has exactly two problems, fools and roads. Besides, Berland has n cities, populated by the fools and connected by the roads. All Berland roads are bidirectional. As there are many fools in Berland, between each pair of cities there is a path (or else the fools would get upset). Also, between each pair of cities there is no more than one simple path (or else the fools would get lost). But that is not the end of Berland's special features. In this country fools sometimes visit each other and thus spoil the roads. The fools aren't very smart, so they always use only the simple paths. A simple path is the path which goes through every Berland city not more than once. The Berland government knows the paths which the fools use. Help the government count for each road, how many distinct fools can go on it.\n\nNote\nhow the fools' paths are given in the input.\n\nInput\nThe first line contains a single integer n ( 2 \u2264 n \u2264 10 5 ) \u2014 the number of cities. Each of the next n - 1 lines contains two space-separated integers u i , v i ( 1 \u2264 u i , v i \u2264 n , u i \u2260 v i ), that means that there is a road connecting cities u i and v i . The next line contains integer k ( 0 \u2264 k \u2264 10 5 ) \u2014 the number of pairs of fools who visit each other. Next k lines contain two space-separated numbers. The i -th line ( i > 0) contains numbers a i , b i ( 1 \u2264 a i , b i \u2264 n ). That means that the fool number 2 i - 1 lives in city a i and visits the fool number 2 i , who lives in city b i . The given pairs describe simple paths, because between every pair of cities there is only one simple path.\n\nOutput\nPrint n - 1 integer. The integers should be separated by spaces. The i -th number should equal the number of fools who can go on the i -th road. The roads are numbered starting from one in the order, in which they occur in the input. Examples\n\nInput\n5 1 2 1 3 2 4 2 5 2 1 4 3 5\n\nOutput\n2 1 1 1\n\nInput\n5 3 4 4 5 1 4 2 4 3 2 3 1 3 3 5\n\nOutput\n3 1 1 1\n\nNote\nIn the first sample the fool number one goes on the first and third road and the fool number 3 goes on the second, first and fourth ones. In the second sample, the fools number 1, 3 and 5 go on the first road, the fool number 5 will go on the second road, on the third road goes the fool number 3, and on the fourth one goes fool number 1.","923":"A. Dynasty Puzzles time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The ancient Berlanders believed that the longer the name, the more important its bearer is. Thus, Berland kings were famous for their long names. But long names are somewhat inconvenient, so the Berlanders started to abbreviate the names of their kings. They called every king by the first letters of its name. Thus, the king, whose name was Victorious Vasily Pupkin, was always called by the berlanders VVP. In Berland over its long history many dynasties of kings replaced each other, but they were all united by common traditions. Thus, according to one Berland traditions, to maintain stability in the country, the first name of the heir should be the same as the last name his predecessor (hence, the first letter of the abbreviated name of the heir coincides with the last letter of the abbreviated name of the predecessor). Berlanders appreciate stability, so this tradition has never been broken. Also Berlanders like perfection, so another tradition requires that the first name of the first king in the dynasty coincides with the last name of the last king in this dynasty (hence, the first letter of the abbreviated name of the first king coincides with the last letter of the abbreviated name of the last king). This tradition, of course, has also been always observed. The name of a dynasty is formed by very simple rules: we take all the short names of the kings in the order in which they ruled, and write them in one line. Thus, a dynasty of kings \"ab\" and \"ba\" is called \"abba\", and the dynasty, which had only the king \"abca\", is called \"abca\". Vasya, a historian, has recently found a list of abbreviated names of all Berland kings and their relatives. Help Vasya to find the maximally long name of the dynasty that could have existed in Berland.\n\nNote\nthat in his list all the names are ordered by the time, that is, if name A is earlier in the list than B , then if A and B were kings, then king A ruled before king B .\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 5\u00b710 5 ) \u2014 the number of names in Vasya's list. Next n lines contain n abbreviated names, one per line. An abbreviated name is a non-empty sequence of lowercase Latin letters. Its length does not exceed 10 characters.\n\nOutput\nPrint a single number \u2014 length of the sought dynasty's name in letters. If Vasya's list is wrong and no dynasty can be found there, print a single number 0 . Examples\n\nInput\n3 abc ca cba\n\nOutput\n6\n\nInput\n4 vvp vvp dam vvp\n\nOutput\n0\n\nInput\n3 ab c def\n\nOutput\n1\n\nNote\nIn the first sample two dynasties can exist: the one called \"abcca\" (with the first and second kings) and the one called \"abccba\" (with the first and third kings). In the second sample there aren't acceptable dynasties. The only dynasty in the third sample consists of one king, his name is \"c\".","932":"A. Exams time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day the Codeforces round author sat exams. He had n exams and he needed to get an integer from 2 to 5 for each exam. He will have to re-sit each failed exam, i.e. the exam that gets mark 2 . The author would need to spend too much time and effort to make the sum of his marks strictly more than k . That could have spoilt the Codeforces round. On the other hand, if the sum of his marks is strictly less than k , the author's mum won't be pleased at all. The Codeforces authors are very smart and they always get the mark they choose themselves. Also, the Codeforces authors just hate re-sitting exams. Help the author and find the minimum number of exams he will have to re-sit if he passes the exams in the way that makes the sum of marks for all n exams equal exactly k .\n\nInput\nThe single input line contains space-separated integers n and k ( 1 \u2264 n \u2264 50 , 1 \u2264 k \u2264 250 ) \u2014 the number of exams and the required sum of marks. It is guaranteed that there exists a way to pass n exams in the way that makes the sum of marks equal exactly k .\n\nOutput\nPrint the single number \u2014 the minimum number of exams that the author will get a 2 for, considering that the sum of marks for all exams must equal k . Examples\n\nInput\n4 8\n\nOutput\n4\n\nInput\n4 10\n\nOutput\n2\n\nInput\n1 3\n\nOutput\n0\n\nNote\nIn the first sample the author has to get a 2 for all his exams. In the second sample he should get a 3 for two exams and a 2 for two more. In the third sample he should get a 3 for one exam.","938":"A. Let's Watch Football time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Valeric and Valerko missed the last Euro football game, so they decided to watch the game's key moments on the Net. They want to start watching as soon as possible but the connection speed is too low. If they turn on the video right now, it will \"hang up\" as the size of data to watch per second will be more than the size of downloaded data per second. The guys want to watch the whole video without any pauses, so they have to wait some integer number of seconds for a part of the video to download. After this number of seconds passes, they can start watching. Waiting for the whole video to download isn't necessary as the video can download after the guys started to watch. Let's suppose that video's length is c seconds and Valeric and Valerko wait t seconds before the watching. Then for any moment of time t 0 , t \u2264 t 0 \u2264 c + t , the following condition must fulfill: the size of data received in t 0 seconds is not less than the size of data needed to watch t 0 - t seconds of the video. Of course, the guys want to wait as little as possible, so your task is to find the minimum integer number of seconds to wait before turning the video on. The guys must watch the video without pauses.\n\nInput\nThe first line contains three space-separated integers a , b and c (1 \u2264 a , b , c \u2264 1000, a > b ) . The first number ( a ) denotes the size of data needed to watch one second of the video. The second number ( b ) denotes the size of data Valeric and Valerko can download from the Net per second. The third number ( c ) denotes the video's length in seconds.\n\nOutput\nPrint a single number \u2014 the minimum integer number of seconds that Valeric and Valerko must wait to watch football without pauses. Examples\n\nInput\n4 1 1\n\nOutput\n3\n\nInput\n10 3 2\n\nOutput\n5\n\nInput\n13 12 1\n\nOutput\n1\n\nNote\nIn the first sample video's length is 1 second and it is necessary 4 units of data for watching 1 second of video, so guys should download 4 \u00b7 1 = 4 units of data to watch the whole video. The most optimal way is to wait 3 seconds till 3 units of data will be downloaded and then start watching. While guys will be watching video 1 second, one unit of data will be downloaded and Valerik and Valerko will have 4 units of data by the end of watching. Also every moment till the end of video guys will have more data then necessary for watching. In the second sample guys need 2 \u00b7 10 = 20 units of data, so they have to wait 5 seconds and after that they will have 20 units before the second second ends. However, if guys wait 4 seconds, they will be able to watch first second of video without pauses, but they will download 18 units of data by the end of second second and it is less then necessary.","941":"B. After Training time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output After a team finished their training session on Euro football championship, Valeric was commissioned to gather the balls and sort them into baskets. Overall the stadium has n balls and m baskets. The baskets are positioned in a row from left to right and they are numbered with numbers from 1 to m , correspondingly. The balls are numbered with numbers from 1 to n . Valeric decided to sort the balls in the order of increasing of their numbers by the following scheme. He will put each new ball in the basket with the least number of balls. And if he's got several variants, he chooses the basket which stands closer to the middle. That means that he chooses the basket for which is minimum, where i is the number of the basket. If in this case Valeric still has multiple variants, he chooses the basket with the minimum number. For every ball print the number of the basket where it will go according to Valeric's scheme.\n\nNote\nthat the balls are sorted into baskets in the order of increasing numbers, that is, the first ball goes first, then goes the second ball and so on.\n\nInput\nThe first line contains two space-separated integers n , m (1 \u2264 n , m \u2264 10 5 ) \u2014 the number of balls and baskets, correspondingly.\n\nOutput\nPrint n numbers, one per line. The i -th line must contain the number of the basket for the i -th ball. Examples\n\nInput\n4 3\n\nOutput\n2 1 3 2\n\nInput\n3 1\n\nOutput\n1 1 1","964":"A. Lexicographically Maximum Subsequence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You've got string s , consisting of only lowercase English letters. Find its lexicographically maximum subsequence. We'll call a non-empty string s [ p 1 p 2 ... p k ] = s p 1 s p 2 ... s p k (1 \u2264 p 1 < p 2 < ... < p k \u2264 | s |) a subsequence of string s = s 1 s 2 ... s | s | . String x = x 1 x 2 ... x | x | is lexicographically larger than string y = y 1 y 2 ... y | y | , if either | x | > | y | and x 1 = y 1 , x 2 = y 2 , ... , x | y | = y | y | , or exists such number r ( r < | x |, r < | y |) , that x 1 = y 1 , x 2 = y 2 , ... , x r = y r and x r + 1 > y r + 1 . Characters in lines are compared like their ASCII codes.\n\nInput\nThe single line contains a non-empty string s , consisting only of lowercase English letters. The string's length doesn't exceed 10 5 .\n\nOutput\nPrint the lexicographically maximum subsequence of string s . Examples\n\nInput\nababba\n\nOutput\nbbba\n\nInput\nabbcbccacbbcbaaba\n\nOutput\ncccccbba\n\nNote\nLet's look at samples and see what the sought subsequences look like (they are marked with uppercase bold letters). The first sample: a B a BBA The second sample: abb C b CC a C bb CB aa BA","967":"A. About Bacteria time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Qwerty the Ranger took up a government job and arrived on planet Mars. He should stay in the secret lab and conduct some experiments on bacteria that have funny and abnormal properties. The job isn't difficult, but the salary is high. At the beginning of the first experiment there is a single bacterium in the test tube. Every second each bacterium in the test tube divides itself into k bacteria. After that some abnormal effects create b more bacteria in the test tube. Thus, if at the beginning of some second the test tube had x bacteria, then at the end of the second it will have kx + b bacteria. The experiment showed that after n seconds there were exactly z bacteria and the experiment ended at this point. For the second experiment Qwerty is going to sterilize the test tube and put there t bacteria. He hasn't started the experiment yet but he already wonders, how many seconds he will need to grow at least z bacteria. The ranger thinks that the bacteria will divide by the same rule as in the first experiment. Help Qwerty and find the minimum number of seconds needed to get a tube with at least z bacteria in the second experiment.\n\nInput\nThe first line contains four space-separated integers k , b , n and t (1 \u2264 k , b , n , t \u2264 10 6 ) \u2014 the parameters of bacterial growth, the time Qwerty needed to grow z bacteria in the first experiment and the initial number of bacteria in the second experiment, correspondingly.\n\nOutput\nPrint a single number \u2014 the minimum number of seconds Qwerty needs to grow at least z bacteria in the tube. Examples\n\nInput\n3 1 3 5\n\nOutput\n2\n\nInput\n1 4 4 7\n\nOutput\n3\n\nInput\n2 2 4 100\n\nOutput\n0","976":"A. Hexadecimal's theorem time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Recently, a chaotic virus Hexadecimal advanced a new theorem which will shake the Universe. She thinks that each Fibonacci number can be represented as sum of three not necessary different Fibonacci numbers. Let's remember how Fibonacci numbers can be calculated. F 0 = 0 , F 1 = 1 , and all the next numbers are F i = F i - 2 + F i - 1 . So, Fibonacci numbers make a sequence of numbers: 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , ... If you haven't run away from the PC in fear, you have to help the virus. Your task is to divide given Fibonacci number n by three not necessary different Fibonacci numbers or say that it is impossible.\n\nInput\nThe input contains of a single integer n (0 \u2264 n < 10 9 ) \u2014 the number that should be represented by the rules described above. It is guaranteed that n is a Fibonacci number.\n\nOutput\nOutput three required numbers: a , b and c . If there is no answer for the test you have to print \" I'm too stupid to solve this problem \" without the quotes. If there are multiple answers, print any of them. Examples\n\nInput\n3\n\nOutput\n1 1 1\n\nInput\n13\n\nOutput\n2 3 8","1030":"B. Drinks time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Vasya loves orange juice very much. That's why any food and drink in his kitchen necessarily contains orange juice. There are n drinks in his fridge, the volume fraction of orange juice in the i -th drink equals p i percent. One day Vasya decided to make himself an orange cocktail. He took equal proportions of each of the n drinks and mixed them. Then he wondered, how much orange juice the cocktail has. Find the volume fraction of orange juice in the final drink.\n\nInput\nThe first input line contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of orange-containing drinks in Vasya's fridge. The second line contains n integers p i ( 0 \u2264 p i \u2264 100 ) \u2014 the volume fraction of orange juice in the i -th drink, in percent. The numbers are separated by a space.\n\nOutput\nPrint the volume fraction in percent of orange juice in Vasya's cocktail. The answer will be considered correct if the absolute or relative error does not exceed 10 - 4 . Examples\n\nInput\n3 50 50 100\n\nOutput\n66.666666666667\n\nInput\n4 0 25 50 75\n\nOutput\n37.500000000000\n\nNote\nNote to the first sample: let's assume that Vasya takes x milliliters of each drink from the fridge. Then the volume of pure juice in the cocktail will equal milliliters. The total cocktail's volume equals 3\u00b7 x milliliters, so the volume fraction of the juice in the cocktail equals , that is, 66.(6) percent.","1034":"A. Clear Symmetry time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Consider some square matrix A with side n consisting of zeros and ones. There are n rows numbered from 1 to n from top to bottom and n columns numbered from 1 to n from left to right in this matrix. We'll denote the element of the matrix which is located at the intersection of the i -row and the j -th column as A i , j . Let's call matrix A clear if no two cells containing ones have a common side. Let's call matrix A symmetrical if it matches the matrices formed from it by a horizontal and\/or a vertical reflection. Formally, for each pair ( i , j ) (1 \u2264 i , j \u2264 n ) both of the following conditions must be met: A i , j = A n - i + 1, j and A i , j = A i , n - j + 1 . Let's define the sharpness of matrix A as the number of ones in it. Given integer x , your task is to find the smallest positive integer n such that there exists a clear symmetrical matrix A with side n and sharpness x .\n\nInput\nThe only line contains a single integer x ( 1 \u2264 x \u2264 100 ) \u2014 the required sharpness of the matrix.\n\nOutput\nPrint a single number \u2014 the sought value of n . Examples\n\nInput\n4\n\nOutput\n3\n\nInput\n9\n\nOutput\n5\n\nNote\nThe figure below shows the matrices that correspond to the samples:","1036":"B. Guess That Car! time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A widely known among some people Belarusian sport programmer Yura possesses lots of information about cars. That is why he has been invited to participate in a game show called \"Guess That Car!\". The game show takes place on a giant parking lot, which is 4 n meters long from north to south and 4 m meters wide from west to east. The lot has n + 1 dividing lines drawn from west to east and m + 1 dividing lines drawn from north to south, which divide the parking lot into n \u00b7 m 4 by 4 meter squares. There is a car parked strictly inside each square. The dividing lines are numbered from 0 to n from north to south and from 0 to m from west to east. Each square has coordinates ( i , j ) so that the square in the north-west corner has coordinates (1, 1) and the square in the south-east corner has coordinates ( n , m ) . See the picture in the notes for clarifications. Before the game show the organizers offer Yura to occupy any of the ( n + 1)\u00b7( m + 1) intersection points of the dividing lines. After that he can start guessing the cars. After Yura chooses a point, he will be prohibited to move along the parking lot before the end of the game show. As Yura is a car expert, he will always guess all cars he is offered, it's just a matter of time. Yura knows that to guess each car he needs to spend time equal to the square of the euclidean distance between his point and the center of the square with this car, multiplied by some coefficient characterizing the machine's \"rarity\" (the rarer the car is, the harder it is to guess it). More formally, guessing a car with \"rarity\" c placed in a square whose center is at distance d from Yura takes c \u00b7 d 2 seconds. The time Yura spends on turning his head can be neglected. It just so happened that Yura knows the \"rarity\" of each car on the parking lot in advance. Help him choose his point so that the total time of guessing all cars is the smallest possible.\n\nInput\nThe first line contains two integers n and m (1 \u2264 n , m \u2264 1000) \u2014 the sizes of the parking lot. Each of the next n lines contains m integers: the j -th number in the i -th line describes the \"rarity\" c ij ( 0 \u2264 c ij \u2264 100000 ) of the car that is located in the square with coordinates ( i , j ) .\n\nOutput\nIn the first line print the minimum total time Yura needs to guess all offered cars. In the second line print two numbers l i and l j ( 0 \u2264 l i \u2264 n , 0 \u2264 l j \u2264 m ) \u2014 the numbers of dividing lines that form a junction that Yura should choose to stand on at the beginning of the game show. If there are multiple optimal starting points, print the point with smaller l i . If there are still multiple such points, print the point with smaller l j . Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin , cout streams or the %I64d specifier. Examples\n\nInput\n2 3 3 4 5 3 9 1\n\nOutput\n392 1 1\n\nInput\n3 4 1 0 0 0 0 0 3 0 0 0 5 5\n\nOutput\n240 2 3\n\nNote\nIn the first test case the total time of guessing all cars is equal to 3\u00b78 + 3\u00b78 + 4\u00b78 + 9\u00b78 + 5\u00b740 + 1\u00b740 = 392. The coordinate system of the field:","1039":"C. Fragile Bridges time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are playing a video game and you have just reached the bonus level, where the only possible goal is to score as many points as possible. Being a perfectionist, you've decided that you won't leave this level until you've gained the maximum possible number of points there. The bonus level consists of n small platforms placed in a line and numbered from 1 to n from left to right and ( n - 1 ) bridges connecting adjacent platforms. The bridges between the platforms are very fragile, and for each bridge the number of times one can pass this bridge from one of its ends to the other before it collapses forever is known in advance. The player's actions are as follows. First, he selects one of the platforms to be the starting position for his hero. After that the player can freely move the hero across the platforms moving by the undestroyed bridges. As soon as the hero finds himself on a platform with no undestroyed bridge attached to it, the level is automatically ended. The number of points scored by the player at the end of the level is calculated as the number of transitions made by the hero between the platforms.\n\nNote\nthat if the hero started moving by a certain bridge, he has to continue moving in the same direction until he is on a platform. Find how many points you need to score to be sure that nobody will beat your record, and move to the next level with a quiet heart.\n\nInput\nThe first line contains a single integer n ( 2 \u2264 n \u2264 10 5 ) \u2014 the number of platforms on the bonus level. The second line contains ( n - 1 ) integers a i ( 1 \u2264 a i \u2264 10 9 , 1 \u2264 i < n ) \u2014 the number of transitions from one end to the other that the bridge between platforms i and i + 1 can bear.\n\nOutput\nPrint a single integer \u2014 the maximum number of points a player can get on the bonus level. Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin , cout streams or the %I64d specifier. Examples\n\nInput\n5 2 1 2 1\n\nOutput\n5\n\nNote\nOne possibility of getting 5 points in the sample is starting from platform 3 and consequently moving to platforms 4 , 3 , 2 , 1 and 2 . After that the only undestroyed bridge is the bridge between platforms 4 and 5 , but this bridge is too far from platform 2 where the hero is located now.","1044":"C. Photographer time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Valera's lifelong ambition was to be a photographer, so he bought a new camera. Every day he got more and more clients asking for photos, and one day Valera needed a program that would determine the maximum number of people he can serve. The camera's memory is d megabytes. Valera's camera can take photos of high and low quality. One low quality photo takes a megabytes of memory, one high quality photo take b megabytes of memory. For unknown reasons, each client asks him to make several low quality photos and several high quality photos. More formally, the i -th client asks to make x i low quality photos and y i high quality photos. Valera wants to serve as many clients per day as possible, provided that they will be pleased with his work. To please the i -th client, Valera needs to give him everything he wants, that is, to make x i low quality photos and y i high quality photos. To make one low quality photo, the camera must have at least a megabytes of free memory space. Similarly, to make one high quality photo, the camera must have at least b megabytes of free memory space. Initially the camera's memory is empty. Valera also does not delete photos from the camera so that the camera's memory gradually fills up. Calculate the maximum number of clients Valera can successfully serve and print the numbers of these clients.\n\nInput\nThe first line contains two integers n and d (1 \u2264 n \u2264 10 5 , 1 \u2264 d \u2264 10 9 ) \u2014 the number of clients and the camera memory size, correspondingly. The second line contains two integers a and b ( 1 \u2264 a \u2264 b \u2264 10 4 ) \u2014 the size of one low quality photo and of one high quality photo, correspondingly. Next n lines describe the clients. The i -th line contains two integers x i and y i ( 0 \u2264 x i , y i \u2264 10 5 ) \u2014 the number of low quality photos and high quality photos the i -th client wants, correspondingly. All numbers on all lines are separated by single spaces.\n\nOutput\nOn the first line print the answer to the problem \u2014 the maximum number of clients that Valera can successfully serve. Print on the second line the numbers of the client in any order. All numbers must be distinct. If there are multiple answers, print any of them. The clients are numbered starting with 1 in the order in which they are defined in the input data. Examples\n\nInput\n3 10 2 3 1 4 2 1 1 0\n\nOutput\n2 3 2\n\nInput\n3 6 6 6 1 1 1 0 1 0\n\nOutput\n1 2","1046":"A. Two Problems time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A boy Valera registered on site Codeforces as Valera , and wrote his first Codeforces Round #300 . He boasted to a friend Arkady about winning as much as x points for his first contest. But Arkady did not believe his friend's words and decided to check whether Valera could have shown such a result. He knows that the contest number 300 was unusual because there were only two problems. The contest lasted for t minutes, the minutes are numbered starting from zero. The first problem had the initial cost of a points, and every minute its cost reduced by d a points. The second problem had the initial cost of b points, and every minute this cost reduced by d b points. Thus, as soon as the zero minute of the contest is over, the first problem will cost a - d a points, and the second problem will cost b - d b points. It is guaranteed that at any moment of the contest each problem has a non-negative cost. Arkady asks you to find out whether Valera could have got exactly x points for this contest. You should assume that Valera could have solved any number of the offered problems. You should also assume that for each problem Valera made no more than one attempt, besides, he could have submitted both problems at the same minute of the contest, starting with minute 0 and ending with minute number t - 1 . Please note that Valera can't submit a solution exactly t minutes after the start of the contest or later.\n\nInput\nThe single line of the input contains six integers x , t , a , b , d a , d b (0 \u2264 x \u2264 600; 1 \u2264 t , a , b , d a , d b \u2264 300) \u2014 Valera's result, the contest's duration, the initial cost of the first problem, the initial cost of the second problem, the number of points that the first and the second problem lose per minute, correspondingly. It is guaranteed that at each minute of the contest each problem has a non-negative cost, that is, a - i \u00b7 d a \u2265 0 and b - i \u00b7 d b \u2265 0 for all 0 \u2264 i \u2264 t - 1 .\n\nOutput\nIf Valera could have earned exactly x points at a contest, print \" YES \", otherwise print \" NO \" (without the quotes). Examples\n\nInput\n30 5 20 20 3 5\n\nOutput\nYES\n\nInput\n10 4 100 5 5 1\n\nOutput\nNO\n\nNote\nIn the first sample Valera could have acted like this: he could have submitted the first problem at minute 0 and the second problem \u2014 at minute 2 . Then the first problem brings him 20 points and the second problem brings him 10 points, that in total gives the required 30 points.","1048":"A. Little Elephant and Rozdil time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Little Elephant loves Ukraine very much. Most of all he loves town Rozdol (ukr. \"Rozdil\"). However, Rozdil is dangerous to settle, so the Little Elephant wants to go to some other town. The Little Elephant doesn't like to spend much time on travelling, so for his journey he will choose a town that needs minimum time to travel to. If there are multiple such cities, then the Little Elephant won't go anywhere. For each town except for Rozdil you know the time needed to travel to this town. Find the town the Little Elephant will go to or print \" Still Rozdil \", if he stays in Rozdil.\n\nInput\nThe first line contains a single integer n (1 \u2264 n \u2264 10 5 ) \u2014 the number of cities. The next line contains n integers, separated by single spaces: the i -th integer represents the time needed to go from town Rozdil to the i -th town. The time values are positive integers, not exceeding 10 9 . You can consider the cities numbered from 1 to n , inclusive. Rozdil is not among the numbered cities.\n\nOutput\nPrint the answer on a single line \u2014 the number of the town the Little Elephant will go to. If there are multiple cities with minimum travel time, print \" Still Rozdil \" (without the quotes). Examples\n\nInput\n2 7 4\n\nOutput\n2\n\nInput\n7 7 4 47 100 4 9 12\n\nOutput\nStill Rozdil\n\nNote\nIn the first sample there are only two cities where the Little Elephant can go. The travel time for the first town equals 7 , to the second one \u2014 4 . The town which is closest to Rodzil (the only one) is the second one, so the answer is 2 . In the second sample the closest cities are cities two and five, the travelling time to both of them equals 4 , so the answer is \" Still Rozdil \".","1050":"B. Little Elephant and Sorting time limit per test 0.5 seconds memory limit per test 256 megabytes input standard input output standard output The Little Elephant loves sortings. He has an array a consisting of n integers. Let's number the array elements from 1 to n , then the i -th element will be denoted as a i . The Little Elephant can make one move to choose an arbitrary pair of integers l and r (1 \u2264 l \u2264 r \u2264 n ) and increase a i by 1 for all i such that l \u2264 i \u2264 r . Help the Little Elephant find the minimum number of moves he needs to convert array a to an arbitrary array sorted in the non-decreasing order. Array a , consisting of n elements, is sorted in the non-decreasing order if for any i (1 \u2264 i < n ) a i \u2264 a i + 1 holds.\n\nInput\nThe first line contains a single integer n (1 \u2264 n \u2264 10 5 ) \u2014 the size of array a . The next line contains n integers, separated by single spaces \u2014 array a (1 \u2264 a i \u2264 10 9 ) . The array elements are listed in the line in the order of their index's increasing.\n\nOutput\nIn a single line print a single integer \u2014 the answer to the problem. Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin , cout streams or the %I64d specifier. Examples\n\nInput\n3 1 2 3\n\nOutput\n0\n\nInput\n3 3 2 1\n\nOutput\n2\n\nInput\n4 7 4 1 47\n\nOutput\n6\n\nNote\nIn the first sample the array is already sorted in the non-decreasing order, so the answer is 0 . In the second sample you need to perform two operations: first increase numbers from second to third (after that the array will be: [3, 3, 2] ), and second increase only the last element (the array will be: [3, 3, 3] ). In the third sample you should make at least 6 steps. The possible sequence of the operations is: (2; 3), (2; 3), (2; 3), (3; 3), (3; 3), (3; 3) . After that the array converts to [7, 7, 7, 47] .","1055":"A. Dubstep time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya works as a DJ in the best Berland nightclub, and he often uses dubstep music in his performance. Recently, he has decided to take a couple of old songs and make dubstep remixes from them. Let's assume that a song consists of some number of words. To make the dubstep remix of this song, Vasya inserts a certain number of words \" WUB \" before the first word of the song (the number may be zero), after the last word (the number may be zero), and between words (at least one between any pair of neighbouring words), and then the boy glues together all the words, including \" WUB \", in one string and plays the song at the club. For example, a song with words \" I AM X \" can transform into a dubstep remix as \" WUBWUBIWUBAMWUBWUBX \" and cannot transform into \" WUBWUBIAMWUBX \". Recently, Petya has heard Vasya's new dubstep track, but since he isn't into modern music, he decided to find out what was the initial song that Vasya remixed. Help Petya restore the original song.\n\nInput\nThe input consists of a single non-empty string, consisting only of uppercase English letters, the string's length doesn't exceed 200 characters. It is guaranteed that before Vasya remixed the song, no word contained substring \" WUB \" in it; Vasya didn't change the word order. It is also guaranteed that initially the song had at least one word.\n\nOutput\nPrint the words of the initial song that Vasya used to make a dubsteb remix. Separate the words with a space. Examples\n\nInput\nWUBWUBABCWUB\n\nOutput\nABC\n\nInput\nWUBWEWUBAREWUBWUBTHEWUBCHAMPIONSWUBMYWUBFRIENDWUB\n\nOutput\nWE ARE THE CHAMPIONS MY FRIEND\n\nNote\nIn the first sample: \" WUBWUBABCWUB \" = \" WUB \" + \" WUB \" + \" ABC \" + \" WUB \". That means that the song originally consisted of a single word \" ABC \", and all words \" WUB \" were added by Vasya. In the second sample Vasya added a single word \" WUB \" between all neighbouring words, in the beginning and in the end, except for words \" ARE \" and \" THE \" \u2014 between them Vasya added two \" WUB \".","1061":"B. Pixels time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Flatland is inhabited by pixels of three colors: red, green and blue. We know that if two pixels of different colors meet in a violent fight, only one of them survives the fight (that is, the total number of pixels decreases by one). Besides, if pixels of colors x and y ( x \u2260 y ) meet in a violent fight, then the pixel that survives the fight immediately changes its color to z ( z \u2260 x ; z \u2260 y ) . Pixels of the same color are friends, so they don't fight. The King of Flatland knows that his land will be peaceful and prosperous when the pixels are of the same color. For each of the three colors you know the number of pixels of this color that inhabit Flatland. Help the king and determine whether fights can bring peace and prosperity to the country and if it is possible, find the minimum number of fights needed to make the land peaceful and prosperous.\n\nInput\nThe first line contains three space-separated integers a , b and c (0 \u2264 a , b , c \u2264 2 31 ; a + b + c > 0) \u2014 the number of red, green and blue pixels, correspondingly.\n\nOutput\nPrint a single number \u2014 the minimum number of pixel fights before the country becomes peaceful and prosperous. If making the country peaceful and prosperous is impossible, print -1 . Examples\n\nInput\n1 1 1\n\nOutput\n1\n\nInput\n3 1 0\n\nOutput\n3\n\nNote\nIn the first test sample the country needs only one fight to achieve peace and prosperity. Besides, it can be any fight whatsoever. For example, let's assume that the green and the blue pixels fight, then the surviving pixel will be red. As a result, after the fight there are two red pixels. There won't be other pixels. In the second sample the following sequence of fights is possible: red and blue, green and red, red and blue. As a result, after all fights there is one green pixel left.","1066":"C. Relay Race time limit per test 4 seconds memory limit per test 256 megabytes input standard input output standard output Furik and Rubik take part in a relay race. The race will be set up on a large square with the side of n meters. The given square is split into n \u00d7 n cells (represented as unit squares), each cell has some number. At the beginning of the race Furik stands in a cell with coordinates (1, 1) , and Rubik stands in a cell with coordinates ( n , n ) . Right after the start Furik runs towards Rubik, besides, if Furik stands at a cell with coordinates ( i , j ) , then he can move to cell ( i + 1, j ) or ( i , j + 1) . After Furik reaches Rubik, Rubik starts running from cell with coordinates ( n , n ) to cell with coordinates (1, 1) . If Rubik stands in cell ( i , j ) , then he can move to cell ( i - 1, j ) or ( i , j - 1) . Neither Furik, nor Rubik are allowed to go beyond the boundaries of the field; if a player goes beyond the boundaries, he will be disqualified. To win the race, Furik and Rubik must earn as many points as possible. The number of points is the sum of numbers from the cells Furik and Rubik visited. Each cell counts only once in the sum . Print the maximum number of points Furik and Rubik can earn on the relay race.\n\nInput\nThe first line contains a single integer (1 \u2264 n \u2264 300) . The next n lines contain n integers each: the j -th number on the i -th line a i , j ( - 1000 \u2264 a i , j \u2264 1000) is the number written in the cell with coordinates ( i , j ) .\n\nOutput\nOn a single line print a single number \u2014 the answer to the problem. Examples\n\nInput\n1 5\n\nOutput\n5\n\nInput\n2 11 14 16 12\n\nOutput\n53\n\nInput\n3 25 16 25 12 18 19 11 13 8\n\nOutput\n136\n\nNote\nComments to the second sample: The profitable path for Furik is: (1, 1) , (1, 2) , (2, 2) , and for Rubik: (2, 2) , (2, 1) , (1, 1) . Comments to the third sample: The optimal path for Furik is: (1, 1) , (1, 2) , (1, 3) , (2, 3) , (3, 3) , and for Rubik: (3, 3) , (3, 2) , (2, 2) , (2, 1) , (1, 1) . The figure to the sample: Furik's path is marked with yellow, and Rubik's path is marked with pink.","1067":"B. Numbers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Furik loves writing all sorts of problems, especially such that he can't solve himself. You've got one of his problems, the one Furik gave to Rubik. And Rubik asks you to solve it. There is integer n and array a , consisting of ten integers, indexed by numbers from 0 to 9. Your task is to count the number of positive integers with the following properties: the number's length does not exceed n ; the number doesn't have leading zeroes; digit i (0 \u2264 i \u2264 9) occurs in the number at least a [ i ] times.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 100) . The next line contains 10 integers a [0] , a [1] , ... , a [9] (0 \u2264 a [ i ] \u2264 100) \u2014 elements of array a . The numbers are separated by spaces.\n\nOutput\nOn a single line print the remainder of dividing the answer to the problem by 1000000007 (10 9 + 7) . Examples\n\nInput\n1 0 0 0 0 0 0 0 0 0 1\n\nOutput\n1\n\nInput\n2 1 1 0 0 0 0 0 0 0 0\n\nOutput\n1\n\nInput\n3 1 1 0 0 0 0 0 0 0 0\n\nOutput\n36\n\nNote\nIn the first sample number 9 meets the requirements. In the second sample number 10 meets the requirements. In the third sample numbers 10, 110, 210, 120, 103 meet the requirements. There are other suitable numbers, 36 in total.","1070":"A. System of Equations time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Furik loves math lessons very much, so he doesn't attend them, unlike Rubik. But now Furik wants to get a good mark for math. For that Ms. Ivanova, his math teacher, gave him a new task. Furik solved the task immediately. Can you? You are given a system of equations: You should count, how many there are pairs of integers ( a , b ) (0 \u2264 a , b ) which satisfy the system.\n\nInput\nA single line contains two integers n , m (1 \u2264 n , m \u2264 1000) \u2014 the parameters of the system. The numbers on the line are separated by a space.\n\nOutput\nOn a single line print the answer to the problem. Examples\n\nInput\n9 3\n\nOutput\n1\n\nInput\n14 28\n\nOutput\n1\n\nInput\n4 20\n\nOutput\n0\n\nNote\nIn the first sample the suitable pair is integers (3, 0) . In the second sample the suitable pair is integers (3, 5) . In the third sample there is no suitable pair.","1081":"A. Bicycle Chain time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya's bicycle chain drive consists of two parts: n stars are attached to the pedal axle, m stars are attached to the rear wheel axle. The chain helps to rotate the rear wheel by transmitting the pedal rotation. We know that the i -th star on the pedal axle has a i (0 < a 1 < a 2 < ... < a n ) teeth, and the j -th star on the rear wheel axle has b j (0 < b 1 < b 2 < ... < b m ) teeth. Any pair ( i , j ) (1 \u2264 i \u2264 n ; 1 \u2264 j \u2264 m ) is called a gear and sets the indexes of stars to which the chain is currently attached. Gear ( i , j ) has a gear ratio, equal to the value . Since Vasya likes integers, he wants to find such gears ( i , j ) , that their ratios are integers. On the other hand, Vasya likes fast driving, so among all \"integer\" gears ( i , j ) he wants to choose a gear with the maximum ratio. Help him to find the number of such gears. In the problem, fraction denotes division in real numbers, that is, no rounding is performed.\n\nInput\nThe first input line contains integer n (1 \u2264 n \u2264 50) \u2014 the number of stars on the bicycle's pedal axle. The second line contains n integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 10 4 ) in the order of strict increasing. The third input line contains integer m (1 \u2264 m \u2264 50) \u2014 the number of stars on the rear wheel axle. The fourth line contains m integers b 1 , b 2 , ..., b m (1 \u2264 b i \u2264 10 4 ) in the order of strict increasing. It is guaranteed that there exists at least one gear ( i , j ), that its gear ratio is an integer. The numbers on the lines are separated by spaces.\n\nOutput\nPrint the number of \"integer\" gears with the maximum ratio among all \"integer\" gears. Examples\n\nInput\n2 4 5 3 12 13 15\n\nOutput\n2\n\nInput\n4 1 2 3 4 5 10 11 12 13 14\n\nOutput\n1\n\nNote\nIn the first sample the maximum \"integer\" gear ratio equals 3. There are two gears that have such gear ratio. For one of them a 1 = 4, b 1 = 12 , and for the other a 2 = 5, b 3 = 15 .","1087":"B. Forming Teams time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day n students come to the stadium. They want to play football, and for that they need to split into teams, the teams must have an equal number of people. We know that this group of people has archenemies. Each student has at most two archenemies. Besides, if student A is an archenemy to student B , then student B is an archenemy to student A . The students want to split so as no two archenemies were in one team. If splitting in the required manner is impossible, some students will have to sit on the bench. Determine the minimum number of students you will have to send to the bench in order to form the two teams in the described manner and begin the game at last.\n\nInput\nThe first line contains two integers n and m ( 2 \u2264 n \u2264 100 , 1 \u2264 m \u2264 100 ) \u2014 the number of students and the number of pairs of archenemies correspondingly. Next m lines describe enmity between students. Each enmity is described as two numbers a i and b i ( 1 \u2264 a i , b i \u2264 n , a i \u2260 b i ) \u2014 the indexes of the students who are enemies to each other. Each enmity occurs in the list exactly once. It is guaranteed that each student has no more than two archenemies. You can consider the students indexed in some manner with distinct integers from 1 to n .\n\nOutput\nPrint a single integer \u2014 the minimum number of students you will have to send to the bench in order to start the game. Examples\n\nInput\n5 4 1 2 2 4 5 3 1 4\n\nOutput\n1\n\nInput\n6 2 1 4 3 4\n\nOutput\n0\n\nInput\n6 6 1 2 2 3 3 1 4 5 5 6 6 4\n\nOutput\n2","1088":"A. Tiling with Hexagons time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Several ages ago Berland was a kingdom. The King of Berland adored math. That's why, when he first visited one of his many palaces, he first of all paid attention to the floor in one hall. The floor was tiled with hexagonal tiles. The hall also turned out hexagonal in its shape. The King walked along the perimeter of the hall and concluded that each of the six sides has a , b , c , a , b and c adjacent tiles, correspondingly. To better visualize the situation, look at the picture showing a similar hexagon for a = 2 , b = 3 and c = 4 . According to the legend, as the King of Berland obtained the values a , b and c , he almost immediately calculated the total number of tiles on the hall floor. Can you do the same?\n\nInput\nThe first line contains three integers: a , b and c ( 2 \u2264 a , b , c \u2264 1000 ).\n\nOutput\nPrint a single number \u2014 the total number of tiles on the hall floor. Examples\n\nInput\n2 3 4\n\nOutput\n18","1099":"B. Airport time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Lolek and Bolek are about to travel abroad by plane. The local airport has a special \"Choose Your Plane\" offer. The offer's conditions are as follows: it is up to a passenger to choose a plane to fly on; if the chosen plane has x ( x > 0) empty seats at the given moment, then the ticket for such a plane costs x zlotys (units of Polish currency). The only ticket office of the airport already has a queue of n passengers in front of it. Lolek and Bolek have not stood in the queue yet, but they are already wondering what is the maximum and the minimum number of zlotys the airport administration can earn if all n passengers buy tickets according to the conditions of this offer? The passengers buy tickets in turn, the first person in the queue goes first, then goes the second one, and so on up to n -th person.\n\nInput\nThe first line contains two integers n and m (1 \u2264 n , m \u2264 1000) \u2014 the number of passengers in the queue and the number of planes in the airport, correspondingly. The next line contains m integers a 1 , a 2 , ..., a m (1 \u2264 a i \u2264 1000) \u2014 a i stands for the number of empty seats in the i -th plane before the ticket office starts selling tickets. The numbers in the lines are separated by a space. It is guaranteed that there are at least n empty seats in total.\n\nOutput\nPrint two integers \u2014 the maximum and the minimum number of zlotys that the airport administration can earn, correspondingly. Examples\n\nInput\n4 3 2 1 1\n\nOutput\n5 5\n\nInput\n4 3 2 2 2\n\nOutput\n7 6\n\nNote\nIn the first test sample the number of passengers is equal to the number of empty seats, so regardless of the way the planes are chosen, the administration will earn the same sum. In the second sample the sum is maximized if the 1-st person in the queue buys a ticket to the 1-st plane, the 2-nd person \u2014 to the 2-nd plane, the 3-rd person \u2014 to the 3-rd plane, the 4-th person \u2014 to the 1-st plane. The sum is minimized if the 1-st person in the queue buys a ticket to the 1-st plane, the 2-nd person \u2014 to the 1-st plane, the 3-rd person \u2014 to the 2-nd plane, the 4-th person \u2014 to the 2-nd plane.","1102":"C. Color Stripe time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A colored stripe is represented by a horizontal row of n square cells, each cell is pained one of k colors. Your task is to repaint the minimum number of cells so that no two neighbouring cells are of the same color. You can use any color from 1 to k to repaint the cells.\n\nInput\nThe first input line contains two integers n and k ( 1 \u2264 n \u2264 5\u00b710 5 ; 2 \u2264 k \u2264 26 ). The second line contains n uppercase English letters. Letter \" A \" stands for the first color, letter \" B \" stands for the second color and so on. The first k English letters may be used. Each letter represents the color of the corresponding cell of the stripe.\n\nOutput\nPrint a single integer \u2014 the required minimum number of repaintings. In the second line print any possible variant of the repainted stripe. Examples\n\nInput\n6 3 ABBACC\n\nOutput\n2 ABCACA\n\nInput\n3 2 BBB\n\nOutput\n1 BAB","1104":"A. k-String time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A string is called a k -string if it can be represented as k concatenated copies of some string. For example, the string \" aabaabaabaab \" is at the same time a 1-string, a 2-string and a 4-string, but it is not a 3-string, a 5-string, or a 6-string and so on. Obviously any string is a 1-string. You are given a string s , consisting of lowercase English letters and a positive integer k . Your task is to reorder the letters in the string s in such a way that the resulting string is a k -string.\n\nInput\nThe first input line contains integer k ( 1 \u2264 k \u2264 1000 ). The second line contains s , all characters in s are lowercase English letters. The string length s satisfies the inequality 1 \u2264 | s | \u2264 1000 , where | s | is the length of string s .\n\nOutput\nRearrange the letters in string s in such a way that the result is a k -string. Print the result on a single output line. If there are multiple solutions, print any of them. If the solution doesn't exist, print \" -1 \" (without quotes). Examples\n\nInput\n2 aazz\n\nOutput\nazaz\n\nInput\n3 abcabcabz\n\nOutput\n-1","1106":"E. Scheme time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output To learn as soon as possible the latest news about their favourite fundamentally new operating system, BolgenOS community from Nizhni Tagil decided to develop a scheme. According to this scheme a community member, who is the first to learn the news, calls some other member, the latter, in his turn, calls some third member, and so on; i.e. a person with index i got a person with index f i , to whom he has to call, if he learns the news. With time BolgenOS community members understood that their scheme doesn't work sometimes \u2014 there were cases when some members didn't learn the news at all. Now they want to supplement the scheme: they add into the scheme some instructions of type ( x i , y i ) , which mean that person x i has to call person y i as well. What is the minimum amount of instructions that they need to add so, that at the end everyone learns the news, no matter who is the first to learn it?\n\nInput\nThe first input line contains number n ( 2 \u2264 n \u2264 10 5 ) \u2014 amount of BolgenOS community members. The second line contains n space-separated integer numbers f i ( 1 \u2264 f i \u2264 n , i \u2260 f i ) \u2014 index of a person, to whom calls a person with index i .\n\nOutput\nIn the first line output one number \u2014 the minimum amount of instructions to add. Then output one of the possible variants to add these instructions into the scheme, one instruction in each line. If the solution is not unique, output any. Examples\n\nInput\n3 3 3 2\n\nOutput\n1 3 1\n\nInput\n7 2 3 1 3 4 4 1\n\nOutput\n3 2 5 2 6 3 7","1122":"D. Segments time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given n segments on the Ox-axis. You can drive a nail in any integer point on the Ox-axis line nail so, that all segments containing this point, are considered nailed down. If the nail passes through endpoint of some segment, this segment is considered to be nailed too. What is the smallest number of nails needed to nail all the segments down?\n\nInput\nThe first line of the input contains single integer number n ( 1 \u2264 n \u2264 1000 ) \u2014 amount of segments. Following n lines contain descriptions of the segments. Each description is a pair of integer numbers \u2014 endpoints coordinates. All the coordinates don't exceed 10000 by absolute value. Segments can degenarate to points.\n\nOutput\nThe first line should contain one integer number \u2014 the smallest number of nails needed to nail all the segments down. The second line should contain coordinates of driven nails separated by space in any order. If the answer is not unique, output any. Examples\n\nInput\n2 0 2 2 5\n\nOutput\n1 2\n\nInput\n5 0 3 4 2 4 8 8 10 7 7\n\nOutput\n3 7 10 3","1130":"A. Second Order Statistics time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Once Bob needed to find the second order statistics of a sequence of integer numbers. Lets choose each number from the sequence exactly once and sort them. The value on the second position is the second order statistics of the given sequence. In other words it is the smallest element strictly greater than the minimum. Help Bob solve this problem.\n\nInput\nThe first input line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 amount of numbers in the sequence. The second line contains n space-separated integer numbers \u2014 elements of the sequence. These numbers don't exceed 100 in absolute value.\n\nOutput\nIf the given sequence has the second order statistics, output this order statistics, otherwise output NO . Examples\n\nInput\n4 1 2 2 -4\n\nOutput\n1\n\nInput\n5 1 2 3 1 1\n\nOutput\n2","1138":"A. Little Elephant and Function time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Little Elephant enjoys recursive functions. This time he enjoys the sorting function. Let a is a permutation of an integers from 1 to n , inclusive, and a i denotes the i -th element of the permutation. The Little Elephant's recursive function f ( x ) , that sorts the first x permutation's elements, works as follows: If x = 1 , exit the function. Otherwise, call f ( x - 1) , and then make swap ( a x - 1 , a x ) (swap the x -th and ( x - 1) -th elements of a ). The Little Elephant's teacher believes that this function does not work correctly. But that-be do not get an F, the Little Elephant wants to show the performance of its function. Help him, find a permutation of numbers from 1 to n , such that after performing the Little Elephant's function (that is call f ( n ) ), the permutation will be sorted in ascending order.\n\nInput\nA single line contains integer n (1 \u2264 n \u2264 1000) \u2014 the size of permutation.\n\nOutput\nIn a single line print n distinct integers from 1 to n \u2014 the required permutation. Numbers in a line should be separated by spaces. It is guaranteed that the answer exists. Examples\n\nInput\n1\n\nOutput\n1\n\nInput\n2\n\nOutput\n2 1","1143":"A. Shooshuns and Sequence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day shooshuns found a sequence of n integers, written on a blackboard. The shooshuns can perform one operation with it, the operation consists of two steps: Find the number that goes k -th in the current sequence and add the same number to the end of the sequence; Delete the first number of the current sequence. The shooshuns wonder after how many operations all numbers on the board will be the same and whether all numbers will ever be the same.\n\nInput\nThe first line contains two space-separated integers n and k ( 1 \u2264 k \u2264 n \u2264 10 5 ). The second line contains n space-separated integers: a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 10 5 ) \u2014 the sequence that the shooshuns found.\n\nOutput\nPrint the minimum number of operations, required for all numbers on the blackboard to become the same. If it is impossible to achieve, print -1. Examples\n\nInput\n3 2 3 1 1\n\nOutput\n1\n\nInput\n3 1 3 1 1\n\nOutput\n-1\n\nNote\nIn the first test case after the first operation the blackboard will have sequence [1, 1, 1] . So, one operation is enough to make all numbers the same. Thus, the answer equals one. In the second test case the sequence will never consist of the same numbers. It will always contain at least two distinct numbers 3 and 1. Thus, the answer equals -1.","1152":"A. Parallelepiped time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You've got a rectangular parallelepiped with integer edge lengths. You know the areas of its three faces that have a common vertex. Your task is to find the sum of lengths of all 12 edges of this parallelepiped.\n\nInput\nThe first and the single line contains three space-separated integers \u2014 the areas of the parallelepiped's faces. The area's values are positive ( > 0) and do not exceed 10 4 . It is guaranteed that there exists at least one parallelepiped that satisfies the problem statement.\n\nOutput\nPrint a single number \u2014 the sum of all edges of the parallelepiped. Examples\n\nInput\n1 1 1\n\nOutput\n12\n\nInput\n4 6 6\n\nOutput\n28\n\nNote\nIn the first sample the parallelepiped has sizes 1 \u00d7 1 \u00d7 1 , in the second one \u2014 2 \u00d7 2 \u00d7 3 .","1160":"A. Dice Tower time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A dice is a cube, its faces contain distinct integers from 1 to 6 as black points. The sum of numbers at the opposite dice faces always equals 7. Please note that there are only two dice (these dices are mirror of each other) that satisfy the given constraints (both of them are shown on the picture on the left). Alice and Bob play dice. Alice has built a tower from n dice. We know that in this tower the adjacent dice contact with faces with distinct numbers. Bob wants to uniquely identify the numbers written on the faces of all dice, from which the tower is built. Unfortunately, Bob is looking at the tower from the face, and so he does not see all the numbers on the faces. Bob sees the number on the top of the tower and the numbers on the two adjacent sides (on the right side of the picture shown what Bob sees). Help Bob, tell whether it is possible to uniquely identify the numbers on the faces of all the dice in the tower, or not.\n\nInput\nThe first line contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of dice in the tower. The second line contains an integer x (1 \u2264 x \u2264 6) \u2014 the number Bob sees at the top of the tower. Next n lines contain two space-separated integers each: the i -th line contains numbers a i , b i (1 \u2264 a i , b i \u2264 6; a i \u2260 b i ) \u2014 the numbers Bob sees on the two sidelong faces of the i -th dice in the tower. Consider the dice in the tower indexed from top to bottom from 1 to n . That is, the topmost dice has index 1 (the dice whose top face Bob can see). It is guaranteed that it is possible to make a dice tower that will look as described in the input.\n\nOutput\nPrint \" YES \" (without the quotes), if it is possible to to uniquely identify the numbers on the faces of all the dice in the tower. If it is impossible, print \" NO \" (without the quotes). Examples\n\nInput\n3 6 3 2 5 4 2 4\n\nOutput\nYES\n\nInput\n3 3 2 6 4 1 5 3\n\nOutput\nNO","1162":"B. Effective Approach time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Once at a team training Vasya, Petya and Sasha got a problem on implementing linear search in an array. According to the boys, linear search works as follows. The array elements in a pre-selected order are in turn compared with the number that you need to find. Once you find the array element that is equal to the required one, the search ends. The efficiency of the algorithm is the number of performed comparisons. The fewer comparisons the linear search has made, the more effective it is. Vasya believes that a linear search would work better if it sequentially iterates through the elements, starting with the 1 -st one (in this problem we consider the elements of the array indexed from 1 to n ) and ending with the n -th one. And Petya says that Vasya is wrong: the search will need less comparisons if it sequentially iterates the elements starting from the n -th and ending with the 1 -st one. Sasha argues that the two approaches are equivalent. To finally begin the task, the teammates decided to settle the debate and compare the two approaches on an example. For this, they took an array that is a permutation of integers from 1 to n , and generated m queries of the form: find element with value b i in the array. They want to calculate for both approaches how many comparisons in total the linear search will need to respond to all queries. If the first search needs fewer comparisons, then the winner of the dispute is Vasya. If the second one does, then the winner is Petya. If both approaches make the same number of comparisons, then Sasha's got the upper hand. But the problem is, linear search is too slow. That's why the boys aren't going to find out who is right before the end of the training, unless you come in here. Help them to determine who will win the dispute.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 10 5 ) \u2014 the number of elements in the array. The second line contains n distinct space-separated integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 n ) \u2014 the elements of array. The third line contains integer m (1 \u2264 m \u2264 10 5 ) \u2014 the number of queries. The last line contains m space-separated integers b 1 , b 2 , ..., b m (1 \u2264 b i \u2264 n ) \u2014 the search queries.\n\nNote\nthat the queries can repeat.\n\nOutput\nPrint two integers, showing how many comparisons Vasya's approach needs and how many comparisons Petya's approach needs. Separate the numbers by spaces. Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin , cout streams or the %I64d specifier. Examples\n\nInput\n2 1 2 1 1\n\nOutput\n1 2\n\nInput\n2 2 1 1 1\n\nOutput\n2 1\n\nInput\n3 3 1 2 3 1 2 3\n\nOutput\n6 6\n\nNote\nIn the first sample Vasya's approach will make one comparison (it starts with the 1 -st element and immediately finds the required number), and Petya's approach makes two comparisons (first he compares with the 2 -nd array element, doesn't find the search item and compares with the 1 -st element). In the second sample, on the contrary, Vasya's approach will need two comparisons (first with 1 -st element, and then with the 2 -nd), and Petya's approach will find the required value in one comparison (the first comparison with the 2 -nd element).","1166":"A. Is your horseshoe on the other hoof? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Valera the Horse is going to the party with friends. He has been following the fashion trends for a while, and he knows that it is very popular to wear all horseshoes of different color. Valera has got four horseshoes left from the last year, but maybe some of them have the same color. In this case he needs to go to the store and buy some few more horseshoes, not to lose face in front of his stylish comrades. Fortunately, the store sells horseshoes of all colors under the sun and Valera has enough money to buy any four of them. However, in order to save the money, he would like to spend as little money as possible, so you need to help Valera and determine what is the minimum number of horseshoes he needs to buy to wear four horseshoes of different colors to a party.\n\nInput\nThe first line contains four space-separated integers s 1 , s 2 , s 3 , s 4 (1 \u2264 s 1 , s 2 , s 3 , s 4 \u2264 10 9 ) \u2014 the colors of horseshoes Valera has. Consider all possible colors indexed with integers.\n\nOutput\nPrint a single integer \u2014 the minimum number of horseshoes Valera needs to buy. Examples\n\nInput\n1 7 3 3\n\nOutput\n1\n\nInput\n7 7 7 7\n\nOutput\n3","1176":"A. You're Given a String... time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You're given a string of lower-case Latin letters. Your task is to find the length of its longest substring that can be met in the string at least twice. These occurrences can overlap (see sample test 2).\n\nInput\nThe first input line contains the string. It's guaranteed, that the string is non-empty, consists of lower-case Latin letters, and its length doesn't exceed 100.\n\nOutput\nOutput one number \u2014 length of the longest substring that can be met in the string at least twice. Examples\n\nInput\nabcd\n\nOutput\n0\n\nInput\nababa\n\nOutput\n3\n\nInput\nzzz\n\nOutput\n2","1178":"B. T-primes time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output We know that prime numbers are positive integers that have exactly two distinct positive divisors. Similarly, we'll call a positive integer t \u0422-prime , if t has exactly three distinct positive divisors. You are given an array of n positive integers. For each of them determine whether it is \u0422-prime or not.\n\nInput\nThe first line contains a single positive integer, n ( 1 \u2264 n \u2264 10 5 ), showing how many numbers are in the array. The next line contains n space-separated integers x i ( 1 \u2264 x i \u2264 10 12 ). Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is advised to use the cin , cout streams or the %I64d specifier.\n\nOutput\nPrint n lines: the i -th line should contain \" YES \" (without the quotes), if number x i is \u0422-prime, and \" NO \" (without the quotes), if it isn't. Examples\n\nInput\n3 4 5 6\n\nOutput\nYES NO NO\n\nNote\nThe given test has three numbers. The first number 4 has exactly three divisors \u2014 1, 2 and 4, thus the answer for this number is \" YES \". The second number 5 has two divisors (1 and 5), and the third number 6 has four divisors (1, 2, 3, 6), hence the answer for them is \" NO \".","1180":"A. Team time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day three best friends Petya, Vasya and Tonya decided to form a team and take part in programming contests. Participants are usually offered several problems during programming contests. Long before the start the friends decided that they will implement a problem if at least two of them are sure about the solution. Otherwise, the friends won't write the problem's solution. This contest offers n problems to the participants. For each problem we know, which friend is sure about the solution. Help the friends find the number of problems for which they will write a solution.\n\nInput\nThe first input line contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of problems in the contest. Then n lines contain three integers each, each integer is either 0 or 1 . If the first number in the line equals 1 , then Petya is sure about the problem's solution, otherwise he isn't sure. The second number shows Vasya's view on the solution, the third number shows Tonya's view. The numbers on the lines are separated by spaces.\n\nOutput\nPrint a single integer \u2014 the number of problems the friends will implement on the contest. Examples\n\nInput\n3 1 1 0 1 1 1 1 0 0\n\nOutput\n2\n\nInput\n2 1 0 0 0 1 1\n\nOutput\n1\n\nNote\nIn the first sample Petya and Vasya are sure that they know how to solve the first problem and all three of them know how to solve the second problem. That means that they will write solutions for these problems. Only Petya is sure about the solution for the third problem, but that isn't enough, so the friends won't take it. In the second sample the friends will only implement the second problem, as Vasya and Tonya are sure about the solution.","1195":"A. Perfect Permutation time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A permutation is a sequence of integers p 1 , p 2 , ..., p n , consisting of n distinct positive integers, each of them doesn't exceed n . Let's denote the i -th element of permutation p as p i . We'll call number n the size of permutation p 1 , p 2 , ..., p n . Nickolas adores permutations. He likes some permutations more than the others. He calls such permutations perfect. A perfect permutation is such permutation p that for any i (1 \u2264 i \u2264 n ) ( n is the permutation size) the following equations hold p p i = i and p i \u2260 i . Nickolas asks you to print any perfect permutation of size n for the given n .\n\nInput\nA single line contains a single integer n ( 1 \u2264 n \u2264 100 ) \u2014 the permutation size.\n\nOutput\nIf a perfect permutation of size n doesn't exist, print a single integer -1. Otherwise print n distinct integers from 1 to n , p 1 , p 2 , ..., p n \u2014 permutation p , that is perfect. Separate printed numbers by whitespaces. Examples\n\nInput\n1\n\nOutput\n-1\n\nInput\n2\n\nOutput\n2 1\n\nInput\n4\n\nOutput\n2 1 4 3","1197":"B. Non-square Equation time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Let's consider equation: x 2 + s ( x )\u00b7 x - n = 0, where x , n are positive integers, s ( x ) is the function, equal to the sum of digits of number x in the decimal number system. You are given an integer n , find the smallest positive integer root of equation x , or else determine that there are no such roots.\n\nInput\nA single line contains integer n (1 \u2264 n \u2264 10 18 ) \u2014 the equation parameter. Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin , cout streams or the %I64d specifier.\n\nOutput\nPrint -1, if the equation doesn't have integer positive roots. Otherwise print such smallest integer x ( x > 0) , that the equation given in the statement holds. Examples\n\nInput\n2\n\nOutput\n1\n\nInput\n110\n\nOutput\n10\n\nInput\n4\n\nOutput\n-1\n\nNote\nIn the first test case x = 1 is the minimum root. As s (1) = 1 and 1 2 + 1\u00b71 - 2 = 0 . In the second test case x = 10 is the minimum root. As s (10) = 1 + 0 = 1 and 10 2 + 1\u00b710 - 110 = 0 . In the third test case the equation has no roots.","1208":"B. Reading time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt Vasya is going to the Olympics in the city Ntown by train. The boy wants to read the textbook to prepare for the Olympics. He counted that he needed k hours for this. He also found that the light in the train changes every hour. The light is measured on a scale from 0 to 100, where 0 is very dark, and 100 is very light. Vasya has a train lighting schedule for all n hours of the trip \u2014 n numbers from 0 to 100 each (the light level in the first hour, the second hour and so on). During each of those hours he will either read the whole time, or not read at all. He wants to choose k hours to read a book, not necessarily consecutive, so that the minimum level of light among the selected hours were maximum. Vasya is very excited before the upcoming contest, help him choose reading hours.\n\nInput\nThe first input line contains two integers n and k ( 1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 n ) \u2014 the number of hours on the train and the number of hours to read, correspondingly. The second line contains n space-separated integers a i ( 0 \u2264 a i \u2264 100 ), a i is the light level at the i -th hour.\n\nOutput\nIn the first output line print the minimum light level Vasya will read at. In the second line print k distinct space-separated integers b 1 , b 2 , ..., b k , \u2014 the indexes of hours Vasya will read at ( 1 \u2264 b i \u2264 n ). The hours are indexed starting from 1. If there are multiple optimal solutions, print any of them. Print the numbers b i in an arbitrary order. Examples\n\nInput\n5 3 20 10 30 40 10\n\nOutput\n20 1 3 4\n\nInput\n6 5 90 20 35 40 60 100\n\nOutput\n35 1 3 4 5 6\n\nNote\nIn the first sample Vasya should read at the first hour (light 20 ), third hour (light 30 ) and at the fourth hour (light 40 ). The minimum light Vasya will have to read at is 20 .","1210":"A. Boy or Girl time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Those days, many boys use beautiful girls' photos as avatars in forums. So it is pretty hard to tell the gender of a user at the first glance. Last year, our hero went to a forum and had a nice chat with a beauty (he thought so). After that they talked very often and eventually they became a couple in the network. But yesterday, he came to see \"her\" in the real world and found out \"she\" is actually a very strong man! Our hero is very sad and he is too tired to love again now. So he came up with a way to recognize users' genders by their user names. This is his method: if the number of distinct characters in one's user name is odd, then he is a male, otherwise she is a female. You are given the string that denotes the user name, please help our hero to determine the gender of this user by his method.\n\nInput\nThe first line contains a non-empty string, that contains only lowercase English letters \u2014 the user name. This string contains at most 100 letters.\n\nOutput\nIf it is a female by our hero's method, print \" CHAT WITH HER! \" (without the quotes), otherwise, print \" IGNORE HIM! \" (without the quotes). Examples\n\nInput\nwjmzbmr\n\nOutput\nCHAT WITH HER!\n\nInput\nxiaodao\n\nOutput\nIGNORE HIM!\n\nInput\nsevenkplus\n\nOutput\nCHAT WITH HER!\n\nNote\nFor the first example. There are 6 distinct characters in \" wjmzbmr \". These characters are: \" w \", \" j \", \" m \", \" z \", \" b \", \" r \". So wjmzbmr is a female and you should print \" CHAT WITH HER! \".","1222":"A. Free Cash time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Valera runs a 24\/7 fast food cafe. He magically learned that next day n people will visit his cafe. For each person we know the arrival time: the i -th person comes exactly at h i hours m i minutes. The cafe spends less than a minute to serve each client, but if a client comes in and sees that there is no free cash, than he doesn't want to wait and leaves the cafe immediately. Valera is very greedy, so he wants to serve all n customers next day (and get more profit). However, for that he needs to ensure that at each moment of time the number of working cashes is no less than the number of clients in the cafe. Help Valera count the minimum number of cashes to work at his cafe next day, so that they can serve all visitors.\n\nInput\nThe first line contains a single integer n (1 \u2264 n \u2264 10 5 ) , that is the number of cafe visitors. Each of the following n lines has two space-separated integers h i and m i (0 \u2264 h i \u2264 23; 0 \u2264 m i \u2264 59) , representing the time when the i -th person comes into the cafe.\n\nNote\nthat the time is given in the chronological order. All time is given within one 24-hour period.\n\nOutput\nPrint a single integer \u2014 the minimum number of cashes, needed to serve all clients next day. Examples\n\nInput\n4 8 0 8 10 8 10 8 45\n\nOutput\n2\n\nInput\n3 0 12 10 11 22 22\n\nOutput\n1\n\nNote\nIn the first sample it is not enough one cash to serve all clients, because two visitors will come into cafe in 8:10. Therefore, if there will be one cash in cafe, then one customer will be served by it, and another one will not wait and will go away. In the second sample all visitors will come in different times, so it will be enough one cash.","1228":"A. Two Bags of Potatoes time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Valera had two bags of potatoes, the first of these bags contains x ( x \u2265 1) potatoes, and the second \u2014 y ( y \u2265 1) potatoes. Valera \u2014 very scattered boy, so the first bag of potatoes (it contains x potatoes) Valera lost. Valera remembers that the total amount of potatoes ( x + y ) in the two bags, firstly, was not gerater than n , and, secondly, was divisible by k . Help Valera to determine how many potatoes could be in the first bag. Print all such possible numbers in ascending order.\n\nInput\nThe first line of input contains three integers y , k , n ( 1 \u2264 y , k , n \u2264 10 9 ; \u2264 10 5 ).\n\nOutput\nPrint the list of whitespace-separated integers \u2014 all possible values of x in ascending order. You should print each possible value of x exactly once. If there are no such values of x print a single integer -1. Examples\n\nInput\n10 1 10\n\nOutput\n-1\n\nInput\n10 6 40\n\nOutput\n2 8 14 20 26","1232":"B. Big Segment time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A coordinate line has n segments, the i -th segment starts at the position l i and ends at the position r i . We will denote such a segment as [ l i , r i ] . You have suggested that one of the defined segments covers all others. In other words, there is such segment in the given set, which contains all other ones. Now you want to test your assumption. Find in the given set the segment which covers all other segments, and print its number. If such a segment doesn't exist, print -1. Formally we will assume that segment [ a , b ] covers segment [ c , d ] , if they meet this condition a \u2264 c \u2264 d \u2264 b .\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of segments. Next n lines contain the descriptions of the segments. The i -th line contains two space-separated integers l i , r i ( 1 \u2264 l i \u2264 r i \u2264 10 9 ) \u2014 the borders of the i -th segment. It is guaranteed that no two segments coincide.\n\nOutput\nPrint a single integer \u2014 the number of the segment that covers all other segments in the set. If there's no solution, print -1. The segments are numbered starting from 1 in the order in which they appear in the input. Examples\n\nInput\n3 1 1 2 2 3 3\n\nOutput\n-1\n\nInput\n6 1 5 2 3 1 10 7 10 7 7 10 10\n\nOutput\n3","1234":"E. Matrix time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Let's consider an n \u00d7 n square matrix, consisting of digits one and zero. We'll consider a matrix good , if it meets the following condition: in each row of the matrix all ones go in one group. That is, each row of the matrix looks like that 00...0011...1100...00 (or simply consists of zeroes if it has no ones). You are given matrix a of size n \u00d7 n , consisting of zeroes and ones. Your task is to determine whether you can get a good matrix b from it by rearranging the columns or not.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 500 ) \u2014 the size of matrix a . Each of n following lines contains n characters \" 0 \" and \" 1 \" \u2014 matrix a .\n\nNote\nthat the characters are written without separators.\n\nOutput\nPrint \" YES \" in the first line, if you can rearrange the matrix columns so as to get a good matrix b . In the next n lines print the good matrix b . If there are multiple answers, you are allowed to print any of them. If it is impossible to get a good matrix, print \" NO \". Examples\n\nInput\n6 100010 110110 011001 010010 000100 011001\n\nOutput\nYES 011000 111100 000111 001100 100000 000111\n\nInput\n3 110 101 011\n\nOutput\nNO","1236":"A. Dividing Orange time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Ms Swan bought an orange in a shop. The orange consisted of n \u00b7 k segments, numbered with integers from 1 to n \u00b7 k . There were k children waiting for Ms Swan at home. The children have recently learned about the orange and they decided to divide it between them. For that each child took a piece of paper and wrote the number of the segment that he would like to get: the i -th (1 \u2264 i \u2264 k ) child wrote the number a i (1 \u2264 a i \u2264 n \u00b7 k ) . All numbers a i accidentally turned out to be different. Now the children wonder, how to divide the orange so as to meet these conditions: each child gets exactly n orange segments; the i -th child gets the segment with number a i for sure; no segment goes to two children simultaneously. Help the children, divide the orange and fulfill the requirements, described above.\n\nInput\nThe first line contains two integers n , k (1 \u2264 n , k \u2264 30) . The second line contains k space-separated integers a 1 , a 2 , ..., a k (1 \u2264 a i \u2264 n \u00b7 k ) , where a i is the number of the orange segment that the i -th child would like to get. It is guaranteed that all numbers a i are distinct.\n\nOutput\nPrint exactly n \u00b7 k distinct integers. The first n integers represent the indexes of the segments the first child will get, the second n integers represent the indexes of the segments the second child will get, and so on. Separate the printed numbers with whitespaces. You can print a child's segment indexes in any order. It is guaranteed that the answer always exists. If there are multiple correct answers, print any of them. Examples\n\nInput\n2 2 4 1\n\nOutput\n2 4 1 3\n\nInput\n3 1 2\n\nOutput\n3 2 1","1246":"B. Internet Address time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya is an active Internet user. One day he came across an Internet resource he liked, so he wrote its address in the notebook. We know that the address of the written resource has format: <protocol>:\/\/<domain>.ru[\/<context>] where: <protocol> can equal either \" http \" (without the quotes) or \" ftp \" (without the quotes), <domain> is a non-empty string, consisting of lowercase English letters, the \/<context> part may not be present. If it is present, then <context> is a non-empty string, consisting of lowercase English letters. If string <context> isn't present in the address, then the additional character \" \/ \" isn't written. Thus, the address has either two characters \" \/ \" (the ones that go before the domain), or three (an extra one in front of the context). When the boy came home, he found out that the address he wrote in his notebook had no punctuation marks. Vasya must have been in a lot of hurry and didn't write characters \" : \", \" \/ \", \" . \". Help Vasya to restore the possible address of the recorded Internet resource.\n\nInput\nThe first line contains a non-empty string that Vasya wrote out in his notebook. This line consists of lowercase English letters only. It is guaranteed that the given string contains at most 50 letters. It is guaranteed that the given string can be obtained from some correct Internet resource address, described above.\n\nOutput\nPrint a single line \u2014 the address of the Internet resource that Vasya liked. If there are several addresses that meet the problem limitations, you are allowed to print any of them. Examples\n\nInput\nhttpsunrux\n\nOutput\nhttp:\/\/sun.ru\/x\n\nInput\nftphttprururu\n\nOutput\nftp:\/\/http.ru\/ruru\n\nNote\nIn the second sample there are two more possible answers: \" ftp:\/\/httpruru.ru \" and \" ftp:\/\/httpru.ru\/ru \".","1281":"B. Increase and Decrease time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Polycarpus has an array, consisting of n integers a 1 , a 2 , ..., a n . Polycarpus likes it when numbers in an array match. That's why he wants the array to have as many equal numbers as possible. For that Polycarpus performs the following operation multiple times: he chooses two elements of the array a i , a j ( i \u2260 j ) ; he simultaneously increases number a i by 1 and decreases number a j by 1 , that is, executes a i = a i + 1 and a j = a j - 1 . The given operation changes exactly two distinct array elements. Polycarpus can apply the described operation an infinite number of times. Now he wants to know what maximum number of equal array elements he can get if he performs an arbitrary number of such operation. Help Polycarpus.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the array size. The second line contains space-separated integers a 1 , a 2 , ..., a n ( | a i | \u2264 10 4 ) \u2014 the original array.\n\nOutput\nPrint a single integer \u2014 the maximum number of equal array elements he can get if he performs an arbitrary number of the given operation. Examples\n\nInput\n2 2 1\n\nOutput\n1\n\nInput\n3 1 4 1\n\nOutput\n3","1285":"A. Cupboards time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One foggy Stockholm morning, Karlsson decided to snack on some jam in his friend Lillebror Svantenson's house. Fortunately for Karlsson, there wasn't anybody in his friend's house. Karlsson was not going to be hungry any longer, so he decided to get some food in the house. Karlsson's gaze immediately fell on n wooden cupboards, standing in the kitchen. He immediately realized that these cupboards have hidden jam stocks. Karlsson began to fly greedily around the kitchen, opening and closing the cupboards' doors, grab and empty all the jars of jam that he could find. And now all jars of jam are empty, Karlsson has had enough and does not want to leave traces of his stay, so as not to let down his friend. Each of the cupboards has two doors: the left one and the right one. Karlsson remembers that when he rushed to the kitchen, all the cupboards' left doors were in the same position (open or closed), similarly, all the cupboards' right doors were in the same position (open or closed). Karlsson wants the doors to meet this condition as well by the time the family returns. Karlsson does not remember the position of all the left doors, also, he cannot remember the position of all the right doors. Therefore, it does not matter to him in what position will be all left or right doors. It is important to leave all the left doors in the same position, and all the right doors in the same position. For example, all the left doors may be closed, and all the right ones may be open. Karlsson needs one second to open or close a door of a cupboard. He understands that he has very little time before the family returns, so he wants to know the minimum number of seconds t , in which he is able to bring all the cupboard doors in the required position. Your task is to write a program that will determine the required number of seconds t .\n\nInput\nThe first input line contains a single integer n \u2014 the number of cupboards in the kitchen ( 2 \u2264 n \u2264 10 4 ). Then follow n lines, each containing two integers l i and r i (0 \u2264 l i , r i \u2264 1) . Number l i equals one, if the left door of the i -th cupboard is opened, otherwise number l i equals zero. Similarly, number r i equals one, if the right door of the i -th cupboard is opened, otherwise number r i equals zero. The numbers in the lines are separated by single spaces.\n\nOutput\nIn the only output line print a single integer t \u2014 the minimum number of seconds Karlsson needs to change the doors of all cupboards to the position he needs. Examples\n\nInput\n5 0 1 1 0 0 1 1 1 0 1\n\nOutput\n3","1289":"B. Chilly Willy time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Chilly Willy loves playing with numbers. He only knows prime numbers that are digits yet. These numbers are 2 , 3 , 5 and 7 . But Willy grew rather bored of such numbers, so he came up with a few games that were connected with them. Chilly Willy wants to find the minimum number of length n , such that it is simultaneously divisible by all numbers Willy already knows ( 2 , 3 , 5 and 7 ). Help him with that. A number's length is the number of digits in its decimal representation without leading zeros.\n\nInput\nA single input line contains a single integer n ( 1 \u2264 n \u2264 10 5 ).\n\nOutput\nPrint a single integer \u2014 the answer to the problem without leading zeroes, or \" -1 \" (without the quotes), if the number that meet the problem condition does not exist. Examples\n\nInput\n1\n\nOutput\n-1\n\nInput\n5\n\nOutput\n10080","1293":"A. IQ test time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Bob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given n numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob \u2014 to check his answers, he needs a program that among the given n numbers finds one that is different in evenness.\n\nInput\nThe first line contains integer n ( 3 \u2264 n \u2264 100 ) \u2014 amount of numbers in the task. The second line contains n space-separated natural numbers, not exceeding 100. It is guaranteed, that exactly one of these numbers differs from the others in evenness.\n\nOutput\nOutput index of number that differs from the others in evenness. Numbers are numbered from 1 in the input order. Examples\n\nInput\n5 2 4 7 8 10\n\nOutput\n3\n\nInput\n4 1 2 1 1\n\nOutput\n2","1299":"B. Restoring IPv6 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output An IPv6-address is a 128-bit number. For convenience, this number is recorded in blocks of 16 bits in hexadecimal record, the blocks are separated by colons \u2014 8 blocks in total, each block has four hexadecimal digits. Here is an example of the correct record of a IPv6 address: \" 0124:5678:90ab:cdef:0124:5678:90ab:cdef \". We'll call such format of recording an IPv6-address full . Besides the full record of an IPv6 address there is a short record format. The record of an IPv6 address can be shortened by removing one or more leading zeroes at the beginning of each block. However, each block should contain at least one digit in the short format. For example, the leading zeroes can be removed like that: \" a56f:00d3:0000:0124:0001:f19a:1000:0000 \" \u2192 \" a56f:d3:0:0124:01:f19a:1000:00 \". There are more ways to shorten zeroes in this IPv6 address. Some IPv6 addresses contain long sequences of zeroes. Continuous sequences of 16-bit zero blocks can be shortened to \" :: \". A sequence can consist of one or several consecutive blocks , with all 16 bits equal to 0. You can see examples of zero block shortenings below: \" a56f:00d3:0000:0124:0001:0000:0000:0000 \" \u2192 \" a56f:00d3:0000:0124:0001:: \"; \" a56f:0000:0000:0124:0001:0000:1234:0ff0 \" \u2192 \" a56f::0124:0001:0000:1234:0ff0 \"; \" a56f:0000:0000:0000:0001:0000:1234:0ff0 \" \u2192 \" a56f:0000::0000:0001:0000:1234:0ff0 \"; \" a56f:00d3:0000:0124:0001:0000:0000:0000 \" \u2192 \" a56f:00d3:0000:0124:0001::0000 \"; \" 0000:0000:0000:0000:0000:0000:0000:0000 \" \u2192 \" :: \". It is not allowed to shorten zero blocks in the address more than once. This means that the short record can't contain the sequence of characters \" :: \" more than once. Otherwise, it will sometimes be impossible to determine the number of zero blocks, each represented by a double colon. The format of the record of the IPv6 address after removing the leading zeroes and shortening the zero blocks is called short . You've got several short records of IPv6 addresses. Restore their full record.\n\nInput\nThe first line contains a single integer n \u2014 the number of records to restore ( 1 \u2264 n \u2264 100 ). Each of the following n lines contains a string \u2014 the short IPv6 addresses. Each string only consists of string characters \" 0123456789abcdef: \". It is guaranteed that each short address is obtained by the way that is described in the statement from some full IPv6 address.\n\nOutput\nFor each short IPv6 address from the input print its full record on a separate line. Print the full records for the short IPv6 addresses in the order, in which the short records follow in the input. Examples\n\nInput\n6 a56f:d3:0:0124:01:f19a:1000:00 a56f:00d3:0000:0124:0001:: a56f::0124:0001:0000:1234:0ff0 a56f:0000::0000:0001:0000:1234:0ff0 :: 0ea::4d:f4:6:0\n\nOutput\na56f:00d3:0000:0124:0001:f19a:1000:0000 a56f:00d3:0000:0124:0001:0000:0000:0000 a56f:0000:0000:0124:0001:0000:1234:0ff0 a56f:0000:0000:0000:0001:0000:1234:0ff0 0000:0000:0000:0000:0000:0000:0000:0000 00ea:0000:0000:0000:004d:00f4:0006:0000","1301":"A. Little Xor time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya likes arrays that consist of non-negative integers a lot. Recently his mom has presented him one such array consisting of n elements. Petya immediately decided to find there a segment of consecutive elements, such that the xor of all numbers from this segment was maximal possible. Help him with that. The xor operation is the bitwise exclusive \" OR \", that is denoted as \" xor \" in Pascal and \" ^ \" in C\/C++\/Java.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of elements in the array. The second line contains the space-separated integers from the array. All numbers are non-negative integers strictly less than 2 30 .\n\nOutput\nPrint a single integer \u2014 the required maximal xor of a segment of consecutive elements. Examples\n\nInput\n5 1 2 1 1 2\n\nOutput\n3\n\nInput\n3 1 2 7\n\nOutput\n7\n\nInput\n4 4 2 4 8\n\nOutput\n14\n\nNote\nIn the first sample one of the optimal segments is the segment that consists of the first and the second array elements, if we consider the array elements indexed starting from one. The second sample contains only one optimal segment, which contains exactly one array element (element with index three).","1303":"A. Boys and Girls time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt There are n boys and m girls studying in the class. They should stand in a line so that boys and girls alternated there as much as possible. Let's assume that positions in the line are indexed from left to right by numbers from 1 to n + m . Then the number of integers i ( 1 \u2264 i < n + m ) such that positions with indexes i and i + 1 contain children of different genders (position i has a girl and position i + 1 has a boy or vice versa) must be as large as possible. Help the children and tell them how to form the line.\n\nInput\nThe single line of the input contains two integers n and m ( 1 \u2264 n , m \u2264 100 ), separated by a space.\n\nOutput\nPrint a line of n + m characters. Print on the i -th position of the line character \" B \", if the i -th position of your arrangement should have a boy and \" G \", if it should have a girl. Of course, the number of characters \" B \" should equal n and the number of characters \" G \" should equal m . If there are multiple optimal solutions, print any of them. Examples\n\nInput\n3 3\n\nOutput\nGBGBGB\n\nInput\n4 2\n\nOutput\nBGBGBB\n\nNote\nIn the first sample another possible answer is BGBGBG . In the second sample answer BBGBGB is also optimal.","1321":"A. Cards with Numbers time limit per test 1 second memory limit per test 256 megabytes input input.txt output output.txt Petya has got 2 n cards, each card contains some integer. The numbers on the cards can be the same. Let's index all cards by consecutive integers from 1 to 2 n . We'll denote the number that is written on a card with number i , as a i . In order to play one entertaining game with his friends, Petya needs to split the cards into pairs so that each pair had equal numbers on the cards. Help Petya do that.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 3\u00b710 5 ). The second line contains the sequence of 2 n positive integers a 1 , a 2 , ..., a 2 n ( 1 \u2264 a i \u2264 5000 ) \u2014 the numbers that are written on the cards. The numbers on the line are separated by single spaces.\n\nOutput\nIf it is impossible to divide the cards into pairs so that cards in each pair had the same numbers, print on a single line integer -1 . But if the required partition exists, then print n pairs of integers, a pair per line \u2014 the indices of the cards that form the pairs. Separate the numbers on the lines by spaces. You can print the pairs and the numbers in the pairs in any order. If there are multiple solutions, print any of them. Examples\n\nInput\n3 20 30 10 30 20 10\n\nOutput\n4 2 1 5 6 3\n\nInput\n1 1 2\n\nOutput\n-1","1323":"A. Greg's Workout time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Greg is a beginner bodybuilder. Today the gym coach gave him the training plan. All it had was n integers a 1 , a 2 , ..., a n . These numbers mean that Greg needs to do exactly n exercises today. Besides, Greg should repeat the i -th in order exercise a i times. Greg now only does three types of exercises: \"chest\" exercises, \"biceps\" exercises and \"back\" exercises. Besides, his training is cyclic, that is, the first exercise he does is a \"chest\" one, the second one is \"biceps\", the third one is \"back\", the fourth one is \"chest\", the fifth one is \"biceps\", and so on to the n -th exercise. Now Greg wonders, which muscle will get the most exercise during his training. We know that the exercise Greg repeats the maximum number of times, trains the corresponding muscle the most. Help Greg, determine which muscle will get the most training.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 20) . The second line contains n integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 25) \u2014 the number of times Greg repeats the exercises.\n\nOutput\nPrint word \" chest \" (without the quotes), if the chest gets the most exercise, \" biceps \" (without the quotes), if the biceps gets the most exercise and print \" back \" (without the quotes) if the back gets the most exercise. It is guaranteed that the input is such that the answer to the problem is unambiguous . Examples\n\nInput\n2 2 8\n\nOutput\nbiceps\n\nInput\n3 5 1 10\n\nOutput\nback\n\nInput\n7 3 3 2 7 9 6 8\n\nOutput\nchest\n\nNote\nIn the first sample Greg does 2 chest, 8 biceps and zero back exercises, so the biceps gets the most exercises. In the second sample Greg does 5 chest, 1 biceps and 10 back exercises, so the back gets the most exercises. In the third sample Greg does 18 chest, 12 biceps and 8 back exercises, so the chest gets the most exercise.","1330":"A. Little Elephant and Bits time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Little Elephant has an integer a , written in the binary notation. He wants to write this number on a piece of paper. To make sure that the number a fits on the piece of paper, the Little Elephant ought to delete exactly one any digit from number a in the binary record. At that a new number appears. It consists of the remaining binary digits, written in the corresponding order (possible, with leading zeroes). The Little Elephant wants the number he is going to write on the paper to be as large as possible. Help him find the maximum number that he can obtain after deleting exactly one binary digit and print it in the binary notation.\n\nInput\nThe single line contains integer a , written in the binary notation without leading zeroes. This number contains more than 1 and at most 10 5 digits.\n\nOutput\nIn the single line print the number that is written without leading zeroes in the binary notation \u2014 the answer to the problem. Examples\n\nInput\n101\n\nOutput\n11\n\nInput\n110010\n\nOutput\n11010\n\nNote\nIn the first sample the best strategy is to delete the second digit. That results in number 11 2 = 3 10 . In the second sample the best strategy is to delete the third or fourth digits \u2014 that results in number 11010 2 = 26 10 .","1347":"B. Little Elephant and Magic Square time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Elephant loves magic squares very much. A magic square is a 3 \u00d7 3 table, each cell contains some positive integer. At that the sums of integers in all rows, columns and diagonals of the table are equal. The figure below shows the magic square, the sum of integers in all its rows, columns and diagonals equals 15. The Little Elephant remembered one magic square. He started writing this square on a piece of paper, but as he wrote, he forgot all three elements of the main diagonal of the magic square. Fortunately, the Little Elephant clearly remembered that all elements of the magic square did not exceed 10 5 . Help the Little Elephant, restore the original magic square, given the Elephant's notes.\n\nInput\nThe first three lines of the input contain the Little Elephant's notes. The first line contains elements of the first row of the magic square. The second line contains the elements of the second row, the third line is for the third row. The main diagonal elements that have been forgotten by the Elephant are represented by zeroes. It is guaranteed that the notes contain exactly three zeroes and they are all located on the main diagonal. It is guaranteed that all positive numbers in the table do not exceed 10 5 .\n\nOutput\nPrint three lines, in each line print three integers \u2014 the Little Elephant's magic square. If there are multiple magic squares, you are allowed to print any of them.\n\nNote\nthat all numbers you print must be positive and not exceed 10 5 . It is guaranteed that there exists at least one magic square that meets the conditions. Examples\n\nInput\n0 1 1 1 0 1 1 1 0\n\nOutput\n1 1 1 1 1 1 1 1 1\n\nInput\n0 3 6 5 0 5 4 7 0\n\nOutput\n6 3 6 5 5 5 4 7 4","1351":"A. Almost Prime time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A number is called almost prime if it has exactly two distinct prime divisors. For example, numbers 6, 18, 24 are almost prime, while 4, 8, 9, 42 are not. Find the amount of almost prime numbers which are between 1 and n , inclusive.\n\nInput\nInput contains one integer number n ( 1 \u2264 n \u2264 3000 ).\n\nOutput\nOutput the amount of almost prime numbers between 1 and n , inclusive. Examples\n\nInput\n10\n\nOutput\n2\n\nInput\n21\n\nOutput\n8","1361":"A. Adding Digits time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has got two number: a and b . However, Vasya finds number a too short. So he decided to repeat the operation of lengthening number a n times. One operation of lengthening a number means adding exactly one digit to the number (in the decimal notation) to the right provided that the resulting number is divisible by Vasya's number b . If it is impossible to obtain the number which is divisible by b , then the lengthening operation cannot be performed. Your task is to help Vasya and print the number he can get after applying the lengthening operation to number a n times.\n\nInput\nThe first line contains three integers: a , b , n (1 \u2264 a , b , n \u2264 10 5 ) .\n\nOutput\nIn a single line print the integer without leading zeros, which Vasya can get when he applies the lengthening operations to number a n times. If no such number exists, then print number -1. If there are multiple possible answers, print any of them. Examples\n\nInput\n5 4 5\n\nOutput\n524848\n\nInput\n12 11 1\n\nOutput\n121\n\nInput\n260 150 10\n\nOutput\n-1","1363":"A. Roma and Lucky Numbers time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Roma (a popular Russian name that means 'Roman') loves the Little Lvov Elephant's lucky numbers. Let us remind you that lucky numbers are positive integers whose decimal representation only contains lucky digits 4 and 7 . For example, numbers 47 , 744 , 4 are lucky and 5 , 17 , 467 are not. Roma's got n positive integers. He wonders, how many of those integers have not more than k lucky digits? Help him, write the program that solves the problem.\n\nInput\nThe first line contains two integers n , k (1 \u2264 n , k \u2264 100) . The second line contains n integers a i (1 \u2264 a i \u2264 10 9 ) \u2014 the numbers that Roma has. The numbers in the lines are separated by single spaces.\n\nOutput\nIn a single line print a single integer \u2014 the answer to the problem. Examples\n\nInput\n3 4 1 2 4\n\nOutput\n3\n\nInput\n3 2 447 44 77\n\nOutput\n2\n\nNote\nIn the first sample all numbers contain at most four lucky digits, so the answer is 3 . In the second sample number 447 doesn't fit in, as it contains more than two lucky digits. All other numbers are fine, so the answer is 2 .","1369":"A. Beautiful Matrix time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You've got a 5 \u00d7 5 matrix, consisting of 24 zeroes and a single number one. Let's index the matrix rows by numbers from 1 to 5 from top to bottom, let's index the matrix columns by numbers from 1 to 5 from left to right. In one move, you are allowed to apply one of the two following transformations to the matrix: Swap two neighboring matrix rows, that is, rows with indexes i and i + 1 for some integer i (1 \u2264 i < 5) . Swap two neighboring matrix columns, that is, columns with indexes j and j + 1 for some integer j (1 \u2264 j < 5) . You think that a matrix looks beautiful , if the single number one of the matrix is located in its middle (in the cell that is on the intersection of the third row and the third column). Count the minimum number of moves needed to make the matrix beautiful.\n\nInput\nThe input consists of five lines, each line contains five integers: the j -th integer in the i -th line of the input represents the element of the matrix that is located on the intersection of the i -th row and the j -th column. It is guaranteed that the matrix consists of 24 zeroes and a single number one.\n\nOutput\nPrint a single integer \u2014 the minimum number of moves needed to make the matrix beautiful. Examples\n\nInput\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nOutput\n3\n\nInput\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n\nOutput\n1","1377":"A. Colorful Stones (Simplified Edition) time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There is a sequence of colorful stones. The color of each stone is one of red, green, or blue. You are given a string s . The i -th (1-based) character of s represents the color of the i -th stone. If the character is \" R \", \" G \", or \" B \", the color of the corresponding stone is red, green, or blue, respectively. Initially Squirrel Liss is standing on the first stone. You perform instructions one or more times. Each instruction is one of the three types: \" RED \", \" GREEN \", or \" BLUE \". After an instruction c , if Liss is standing on a stone whose colors is c , Liss will move one stone forward, else she will not move. You are given a string t . The number of instructions is equal to the length of t , and the i -th character of t represents the i -th instruction. Calculate the final position of Liss (the number of the stone she is going to stand on in the end) after performing all the instructions, and print its 1-based position. It is guaranteed that Liss don't move out of the sequence.\n\nInput\nThe input contains two lines. The first line contains the string s ( 1 \u2264 | s | \u2264 50 ). The second line contains the string t ( 1 \u2264 | t | \u2264 50 ). The characters of each string will be one of \" R \", \" G \", or \" B \". It is guaranteed that Liss don't move out of the sequence.\n\nOutput\nPrint the final 1-based position of Liss in a single line. Examples\n\nInput\nRGB RRR\n\nOutput\n2\n\nInput\nRRRBGBRBBB BBBRR\n\nOutput\n3\n\nInput\nBRRBGBRGRBGRGRRGGBGBGBRGBRGRGGGRBRRRBRBBBGRRRGGBBB BBRBGGRGRGBBBRBGRBRBBBBRBRRRBGBBGBBRRBBGGRBRRBRGRB\n\nOutput\n15","1378":"B. Roadside Trees (Simplified Edition) time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Squirrel Liss loves nuts. There are n trees (numbered 1 to n from west to east) along a street and there is a delicious nut on the top of each tree. The height of the tree i is h i . Liss wants to eat all nuts. Now Liss is on the root of the tree with the number 1 . In one second Liss can perform one of the following actions: Walk up or down one unit on a tree. Eat a nut on the top of the current tree. Jump to the next tree. In this action the height of Liss doesn't change. More formally, when Liss is at height h of the tree i ( 1 \u2264 i \u2264 n - 1 ), she jumps to height h of the tree i + 1 . This action can't be performed if h > h i + 1 . Compute the minimal time (in seconds) required to eat all nuts.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of trees. Next n lines contains the height of trees: i -th line contains an integer h i ( 1 \u2264 h i \u2264 10 4 ) \u2014 the height of the tree with the number i .\n\nOutput\nPrint a single integer \u2014 the minimal time required to eat all nuts in seconds. Examples\n\nInput\n2 1 2\n\nOutput\n5\n\nInput\n5 2 1 2 1 1\n\nOutput\n14","1415":"A. Stones on the Table time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There are n stones on the table in a row, each of them can be red, green or blue. Count the minimum number of stones to take from the table so that any two neighboring stones had different colors. Stones in a row are considered neighboring if there are no other stones between them.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 50) \u2014 the number of stones on the table. The next line contains string s , which represents the colors of the stones. We'll consider the stones in the row numbered from 1 to n from left to right. Then the i -th character s equals \" R \", if the i -th stone is red, \" G \", if it's green and \" B \", if it's blue.\n\nOutput\nPrint a single integer \u2014 the answer to the problem. Examples\n\nInput\n3 RRG\n\nOutput\n1\n\nInput\n5 RRRRR\n\nOutput\n4\n\nInput\n4 BRBG\n\nOutput\n0","1417":"B. Queue at the School time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output During the break the schoolchildren, boys and girls, formed a queue of n people in the canteen. Initially the children stood in the order they entered the canteen. However, after a while the boys started feeling awkward for standing in front of the girls in the queue and they started letting the girls move forward each second. Let's describe the process more precisely. Let's say that the positions in the queue are sequentially numbered by integers from 1 to n , at that the person in the position number 1 is served first. Then, if at time x a boy stands on the i -th position and a girl stands on the ( i + 1) -th position, then at time x + 1 the i -th position will have a girl and the ( i + 1) -th position will have a boy. The time is given in seconds. You've got the initial position of the children, at the initial moment of time. Determine the way the queue is going to look after t seconds.\n\nInput\nThe first line contains two integers n and t (1 \u2264 n , t \u2264 50) , which represent the number of children in the queue and the time after which the queue will transform into the arrangement you need to find. The next line contains string s , which represents the schoolchildren's initial arrangement. If the i -th position in the queue contains a boy, then the i -th character of string s equals \" B \", otherwise the i -th character equals \" G \".\n\nOutput\nPrint string a , which describes the arrangement after t seconds. If the i -th position has a boy after the needed time, then the i -th character a must equal \" B \", otherwise it must equal \" G \". Examples\n\nInput\n5 1 BGGBG\n\nOutput\nGBGGB\n\nInput\n5 2 BGGBG\n\nOutput\nGGBGB\n\nInput\n4 1 GGGB\n\nOutput\nGGGB","1421":"A. Subtractions time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You've got two numbers. As long as they are both larger than zero, they go through the same operation: subtract the lesser number from the larger one. If they equal substract one number from the another. For example, one operation transforms pair (4,17) to pair (4,13), it transforms (5,5) to (0,5). You've got some number of pairs ( a i , b i ). How many operations will be performed for each of them?\n\nInput\nThe first line contains the number of pairs n ( 1 \u2264 n \u2264 1000 ). Then follow n lines, each line contains a pair of positive integers a i , b i ( 1 \u2264 a i , b i \u2264 10 9 ).\n\nOutput\nPrint the sought number of operations for each pair on a single line. Examples\n\nInput\n2 4 17 7 987654321\n\nOutput\n8 141093479","1427":"B. Buttons time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Manao is trying to open a rather challenging lock. The lock has n buttons on it and to open it, you should press the buttons in a certain order to open the lock. When you push some button, it either stays pressed into the lock (that means that you've guessed correctly and pushed the button that goes next in the sequence), or all pressed buttons return to the initial position. When all buttons are pressed into the lock at once, the lock opens. Consider an example with three buttons. Let's say that the opening sequence is: {2, 3, 1}. If you first press buttons 1 or 3, the buttons unpress immediately. If you first press button 2, it stays pressed. If you press 1 after 2, all buttons unpress. If you press 3 after 2, buttons 3 and 2 stay pressed. As soon as you've got two pressed buttons, you only need to press button 1 to open the lock. Manao doesn't know the opening sequence. But he is really smart and he is going to act in the optimal way. Calculate the number of times he's got to push a button in order to open the lock in the worst-case scenario.\n\nInput\nA single line contains integer n ( 1 \u2264 n \u2264 2000 ) \u2014 the number of buttons the lock has.\n\nOutput\nIn a single line print the number of times Manao has to push a button in the worst-case scenario. Examples\n\nInput\n2\n\nOutput\n3\n\nInput\n3\n\nOutput\n7\n\nNote\nConsider the first test sample. Manao can fail his first push and push the wrong button. In this case he will already be able to guess the right one with his second push. And his third push will push the second right button. Thus, in the worst-case scenario he will only need 3 pushes.","1429":"A. Games time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Manao works on a sports TV. He's spent much time watching the football games of some country. After a while he began to notice different patterns. For example, each team has two sets of uniforms: home uniform and guest uniform. When a team plays a game at home, the players put on the home uniform. When a team plays as a guest on somebody else's stadium, the players put on the guest uniform. The only exception to that rule is: when the home uniform color of the host team matches the guests' uniform, the host team puts on its guest uniform as well. For each team the color of the home and guest uniform is different. There are n teams taking part in the national championship. The championship consists of n \u00b7( n - 1) games: each team invites each other team to its stadium. At this point Manao wondered: how many times during the championship is a host team going to put on the guest uniform?\n\nNote\nthat the order of the games does not affect this number. You know the colors of the home and guest uniform for each team. For simplicity, the colors are numbered by integers in such a way that no two distinct colors have the same number. Help Manao find the answer to his question.\n\nInput\nThe first line contains an integer n ( 2 \u2264 n \u2264 30 ). Each of the following n lines contains a pair of distinct space-separated integers h i , a i ( 1 \u2264 h i , a i \u2264 100 ) \u2014 the colors of the i -th team's home and guest uniforms, respectively.\n\nOutput\nIn a single line print the number of games where the host team is going to play in the guest uniform. Examples\n\nInput\n3 1 2 2 4 3 4\n\nOutput\n1\n\nInput\n4 100 42 42 100 5 42 100 5\n\nOutput\n5\n\nInput\n2 1 2 1 2\n\nOutput\n0\n\nNote\nIn the first test case the championship consists of 6 games. The only game with the event in question is the game between teams 2 and 1 on the stadium of team 2. In the second test sample the host team will have to wear guest uniform in the games between teams: 1 and 2, 2 and 1, 2 and 3, 3 and 4, 4 and 2 (the host team is written first).","1433":"A. Next Test time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output \u00abPolygon\u00bb is a system which allows to create programming tasks in a simple and professional way. When you add a test to the problem, the corresponding form asks you for the test index. As in most cases it is clear which index the next test will have, the system suggests the default value of the index. It is calculated as the smallest positive integer which is not used as an index for some previously added test. You are to implement this feature. Create a program which determines the default index of the next test, given the indexes of the previously added tests.\n\nInput\nThe first line contains one integer n ( 1 \u2264 n \u2264 3000 ) \u2014 the amount of previously added tests. The second line contains n distinct integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 3000 ) \u2014 indexes of these tests.\n\nOutput\nOutput the required default value for the next test index. Examples\n\nInput\n3 1 7 2\n\nOutput\n3","1435":"A. Fancy Fence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Emuskald needs a fence around his farm, but he is too lazy to build it himself. So he purchased a fence-building robot. He wants the fence to be a regular polygon. The robot builds the fence along a single path, but it can only make fence corners at a single angle a . Will the robot be able to build the fence Emuskald wants? In other words, is there a regular polygon which angles are equal to a ?\n\nInput\nThe first line of input contains an integer t ( 0 < t < 180 ) \u2014 the number of tests. Each of the following t lines contains a single integer a ( 0 < a < 180 ) \u2014 the angle the robot can make corners at measured in degrees.\n\nOutput\nFor each test, output on a single line \" YES \" (without quotes), if the robot can build a fence Emuskald wants, and \" NO \" (without quotes), if it is impossible. Examples\n\nInput\n3 30 60 90\n\nOutput\nNO YES YES\n\nNote\nIn the first test case, it is impossible to build the fence, since there is no regular polygon with angle . In the second test case, the fence is a regular triangle, and in the last test case \u2014 a square.","1451":"A. Beautiful Year time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output It seems like the year of 2013 came only yesterday. Do you know a curious fact? The year of 2013 is the first year after the old 1987 with only distinct digits. Now you are suggested to solve the following problem: given a year number, find the minimum year number which is strictly larger than the given one and has only distinct digits.\n\nInput\nThe single line contains integer y (1000 \u2264 y \u2264 9000) \u2014 the year number.\n\nOutput\nPrint a single integer \u2014 the minimum year number that is strictly larger than y and all it's digits are distinct. It is guaranteed that the answer exists. Examples\n\nInput\n1987\n\nOutput\n2013\n\nInput\n2013\n\nOutput\n2014","1459":"A. Dima and Staircase time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Dima's got a staircase that consists of n stairs. The first stair is at height a 1 , the second one is at a 2 , the last one is at a n ( 1 \u2264 a 1 \u2264 a 2 \u2264 ... \u2264 a n ). Dima decided to play with the staircase, so he is throwing rectangular boxes at the staircase from above. The i -th box has width w i and height h i . Dima throws each box vertically down on the first w i stairs of the staircase, that is, the box covers stairs with numbers 1, 2, ..., w i . Each thrown box flies vertically down until at least one of the two following events happen: the bottom of the box touches the top of a stair; the bottom of the box touches the top of a box, thrown earlier. We only consider touching of the horizontal sides of stairs and boxes, at that touching with the corners isn't taken into consideration. Specifically, that implies that a box with width w i cannot touch the stair number w i + 1 . You are given the description of the staircase and the sequence in which Dima threw the boxes at it. For each box, determine how high the bottom of the box after landing will be. Consider a box to fall after the previous one lands.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 10 5 ) \u2014 the number of stairs in the staircase. The second line contains a non-decreasing sequence, consisting of n integers, a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 10 9 ; a i \u2264 a i + 1 ) . The next line contains integer m (1 \u2264 m \u2264 10 5 ) \u2014 the number of boxes. Each of the following m lines contains a pair of integers w i , h i (1 \u2264 w i \u2264 n ; 1 \u2264 h i \u2264 10 9 ) \u2014 the size of the i -th thrown box. The numbers in the lines are separated by spaces.\n\nOutput\nPrint m integers \u2014 for each box the height, where the bottom of the box will be after landing. Print the answers for the boxes in the order, in which the boxes are given in the input. Please, do not use the %lld specifier to read or write 64-bit integers in C++ . It is preferred to use the cin , cout streams or the %I64d specifier. Examples\n\nInput\n5 1 2 3 6 6 4 1 1 3 1 1 1 4 3\n\nOutput\n1 3 4 6\n\nInput\n3 1 2 3 2 1 1 3 1\n\nOutput\n1 3\n\nInput\n1 1 5 1 2 1 10 1 10 1 10 1 10\n\nOutput\n1 3 13 23 33\n\nNote\nThe first sample are shown on the picture.","1461":"A. Lights Out time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Lenny is playing a game on a 3 \u00d7 3 grid of lights. In the beginning of the game all lights are switched on. Pressing any of the lights will toggle it and all side-adjacent lights. The goal of the game is to switch all the lights off. We consider the toggling as follows: if the light was switched on then it will be switched off, if it was switched off then it will be switched on. Lenny has spent some time playing with the grid and by now he has pressed each light a certain number of times. Given the number of times each light is pressed, you have to print the current state of each light.\n\nInput\nThe input consists of three rows. Each row contains three integers each between 0 to 100 inclusive. The j -th number in the i -th row is the number of times the j -th light of the i -th row of the grid is pressed.\n\nOutput\nPrint three lines, each containing three characters. The j -th character of the i -th line is \" 1 \" if and only if the corresponding light is switched on, otherwise it's \" 0 \". Examples\n\nInput\n1 0 0 0 0 0 0 0 1\n\nOutput\n001 010 100\n\nInput\n1 0 1 8 8 8 2 0 3\n\nOutput\n010 011 100","1467":"B. Little Girl and Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Little Girl loves problems on games very much. Here's one of them. Two players have got a string s , consisting of lowercase English letters. They play a game that is described by the following rules: The players move in turns; In one move the player can remove an arbitrary letter from string s . If the player before his turn can reorder the letters in string s so as to get a palindrome, this player wins. A palindrome is a string that reads the same both ways (from left to right, and vice versa). For example, string \" abba \" is a palindrome and string \" abc \" isn't. Determine which player will win, provided that both sides play optimally well \u2014 the one who moves first or the one who moves second.\n\nInput\nThe input contains a single line, containing string s ( 1 \u2264 | s | \u2264 10 3 ). String s consists of lowercase English letters.\n\nOutput\nIn a single line print word \" First \" if the first player wins (provided that both players play optimally well). Otherwise, print word \" Second \". Print the words without the quotes. Examples\n\nInput\naba\n\nOutput\nFirst\n\nInput\nabca\n\nOutput\nSecond","1469":"A. Learning Languages time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The \"BerCorp\" company has got n employees. These employees can use m approved official languages for the formal correspondence. The languages are numbered with integers from 1 to m . For each employee we have the list of languages, which he knows. This list could be empty, i. e. an employee may know no official languages. But the employees are willing to learn any number of official languages, as long as the company pays their lessons. A study course in one language for one employee costs 1 berdollar. Find the minimum sum of money the company needs to spend so as any employee could correspond to any other one (their correspondence can be indirect, i. e. other employees can help out translating).\n\nInput\nThe first line contains two integers n and m ( 2 \u2264 n , m \u2264 100 ) \u2014 the number of employees and the number of languages. Then n lines follow \u2014 each employee's language list. At the beginning of the i -th line is integer k i ( 0 \u2264 k i \u2264 m ) \u2014 the number of languages the i -th employee knows. Next, the i -th line contains k i integers \u2014 a ij ( 1 \u2264 a ij \u2264 m ) \u2014 the identifiers of languages the i -th employee knows. It is guaranteed that all the identifiers in one list are distinct.\n\nNote\nthat an employee may know zero languages. The numbers in the lines are separated by single spaces.\n\nOutput\nPrint a single integer \u2014 the minimum amount of money to pay so that in the end every employee could write a letter to every other one (other employees can help out translating). Examples\n\nInput\n5 5 1 2 2 2 3 2 3 4 2 4 5 1 5\n\nOutput\n0\n\nInput\n8 7 0 3 1 2 3 1 1 2 5 4 2 6 7 1 3 2 7 4 1 1\n\nOutput\n2\n\nInput\n2 2 1 2 0\n\nOutput\n1\n\nNote\nIn the second sample the employee 1 can learn language 2 , and employee 8 can learn language 4 . In the third sample employee 2 must learn language 2 .","1471":"A. Circle Line time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The circle line of the Berland subway has n stations. We know the distances between all pairs of neighboring stations: d 1 is the distance between the 1 -st and the 2 -nd station; d 2 is the distance between the 2 -nd and the 3 -rd station; ... d n - 1 is the distance between the n - 1 -th and the n -th station; d n is the distance between the n -th and the 1 -st station. The trains go along the circle line in both directions. Find the shortest distance between stations with numbers s and t .\n\nInput\nThe first line contains integer n ( 3 \u2264 n \u2264 100 ) \u2014 the number of stations on the circle line. The second line contains n integers d 1 , d 2 , ..., d n ( 1 \u2264 d i \u2264 100 ) \u2014 the distances between pairs of neighboring stations. The third line contains two integers s and t ( 1 \u2264 s , t \u2264 n ) \u2014 the numbers of stations, between which you need to find the shortest distance. These numbers can be the same. The numbers in the lines are separated by single spaces.\n\nOutput\nPrint a single number \u2014 the length of the shortest path between stations number s and t . Examples\n\nInput\n4 2 3 4 9 1 3\n\nOutput\n5\n\nInput\n4 5 8 2 100 4 1\n\nOutput\n15\n\nInput\n3 1 1 1 3 1\n\nOutput\n1\n\nInput\n3 31 41 59 1 1\n\nOutput\n0\n\nNote\nIn the first sample the length of path 1 \u2192 2 \u2192 3 equals 5, the length of path 1 \u2192 4 \u2192 3 equals 13. In the second sample the length of path 4 \u2192 1 is 100, the length of path 4 \u2192 3 \u2192 2 \u2192 1 is 15. In the third sample the length of path 3 \u2192 1 is 1, the length of path 3 \u2192 2 \u2192 1 is 2. In the fourth sample the numbers of stations are the same, so the shortest distance equals 0.","1477":"B. Books time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output When Valera has got some free time, he goes to the library to read some books. Today he's got t free minutes to read. That's why Valera took n books in the library and for each book he estimated the time he is going to need to read it. Let's number the books by integers from 1 to n . Valera needs a i minutes to read the i -th book. Valera decided to choose an arbitrary book with number i and read the books one by one, starting from this book. In other words, he will first read book number i , then book number i + 1 , then book number i + 2 and so on. He continues the process until he either runs out of the free time or finishes reading the n -th book. Valera reads each book up to the end, that is, he doesn't start reading the book if he doesn't have enough free time to finish reading it. Print the maximum number of books Valera can read.\n\nInput\nThe first line contains two integers n and t (1 \u2264 n \u2264 10 5 ; 1 \u2264 t \u2264 10 9 ) \u2014 the number of books and the number of free minutes Valera's got. The second line contains a sequence of n integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 10 4 ) , where number a i shows the number of minutes that the boy needs to read the i -th book.\n\nOutput\nPrint a single integer \u2014 the maximum number of books Valera can read. Examples\n\nInput\n4 5 3 1 2 1\n\nOutput\n3\n\nInput\n3 3 2 2 3\n\nOutput\n1","1479":"B. pSort time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day n cells of some array decided to play the following game. Initially each cell contains a number which is equal to it's ordinal number (starting from 1 ). Also each cell determined it's favourite number. On it's move i -th cell can exchange it's value with the value of some other j -th cell, if | i - j | = d i , where d i is a favourite number of i -th cell. Cells make moves in any order, the number of moves is unlimited. The favourite number of each cell will be given to you. You will also be given a permutation of numbers from 1 to n . You are to determine whether the game could move to this state.\n\nInput\nThe first line contains positive integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of cells in the array. The second line contains n distinct integers from 1 to n \u2014 permutation. The last line contains n integers from 1 to n \u2014 favourite numbers of the cells.\n\nOutput\nIf the given state is reachable in the described game, output YES , otherwise NO . Examples\n\nInput\n5 5 4 3 2 1 1 1 1 1 1\n\nOutput\nYES\n\nInput\n7 4 3 5 1 2 7 6 4 6 6 1 6 6 1\n\nOutput\nNO\n\nInput\n7 4 2 5 1 3 7 6 4 6 6 1 6 6 1\n\nOutput\nYES","1482":"A. Word Capitalization time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Capitalization is writing a word with its first letter as a capital letter. Your task is to capitalize the given word. Note, that during capitalization all the letters except the first one remains unchanged.\n\nInput\nA single line contains a non-empty word. This word consists of lowercase and uppercase English letters. The length of the word will not exceed 10 3 .\n\nOutput\nOutput the given word after capitalization. Examples\n\nInput\nApPLe\n\nOutput\nApPLe\n\nInput\nkonjac\n\nOutput\nKonjac","1484":"D. Maximum Xor Secondary time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Bike loves looking for the second maximum element in the sequence. The second maximum element in the sequence of distinct numbers x 1 , x 2 , ..., x k ( k > 1) is such maximum element x j , that the following inequality holds: . The lucky number of the sequence of distinct positive integers x 1 , x 2 , ..., x k ( k > 1) is the number that is equal to the bitwise excluding OR of the maximum element of the sequence and the second maximum element of the sequence. You've got a sequence of distinct positive integers s 1 , s 2 , ..., s n ( n > 1) . Let's denote sequence s l , s l + 1 , ..., s r as s [ l .. r ] (1 \u2264 l < r \u2264 n ) . Your task is to find the maximum number among all lucky numbers of sequences s [ l .. r ] .\n\nNote\nthat as all numbers in sequence s are distinct, all the given definitions make sence.\n\nInput\nThe first line contains integer n (1 < n \u2264 10 5 ) . The second line contains n distinct integers s 1 , s 2 , ..., s n (1 \u2264 s i \u2264 10 9 ) .\n\nOutput\nPrint a single integer \u2014 the maximum lucky number among all lucky numbers of sequences s [ l .. r ] . Examples\n\nInput\n5 5 2 1 4 3\n\nOutput\n7\n\nInput\n5 9 8 3 5 7\n\nOutput\n15\n\nNote\nFor the first sample you can choose s [4..5] = {4, 3} and its lucky number is (4 xor 3) = 7 . You can also choose s [1..2] . For the second sample you must choose s [2..5] = {8, 3, 5, 7} .","1498":"A. Bit++ time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The classic programming language of Bitland is Bit++. This language is so peculiar and complicated. The language is that peculiar as it has exactly one variable, called x . Also, there are two operations: Operation ++ increases the value of variable x by 1. Operation -- decreases the value of variable x by 1. A statement in language Bit++ is a sequence, consisting of exactly one operation and one variable x . The statement is written without spaces, that is, it can only contain characters \" + \", \" - \", \" X \". Executing a statement means applying the operation it contains. A programme in Bit++ is a sequence of statements, each of them needs to be executed. Executing a programme means executing all the statements it contains. You're given a programme in language Bit++. The initial value of x is 0 . Execute the programme and find its final value (the value of the variable when this programme is executed).\n\nInput\nThe first line contains a single integer n (1 \u2264 n \u2264 150) \u2014 the number of statements in the programme. Next n lines contain a statement each. Each statement contains exactly one operation ( ++ or -- ) and exactly one variable x (denoted as letter \u00ab X \u00bb). Thus, there are no empty statements. The operation and the variable can be written in any order.\n\nOutput\nPrint a single integer \u2014 the final value of x . Examples\n\nInput\n1 ++X\n\nOutput\n1\n\nInput\n2 X++ --X\n\nOutput\n0","1526":"A. Cows and Primitive Roots time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The cows have just learned what a primitive root is! Given a prime p , a primitive root is an integer x (1 \u2264 x < p ) such that none of integers x - 1, x 2 - 1, ..., x p - 2 - 1 are divisible by p , but x p - 1 - 1 is. Unfortunately, computing primitive roots can be time consuming, so the cows need your help. Given a prime p , help the cows find the number of primitive roots .\n\nInput\nThe input contains a single line containing an integer p (2 \u2264 p < 2000) . It is guaranteed that p is a prime.\n\nOutput\nOutput on a single line the number of primitive roots . Examples\n\nInput\n3\n\nOutput\n1\n\nInput\n5\n\nOutput\n2\n\nNote\nThe only primitive root is 2. The primitive roots are 2 and 3.","1528":"C. Building Permutation time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Permutation p is an ordered set of integers p 1 , p 2 , ..., p n , consisting of n distinct positive integers, each of them doesn't exceed n . We'll denote the i -th element of permutation p as p i . We'll call number n the size or the length of permutation p 1 , p 2 , ..., p n . You have a sequence of integers a 1 , a 2 , ..., a n . In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 3\u00b710 5 ) \u2014 the size of the sought permutation. The second line contains n integers a 1 , a 2 , ..., a n ( - 10 9 \u2264 a i \u2264 10 9 ).\n\nOutput\nPrint a single number \u2014 the minimum number of moves. Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier. Examples\n\nInput\n2 3 0\n\nOutput\n2\n\nInput\n3 -1 -1 2\n\nOutput\n6\n\nNote\nIn the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is (2, 1) . In the second sample you need 6 moves to build permutation (1, 3, 2) .","1530":"C. Main Sequence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output As you know, Vova has recently become a new shaman in the city of Ultima Thule. So, he has received the shaman knowledge about the correct bracket sequences. The shamans of Ultima Thule have been using lots of different types of brackets since prehistoric times. A bracket type is a positive integer. The shamans define a correct bracket sequence as follows: An empty sequence is a correct bracket sequence. If { a 1 , a 2 , ..., a l } and { b 1 , b 2 , ..., b k } are correct bracket sequences, then sequence { a 1 , a 2 , ..., a l , b 1 , b 2 , ..., b k } (their concatenation) also is a correct bracket sequence. If { a 1 , a 2 , ..., a l } \u2014 is a correct bracket sequence, then sequence also is a correct bracket sequence, where v ( v > 0) is an integer. For example, sequences {1, 1, - 1, 2, - 2, - 1} and {3, - 3} are correct bracket sequences, and {2, - 3} is not. Moreover, after Vova became a shaman, he learned the most important correct bracket sequence { x 1 , x 2 , ..., x n } , consisting of n integers. As sequence x is the most important, Vova decided to encrypt it just in case. Encrypting consists of two sequences. The first sequence { p 1 , p 2 , ..., p n } contains types of brackets, that is, p i = | x i | ( 1 \u2264 i \u2264 n ). The second sequence { q 1 , q 2 , ..., q t } contains t integers \u2014 some positions (possibly, not all of them), which had negative numbers in sequence { x 1 , x 2 , ..., x n } . Unfortunately, Vova forgot the main sequence. But he was lucky enough to keep the encryption: sequences { p 1 , p 2 , ..., p n } and { q 1 , q 2 , ..., q t } . Help Vova restore sequence x by the encryption. If there are multiple sequences that correspond to the encryption, restore any of them. If there are no such sequences, you should tell so.\n\nInput\nThe first line of the input contains integer n ( 1 \u2264 n \u2264 10 6 ). The second line contains n integers: p 1 , p 2 , ..., p n (1 \u2264 p i \u2264 10 9 ) . The third line contains integer t ( 0 \u2264 t \u2264 n ), followed by t distinct integers q 1 , q 2 , ..., q t (1 \u2264 q i \u2264 n ) . The numbers in each line are separated by spaces.\n\nOutput\nPrint a single string \" NO \" (without the quotes) if Vova is mistaken and a suitable sequence { x 1 , x 2 , ..., x n } doesn't exist. Otherwise, in the first line print \" YES \" (without the quotes) and in the second line print n integers x 1 , x 2 , ..., x n (| x i | = p i ; x q j < 0) . If there are multiple sequences that correspond to the encrypting, you are allowed to print any of them. Examples\n\nInput\n2 1 1 0\n\nOutput\nYES 1 -1\n\nInput\n4 1 1 1 1 1 3\n\nOutput\nYES 1 1 -1 -1\n\nInput\n3 1 1 1 0\n\nOutput\nNO\n\nInput\n4 1 2 2 1 2 3 4\n\nOutput\nYES 1 2 -2 -1","1533":"A. IQ Test time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In the city of Ultima Thule job applicants are often offered an IQ test. The test is as follows: the person gets a piece of squared paper with a 4 \u00d7 4 square painted on it. Some of the square's cells are painted black and others are painted white. Your task is to repaint at most one cell the other color so that the picture has a 2 \u00d7 2 square, completely consisting of cells of the same color. If the initial picture already has such a square, the person should just say so and the test will be completed. Your task is to write a program that determines whether it is possible to pass the test. You cannot pass the test if either repainting any cell or no action doesn't result in a 2 \u00d7 2 square, consisting of cells of the same color.\n\nInput\nFour lines contain four characters each: the j -th character of the i -th line equals \" . \" if the cell in the i -th row and the j -th column of the square is painted white, and \" # \", if the cell is black.\n\nOutput\nPrint \" YES \" (without the quotes), if the test can be passed and \" NO \" (without the quotes) otherwise. Examples\n\nInput\n#### .#.. #### ....\n\nOutput\nYES\n\nInput\n#### .... #### ....\n\nOutput\nNO\n\nNote\nIn the first test sample it is enough to repaint the first cell in the second row. After such repainting the required 2 \u00d7 2 square is on the intersection of the 1 -st and 2 -nd row with the 1 -st and 2 -nd column.","1537":"B. Polo the Penguin and Matrix time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little penguin Polo has an n \u00d7 m matrix, consisting of integers. Let's index the matrix rows from 1 to n from top to bottom and let's index the columns from 1 to m from left to right. Let's represent the matrix element on the intersection of row i and column j as a ij . In one move the penguin can add or subtract number d from some matrix element. Find the minimum number of moves needed to make all matrix elements equal. If the described plan is impossible to carry out, say so.\n\nInput\nThe first line contains three integers n , m and d (1 \u2264 n , m \u2264 100, 1 \u2264 d \u2264 10 4 ) \u2014 the matrix sizes and the d parameter. Next n lines contain the matrix: the j -th integer in the i -th row is the matrix element a ij (1 \u2264 a ij \u2264 10 4 ) .\n\nOutput\nIn a single line print a single integer \u2014 the minimum number of moves the penguin needs to make all matrix elements equal. If that is impossible, print \" -1 \" (without the quotes). Examples\n\nInput\n2 2 2 2 4 6 8\n\nOutput\n4\n\nInput\n1 2 7 6 7\n\nOutput\n-1","1539":"A. Spit Problem time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In a Berland's zoo there is an enclosure with camels. It is known that camels like to spit. Bob watched these interesting animals for the whole day and registered in his notepad where each animal spitted. Now he wants to know if in the zoo there are two camels, which spitted at each other. Help him to solve this task. The trajectory of a camel's spit is an arc, i.e. if the camel in position x spits d meters right, he can hit only the camel in position x + d , if such a camel exists.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 100 ) \u2014 the amount of camels in the zoo. Each of the following n lines contains two integers x i and d i ( - 10 4 \u2264 x i \u2264 10 4 , 1 \u2264 | d i | \u2264 2\u00b710 4 ) \u2014 records in Bob's notepad. x i is a position of the i -th camel, and d i is a distance at which the i -th camel spitted. Positive values of d i correspond to the spits right, negative values correspond to the spits left. No two camels may stand in the same position.\n\nOutput\nIf there are two camels, which spitted at each other, output YES . Otherwise, output NO . Examples\n\nInput\n2 0 1 1 -1\n\nOutput\nYES\n\nInput\n3 0 1 1 1 2 -2\n\nOutput\nNO\n\nInput\n5 2 -10 3 10 0 5 5 -5 10 1\n\nOutput\nYES","1580":"B. QR code time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains two integers a 1 , a 2 ( 0 \u2264 a i \u2264 32 ), separated by a single space.\n\nOutput\nOutput a single integer. Examples\n\nInput\n1 1\n\nOutput\n0\n\nInput\n3 7\n\nOutput\n0\n\nInput\n13 10\n\nOutput\n1","1582":"C. WTF? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output HAI I HAS A TUX GIMMEH TUX I HAS A FOO ITS 0 I HAS A BAR ITS 0 I HAS A BAZ ITS 0 I HAS A QUZ ITS 1 TUX IS NOW A NUMBR IM IN YR LOOP NERFIN YR TUX TIL BOTH SAEM TUX AN 0 I HAS A PUR GIMMEH PUR PUR IS NOW A NUMBR FOO R SUM OF FOO AN PUR BAR R SUM OF BAR AN 1 BOTH SAEM BIGGR OF PRODUKT OF FOO AN QUZ AN PRODUKT OF BAR BAZ AN PRODUKT OF FOO AN QUZ O RLY? YA RLY BAZ R FOO QUZ R BAR OIC IM OUTTA YR LOOP BAZ IS NOW A NUMBAR VISIBLE SMOOSH QUOSHUNT OF BAZ QUZ KTHXBYE\n\nInput\nThe input contains between 1 and 10 lines, i -th line contains an integer number x i (0 \u2264 x i \u2264 9) .\n\nOutput\nOutput a single real number. The answer is considered to be correct if its absolute or relative error does not exceed 10 - 4 . Examples\n\nInput\n3 0 1 1\n\nOutput\n0.666667","1588":"A. Mysterious strings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 40 ).\n\nOutput\nOutput a single string. Examples\n\nInput\n2\n\nOutput\nAdams\n\nInput\n8\n\nOutput\nVan Buren\n\nInput\n29\n\nOutput\nHarding","1589":"D. Orange time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output\n\nInput\nThe first line of the input is a string (between 1 and 50 characters long, inclusive). Each character will be a letter of English alphabet, lowercase or uppercase. The second line of the input is an integer between 0 and 26, inclusive.\n\nOutput\nOutput the required string. Examples\n\nInput\nAprilFool 14\n\nOutput\nAprILFooL","1592":"A. Spyke Talks time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Polycarpus is the director of a large corporation. There are n secretaries working for the corporation, each of them corresponds via the famous Spyke VoIP system during the day. We know that when two people call each other via Spyke, the Spyke network assigns a unique ID to this call, a positive integer session number. One day Polycarpus wondered which secretaries are talking via the Spyke and which are not. For each secretary, he wrote out either the session number of his call or a 0 if this secretary wasn't talking via Spyke at that moment. Help Polycarpus analyze these data and find out the number of pairs of secretaries that are talking. If Polycarpus has made a mistake in the data and the described situation could not have taken place, say so.\n\nNote\nthat the secretaries can correspond via Spyke not only with each other, but also with the people from other places. Also, Spyke conferences aren't permitted \u2014 that is, one call connects exactly two people.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 10 3 ) \u2014 the number of secretaries in Polycarpus's corporation. The next line contains n space-separated integers: id 1 , id 2 , ..., id n (0 \u2264 id i \u2264 10 9 ) . Number id i equals the number of the call session of the i -th secretary, if the secretary is talking via Spyke, or zero otherwise. Consider the secretaries indexed from 1 to n in some way.\n\nOutput\nPrint a single integer \u2014 the number of pairs of chatting secretaries, or -1 if Polycarpus's got a mistake in his records and the described situation could not have taken place. Examples\n\nInput\n6 0 1 7 1 7 10\n\nOutput\n2\n\nInput\n3 1 1 1\n\nOutput\n-1\n\nInput\n1 0\n\nOutput\n0\n\nNote\nIn the first test sample there are two Spyke calls between secretaries: secretary 2 and secretary 4, secretary 3 and secretary 5. In the second test sample the described situation is impossible as conferences aren't allowed.","1594":"A. Weird Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Yaroslav, Andrey and Roman can play cubes for hours and hours. But the game is for three, so when Roman doesn't show up, Yaroslav and Andrey play another game. Roman leaves a word for each of them. Each word consists of 2\u00b7 n binary characters \" 0 \" or \" 1 \". After that the players start moving in turns. Yaroslav moves first. During a move, a player must choose an integer from 1 to 2\u00b7 n , which hasn't been chosen by anybody up to that moment. Then the player takes a piece of paper and writes out the corresponding character from his string. Let's represent Yaroslav's word as s = s 1 s 2 ... s 2 n . Similarly, let's represent Andrey's word as t = t 1 t 2 ... t 2 n . Then, if Yaroslav choose number k during his move, then he is going to write out character s k on the piece of paper. Similarly, if Andrey choose number r during his move, then he is going to write out character t r on the piece of paper. The game finishes when no player can make a move. After the game is over, Yaroslav makes some integer from the characters written on his piece of paper (Yaroslav can arrange these characters as he wants). Andrey does the same. The resulting numbers can contain leading zeroes. The person with the largest number wins. If the numbers are equal, the game ends with a draw. You are given two strings s and t . Determine the outcome of the game provided that Yaroslav and Andrey play optimally well.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 10 6 ). The second line contains string s \u2014 Yaroslav's word. The third line contains string t \u2014 Andrey's word. It is guaranteed that both words consist of 2\u00b7 n characters \" 0 \" and \" 1 \".\n\nOutput\nPrint \" First \", if both players play optimally well and Yaroslav wins. If Andrey wins, print \" Second \" and if the game ends with a draw, print \" Draw \". Print the words without the quotes. Examples\n\nInput\n2 0111 0001\n\nOutput\nFirst\n\nInput\n3 110110 001001\n\nOutput\nFirst\n\nInput\n3 111000 000111\n\nOutput\nDraw\n\nInput\n4 01010110 00101101\n\nOutput\nFirst\n\nInput\n4 01100000 10010011\n\nOutput\nSecond","1596":"B. Shaass and Bookshelf time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Shaass has n books. He wants to make a bookshelf for all his books. He wants the bookshelf's dimensions to be as small as possible. The thickness of the i -th book is t i and its pages' width is equal to w i . The thickness of each book is either 1 or 2 . All books have the same page heights. Shaass puts the books on the bookshelf in the following way. First he selects some of the books and put them vertically. Then he puts the rest of the books horizontally above the vertical books. The sum of the widths of the horizontal books must be no more than the total thickness of the vertical books. A sample arrangement of the books is depicted in the figure. Help Shaass to find the minimum total thickness of the vertical books that we can achieve.\n\nInput\nThe first line of the input contains an integer n , (1 \u2264 n \u2264 100) . Each of the next n lines contains two integers t i and w i denoting the thickness and width of the i -th book correspondingly, ( 1 \u2264 t i \u2264 2, 1 \u2264 w i \u2264 100 ).\n\nOutput\nOn the only line of the output print the minimum total thickness of the vertical books that we can achieve. Examples\n\nInput\n5 1 12 1 3 2 15 2 5 2 1\n\nOutput\n5\n\nInput\n3 1 10 2 1 2 4\n\nOutput\n3","1598":"A. Shaass and Oskols time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Shaass has decided to hunt some birds. There are n horizontal electricity wires aligned parallel to each other. Wires are numbered 1 to n from top to bottom. On each wire there are some oskols sitting next to each other. Oskol is the name of a delicious kind of birds in Shaass's territory. Supposed there are a i oskols sitting on the i -th wire. Sometimes Shaass shots one of the birds and the bird dies (suppose that this bird sat at the i -th wire). Consequently all the birds on the i -th wire to the left of the dead bird get scared and jump up on the wire number i - 1 , if there exists no upper wire they fly away. Also all the birds to the right of the dead bird jump down on wire number i + 1 , if there exists no such wire they fly away. Shaass has shot m birds. You're given the initial number of birds on each wire, tell him how many birds are sitting on each wire after the shots.\n\nInput\nThe first line of the input contains an integer n , (1 \u2264 n \u2264 100) . The next line contains a list of space-separated integers a 1 , a 2 , ..., a n , (0 \u2264 a i \u2264 100) . The third line contains an integer m , (0 \u2264 m \u2264 100) . Each of the next m lines contains two integers x i and y i . The integers mean that for the i -th time Shaass shoot the y i -th (from left) bird on the x i -th wire, (1 \u2264 x i \u2264 n , 1 \u2264 y i ) . It's guaranteed there will be at least y i birds on the x i -th wire at that moment.\n\nOutput\nOn the i -th line of the output print the number of birds on the i -th wire. Examples\n\nInput\n5 10 10 10 10 10 5 2 5 3 13 2 12 1 13 4 6\n\nOutput\n0 12 5 0 16\n\nInput\n3 2 4 1 1 2 2\n\nOutput\n3 0 3","1601":"A. Greg and Array time limit per test 1.5 seconds memory limit per test 256 megabytes input standard input output standard output Greg has an array a = a 1 , a 2 , ..., a n and m operations. Each operation looks as: l i , r i , d i , (1 \u2264 l i \u2264 r i \u2264 n ) . To apply operation i to the array means to increase all array elements with numbers l i , l i + 1, ..., r i by value d i . Greg wrote down k queries on a piece of paper. Each query has the following form: x i , y i , (1 \u2264 x i \u2264 y i \u2264 m ) . That means that one should apply operations with numbers x i , x i + 1, ..., y i to the array. Now Greg is wondering, what the array a will be after all the queries are executed. Help Greg.\n\nInput\nThe first line contains integers n , m , k (1 \u2264 n , m , k \u2264 10 5 ) . The second line contains n integers: a 1 , a 2 , ..., a n (0 \u2264 a i \u2264 10 5 ) \u2014 the initial array. Next m lines contain operations, the operation number i is written as three integers: l i , r i , d i , (1 \u2264 l i \u2264 r i \u2264 n ) , (0 \u2264 d i \u2264 10 5 ) . Next k lines contain the queries, the query number i is written as two integers: x i , y i , (1 \u2264 x i \u2264 y i \u2264 m ) . The numbers in the lines are separated by single spaces.\n\nOutput\nOn a single line print n integers a 1 , a 2 , ..., a n \u2014 the array after executing all the queries. Separate the printed numbers by spaces. Please, do not use the %lld specifier to read or write 64-bit integers in C++ . It is preferred to use the cin , cout streams of the %I64d specifier. Examples\n\nInput\n3 3 3 1 2 3 1 2 1 1 3 2 2 3 4 1 2 1 3 2 3\n\nOutput\n9 18 17\n\nInput\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n\nInput\n4 3 6 1 2 3 4 1 2 1 2 3 2 3 4 4 1 2 1 3 2 3 1 2 1 3 2 3\n\nOutput\n5 18 31 20","1618":"A. Yaroslav and Permutations time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Yaroslav has an array that consists of n integers. In one second Yaroslav can swap two neighboring array elements. Now Yaroslav is wondering if he can obtain an array where any two neighboring elements would be distinct in a finite time. Help Yaroslav.\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 100) \u2014 the number of elements in the array. The second line contains n integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 1000) \u2014 the array elements.\n\nOutput\nIn the single line print \" YES \" (without the quotes) if Yaroslav can obtain the array he needs, and \" NO \" (without the quotes) otherwise. Examples\n\nInput\n1 1\n\nOutput\nYES\n\nInput\n3 1 1 2\n\nOutput\nYES\n\nInput\n4 7 7 7 7\n\nOutput\nNO\n\nNote\nIn the first sample the initial array fits well. In the second sample Yaroslav can get array: 1 , 2 , 1 . He can swap the last and the second last elements to obtain it. In the third sample Yarosav can't get the array he needs.","1627":"A. Snow Footprints time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There is a straight snowy road, divided into n blocks. The blocks are numbered from 1 to n from left to right. If one moves from the i -th block to the ( i + 1) -th block, he will leave a right footprint on the i -th block. Similarly, if one moves from the i -th block to the ( i - 1) -th block, he will leave a left footprint on the i -th block. If there already is a footprint on the i -th block, the new footprint will cover the old one. At the beginning, there were no footprints. Then polar bear Alice starts from the s -th block, makes a sequence of moves and ends in the t -th block. It is known that Alice never moves outside of the road. You are given the description of Alice's footprints. Your task is to find a pair of possible values of s , t by looking at the footprints.\n\nInput\nThe first line of the input contains integer n (3 \u2264 n \u2264 1000) . The second line contains the description of the road \u2014 the string that consists of n characters. Each character will be either \" . \" (a block without footprint), or \" L \" (a block with a left footprint), \" R \" (a block with a right footprint). It's guaranteed that the given string contains at least one character not equal to \" . \". Also, the first and the last character will always be \" . \". It's guaranteed that a solution exists.\n\nOutput\nPrint two space-separated integers \u2014 the values of s and t . If there are several possible solutions you can print any of them. Examples\n\nInput\n9 ..RRLL...\n\nOutput\n3 4\n\nInput\n11 .RRRLLLLL..\n\nOutput\n7 5\n\nNote\nThe first test sample is the one in the picture.","1629":"B. Sail time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The polar bears are going fishing. They plan to sail from ( s x , s y ) to ( e x , e y ) . However, the boat can only sail by wind. At each second, the wind blows in one of these directions: east, south, west or north. Assume the boat is currently at ( x , y ) . If the wind blows to the east, the boat will move to ( x + 1, y ) . If the wind blows to the south, the boat will move to ( x , y - 1) . If the wind blows to the west, the boat will move to ( x - 1, y ) . If the wind blows to the north, the boat will move to ( x , y + 1) . Alternatively, they can hold the boat by the anchor. In this case, the boat stays at ( x , y ) . Given the wind direction for t seconds, what is the earliest time they sail to ( e x , e y ) ?\n\nInput\nThe first line contains five integers t , s x , s y , e x , e y (1 \u2264 t \u2264 10 5 , - 10 9 \u2264 s x , s y , e x , e y \u2264 10 9 ) . The starting location and the ending location will be different. The second line contains t characters, the i -th character is the wind blowing direction at the i -th second. It will be one of the four possibilities: \"E\" (east), \"S\" (south), \"W\" (west) and \"N\" (north).\n\nOutput\nIf they can reach ( e x , e y ) within t seconds, print the earliest time they can achieve it. Otherwise, print \" -1 \" (without quotes). Examples\n\nInput\n5 0 0 1 1 SESNW\n\nOutput\n4\n\nInput\n10 5 3 3 6 NENSWESNEE\n\nOutput\n-1\n\nNote\nIn the first sample, they can stay at seconds 1 , 3 , and move at seconds 2 , 4 . In the second sample, they cannot sail to the destination.","1632":"A. Ksusha and Array time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Ksusha is a beginner coder. Today she starts studying arrays. She has array a 1 , a 2 , ..., a n , consisting of n positive integers. Her university teacher gave her a task. Find such number in the array, that all array elements are divisible by it. Help her and find the number!\n\nInput\nThe first line contains integer n (1 \u2264 n \u2264 10 5 ) , showing how many numbers the array has. The next line contains integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 10 9 ) \u2014 the array elements.\n\nOutput\nPrint a single integer \u2014 the number from the array, such that all array elements are divisible by it. If such number doesn't exist, print -1 . If there are multiple answers, you are allowed to print any of them. Examples\n\nInput\n3 2 2 4\n\nOutput\n2\n\nInput\n5 2 1 3 1 6\n\nOutput\n1\n\nInput\n3 2 3 5\n\nOutput\n-1","1634":"B. Ksusha the Squirrel time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Ksusha the Squirrel is standing at the beginning of a straight road, divided into n sectors. The sectors are numbered 1 to n , from left to right. Initially, Ksusha stands in sector 1. Ksusha wants to walk to the end of the road, that is, get to sector n . Unfortunately, there are some rocks on the road. We know that Ksusha hates rocks, so she doesn't want to stand in sectors that have rocks. Ksusha the squirrel keeps fit. She can jump from sector i to any of the sectors i + 1, i + 2, ..., i + k . Help Ksusha! Given the road description, say if she can reach the end of the road (note, she cannot stand on a rock)?\n\nInput\nThe first line contains two integers n and k (2 \u2264 n \u2264 3\u00b710 5 , 1 \u2264 k \u2264 3\u00b710 5 ) . The next line contains n characters \u2014 the description of the road: the i -th character equals \" . \", if the i -th sector contains no rocks. Otherwise, it equals \" # \". It is guaranteed that the first and the last characters equal \" . \".\n\nOutput\nPrint \" YES \" (without the quotes) if Ksusha can reach the end of the road, otherwise print \" NO \" (without the quotes). Examples\n\nInput\n2 1 ..\n\nOutput\nYES\n\nInput\n5 2 .#.#.\n\nOutput\nYES\n\nInput\n7 3 .#.###.\n\nOutput\nNO","1640":"A. Shortest path of the king time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output The king is left alone on the chessboard. In spite of this loneliness, he doesn't lose heart, because he has business of national importance. For example, he has to pay an official visit to square t . As the king is not in habit of wasting his time, he wants to get from his current position s to square t in the least number of moves. Help him to do this. In one move the king can get to the square that has a common side or a common vertex with the square the king is currently in (generally there are 8 different squares he can move to).\n\nInput\nThe first line contains the chessboard coordinates of square s , the second line \u2014 of square t . Chessboard coordinates consist of two characters, the first one is a lowercase Latin letter (from a to h ), the second one is a digit from 1 to 8 .\n\nOutput\nIn the first line print n \u2014 minimum number of the king's moves. Then in n lines print the moves themselves. Each move is described with one of the 8: L , R , U , D , LU , LD , RU or RD . L , R , U , D stand respectively for moves left, right, up and down (according to the picture), and 2-letter combinations stand for diagonal moves. If the answer is not unique, print any of them. Examples\n\nInput\na8 h1\n\nOutput\n7 RD RD RD RD RD RD RD","1646":"A. Accounting time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A long time ago in some far country lived king Copa. After the recent king's reform, he got so large powers that started to keep the books by himself. The total income A of his kingdom during 0 -th year is known, as well as the total income B during n -th year (these numbers can be negative \u2014 it means that there was a loss in the correspondent year). King wants to show financial stability. To do this, he needs to find common coefficient X \u2014 the coefficient of income growth during one year. This coefficient should satisfy the equation: A \u00b7 X n = B . Surely, the king is not going to do this job by himself, and demands you to find such number X . It is necessary to point out that the fractional numbers are not used in kingdom's economy. That's why all input numbers as well as coefficient X must be integers. The number X may be zero or negative.\n\nInput\nThe input contains three integers A , B , n ( | A |, | B | \u2264 1000 , 1 \u2264 n \u2264 10 ).\n\nOutput\nOutput the required integer coefficient X , or \u00abNo solution\u00bb, if such a coefficient does not exist or it is fractional. If there are several possible solutions, output any of them. Examples\n\nInput\n2 18 2\n\nOutput\n3\n\nInput\n-1 8 3\n\nOutput\n-2\n\nInput\n0 0 10\n\nOutput\n5\n\nInput\n1 16 5\n\nOutput\nNo solution","1650":"B. Codeforces World Finals time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The king Copa often has been reported about the Codeforces site, which is rapidly getting more and more popular among the brightest minds of the humanity, who are using it for training and competing. Recently Copa understood that to conquer the world he needs to organize the world Codeforces tournament. He hopes that after it the brightest minds will become his subordinates, and the toughest part of conquering the world will be completed. The final round of the Codeforces World Finals 20YY is scheduled for DD . MM . YY , where DD is the day of the round, MM is the month and YY are the last two digits of the year. Bob is lucky to be the first finalist form Berland. But there is one problem: according to the rules of the competition, all participants must be at least 18 years old at the moment of the finals. Bob was born on BD . BM . BY . This date is recorded in his passport, the copy of which he has already mailed to the organizers. But Bob learned that in different countries the way, in which the dates are written, differs. For example, in the US the month is written first, then the day and finally the year. Bob wonders if it is possible to rearrange the numbers in his date of birth so that he will be at least 18 years old on the day DD . MM . YY . He can always tell that in his motherland dates are written differently. Help him. According to another strange rule, eligible participant must be born in the same century as the date of the finals. If the day of the finals is participant's 18-th birthday, he is allowed to participate. As we are considering only the years from 2001 to 2099 for the year of the finals, use the following rule: the year is leap if it's number is divisible by four.\n\nInput\nThe first line contains the date DD . MM . YY , the second line contains the date BD . BM . BY . It is guaranteed that both dates are correct, and YY and BY are always in [01;99] . It could be that by passport Bob was born after the finals. In this case, he can still change the order of numbers in date.\n\nOutput\nIf it is possible to rearrange the numbers in the date of birth so that Bob will be at least 18 years old on the DD . MM . YY , output YES . In the other case, output NO . Each number contains exactly two digits and stands for day, month or year in a date.\n\nNote\nthat it is permitted to rearrange only numbers, not digits. Examples\n\nInput\n01.01.98 01.01.80\n\nOutput\nYES\n\nInput\n20.10.20 10.02.30\n\nOutput\nNO\n\nInput\n28.02.74 28.02.64\n\nOutput\nNO","1657":"C. Flea time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output It is known that fleas in Berland can jump only vertically and horizontally, and the length of the jump is always equal to s centimeters. A flea has found herself at the center of some cell of the checked board of the size n \u00d7 m centimeters (each cell is 1 \u00d7 1 centimeters). She can jump as she wishes for an arbitrary number of times, she can even visit a cell more than once. The only restriction is that she cannot jump out of the board. The flea can count the amount of cells that she can reach from the starting position ( x , y ) . Let's denote this amount by d x , y . Your task is to find the number of such starting positions ( x , y ) , which have the maximum possible value of d x , y .\n\nInput\nThe first line contains three integers n , m , s ( 1 \u2264 n , m , s \u2264 10 6 ) \u2014 length of the board, width of the board and length of the flea's jump.\n\nOutput\nOutput the only integer \u2014 the number of the required starting positions of the flea. Examples\n\nInput\n2 3 1000000\n\nOutput\n6\n\nInput\n3 3 2\n\nOutput\n4","1659":"B. Borze time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Ternary numeric notation is quite popular in Berland. To telegraph the ternary number the Borze alphabet is used. Digit 0 is transmitted as \u00ab.\u00bb , 1 as \u00ab-.\u00bb and 2 as \u00ab--\u00bb . You are to decode the Borze code, i.e. to find out the ternary number given its representation in Borze alphabet.\n\nInput\nThe first line contains a number in Borze code. The length of the string is between 1 and 200 characters. It's guaranteed that the given string is a valid Borze code of some ternary number (this number can have leading zeroes).\n\nOutput\nOutput the decoded ternary number. It can have leading zeroes. Examples\n\nInput\n.-.--\n\nOutput\n012\n\nInput\n--.\n\nOutput\n20\n\nInput\n-..-.--\n\nOutput\n1012","1661":"A. Reconnaissance time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output According to the regulations of Berland's army, a reconnaissance unit should consist of exactly two soldiers. Since these two soldiers shouldn't differ much, their heights can differ by at most d centimeters. Captain Bob has n soldiers in his detachment. Their heights are a 1 , a 2 , ..., a n centimeters. Some soldiers are of the same height. Bob wants to know, how many ways exist to form a reconnaissance unit of two soldiers from his detachment. Ways (1, 2) and (2, 1) should be regarded as different.\n\nInput\nThe first line contains two integers n and d ( 1 \u2264 n \u2264 1000, 1 \u2264 d \u2264 10 9 ) \u2014 amount of soldiers in Bob's detachment and the maximum allowed height difference respectively. The second line contains n space-separated integers \u2014 heights of all the soldiers in Bob's detachment. These numbers don't exceed 10 9 .\n\nOutput\nOutput one number \u2014 amount of ways to form a reconnaissance unit of two soldiers, whose height difference doesn't exceed d . Examples\n\nInput\n5 10 10 20 50 60 65\n\nOutput\n6\n\nInput\n5 1 55 30 29 31 55\n\nOutput\n6","1665":"A. What is for dinner? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In one little known, but very beautiful country called Waterland, lives a lovely shark Valerie. Like all the sharks, she has several rows of teeth, and feeds on crucians. One of Valerie's distinguishing features is that while eating one crucian she uses only one row of her teeth, the rest of the teeth are \"relaxing\". For a long time our heroine had been searching the sea for crucians, but a great misfortune happened. Her teeth started to ache, and she had to see the local dentist, lobster Ashot. As a professional, Ashot quickly relieved Valerie from her toothache. Moreover, he managed to determine the cause of Valerie's developing caries (for what he was later nicknamed Cap). It turned that Valerie eats too many crucians. To help Valerie avoid further reoccurrence of toothache, Ashot found for each Valerie's tooth its residual viability. Residual viability of a tooth is a value equal to the amount of crucians that Valerie can eat with this tooth. Every time Valerie eats a crucian, viability of all the teeth used for it will decrease by one. When the viability of at least one tooth becomes negative, the shark will have to see the dentist again. Unhappy, Valerie came back home, where a portion of crucians was waiting for her. For sure, the shark couldn't say no to her favourite meal, but she had no desire to go back to the dentist. That's why she decided to eat the maximum amount of crucians from the portion but so that the viability of no tooth becomes negative. As Valerie is not good at mathematics, she asked you to help her to find out the total amount of crucians that she can consume for dinner. We should remind you that while eating one crucian Valerie uses exactly one row of teeth and the viability of each tooth from this row decreases by one.\n\nInput\nThe first line contains three integers n , m , k ( 1 \u2264 m \u2264 n \u2264 1000, 0 \u2264 k \u2264 10 6 ) \u2014 total amount of Valerie's teeth, amount of tooth rows and amount of crucians in Valerie's portion for dinner. Then follow n lines, each containing two integers: r ( 1 \u2264 r \u2264 m ) \u2014 index of the row, where belongs the corresponding tooth, and c ( 0 \u2264 c \u2264 10 6 ) \u2014 its residual viability. It's guaranteed that each tooth row has positive amount of teeth.\n\nOutput\nIn the first line output the maximum amount of crucians that Valerie can consume for dinner. Examples\n\nInput\n4 3 18 2 3 1 2 3 6 2 3\n\nOutput\n11\n\nInput\n2 2 13 1 13 2 12\n\nOutput\n13","1669":"A. Reconnaissance 2 time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output n soldiers stand in a circle. For each soldier his height a i is known. A reconnaissance unit can be made of such two neighbouring soldiers, whose heights difference is minimal, i.e. | a i - a j | is minimal. So each of them will be less noticeable with the other.\n\nOutput\nany pair of soldiers that can form a reconnaissance unit.\n\nInput\nThe first line contains integer n ( 2 \u2264 n \u2264 100 ) \u2014 amount of soldiers. Then follow the heights of the soldiers in their order in the circle \u2014 n space-separated integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 1000 ). The soldier heights are given in clockwise or counterclockwise direction.\n\nOutput\nOutput two integers \u2014 indexes of neighbouring soldiers, who should form a reconnaissance unit. If there are many optimum solutions, output any of them. Remember, that the soldiers stand in a circle. Examples\n\nInput\n5 10 12 13 15 10\n\nOutput\n5 1\n\nInput\n4 10 20 30 40\n\nOutput\n1 2","1673":"B. Sale time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Once Bob got to a sale of old TV sets. There were n TV sets at that sale. TV set with index i costs a i bellars. Some TV sets have a negative price \u2014 their owners are ready to pay Bob if he buys their useless apparatus. Bob can \u00abbuy\u00bb any TV sets he wants. Though he's very strong, Bob can carry at most m TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.\n\nInput\nThe first line contains two space-separated integers n and m ( 1 \u2264 m \u2264 n \u2264 100 ) \u2014 amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains n space-separated integers a i ( - 1000 \u2264 a i \u2264 1000 ) \u2014 prices of the TV sets.\n\nOutput\nOutput the only number \u2014 the maximum sum of money that Bob can earn, given that he can carry at most m TV sets. Examples\n\nInput\n5 3 -6 0 35 -2 4\n\nOutput\n8\n\nInput\n4 2 7 0 0 -7\n\nOutput\n7","1679":"A. Extra-terrestrial Intelligence time limit per test 2 seconds memory limit per test 64 megabytes input input.txt output output.txt Recently Vasya got interested in finding extra-terrestrial intelligence. He made a simple extra-terrestrial signals\u2019 receiver and was keeping a record of the signals for n days in a row. Each of those n days Vasya wrote a 1 in his notebook if he had received a signal that day and a 0 if he hadn\u2019t. Vasya thinks that he has found extra-terrestrial intelligence if there is a system in the way the signals has been received, i.e. if all the intervals between successive signals are equal. Otherwise, Vasya thinks that the signals were sent by some stupid aliens no one cares about. Help Vasya to deduce from the information given by the receiver if he has found extra-terrestrial intelligence or not.\n\nInput\nThe first line contains integer n ( 3 \u2264 n \u2264 100 ) \u2014 amount of days during which Vasya checked if there were any signals. The second line contains n characters 1 or 0 \u2014 the record Vasya kept each of those n days. It\u2019s guaranteed that the given record sequence contains at least three 1s.\n\nOutput\nIf Vasya has found extra-terrestrial intelligence, output YES , otherwise output NO . Examples\n\nInput\n8 00111000\n\nOutput\nYES\n\nInput\n7 1001011\n\nOutput\nNO\n\nInput\n7 1010100\n\nOutput\nYES","1683":"A. Towers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Vasya has received a young builder\u2019s kit. The kit consists of several wooden bars, the lengths of all of them are known. The bars can be put one on the top of the other if their lengths are the same. Vasya wants to construct the minimal number of towers from the bars. Help Vasya to use the bars in the best way possible.\n\nInput\nThe first line contains an integer N ( 1 \u2264 N \u2264 1000 ) \u2014 the number of bars at Vasya\u2019s disposal. The second line contains N space-separated integers l i \u2014 the lengths of the bars. All the lengths are natural numbers not exceeding 1000 .\n\nOutput\nIn one line output two numbers \u2014 the height of the largest tower and their total number. Remember that Vasya should use all the bars. Examples\n\nInput\n3 1 2 3\n\nOutput\n1 3\n\nInput\n4 6 5 6 7\n\nOutput\n2 3","1691":"A. Army time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Berland Armed Forces System consists of n ranks that are numbered using natural numbers from 1 to n , where 1 is the lowest rank and n is the highest rank. One needs exactly d i years to rise from rank i to rank i + 1 . Reaching a certain rank i having not reached all the previous i - 1 ranks is impossible. Vasya has just reached a new rank of a , but he dreams of holding the rank of b . Find for how many more years Vasya should serve in the army until he can finally realize his dream.\n\nInput\nThe first input line contains an integer n ( 2 \u2264 n \u2264 100 ). The second line contains n - 1 integers d i ( 1 \u2264 d i \u2264 100 ). The third input line contains two integers a and b ( 1 \u2264 a < b \u2264 n ). The numbers on the lines are space-separated.\n\nOutput\nPrint the single number which is the number of years that Vasya needs to rise from rank a to rank b . Examples\n\nInput\n3 5 6 1 2\n\nOutput\n5\n\nInput\n3 5 6 1 3\n\nOutput\n11","1709":"B. Company Income Growth time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Petya works as a PR manager for a successful Berland company BerSoft. He needs to prepare a presentation on the company income growth since 2001 (the year of its founding) till now. Petya knows that in 2001 the company income amounted to a 1 billion bourles, in 2002 \u2014 to a 2 billion, ..., and in the current (2000 + n ) -th year \u2014 a n billion bourles. On the base of the information Petya decided to show in his presentation the linear progress history which is in his opinion perfect. According to a graph Petya has already made, in the first year BerSoft company income must amount to 1 billion bourles, in the second year \u2014 2 billion bourles etc., each following year the income increases by 1 billion bourles. Unfortunately, the real numbers are different from the perfect ones. Among the numbers a i can even occur negative ones that are a sign of the company\u2019s losses in some years. That is why Petya wants to ignore some data, in other words, cross some numbers a i from the sequence and leave only some subsequence that has perfect growth. Thus Petya has to choose a sequence of years y 1 , y 2 , ..., y k ,so that in the year y 1 the company income amounted to 1 billion bourles, in the year y 2 \u2014 2 billion bourles etc., in accordance with the perfect growth dynamics. Help him to choose the longest such sequence.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 100 ). The next line contains n integers a i ( - 100 \u2264 a i \u2264 100 ). The number a i determines the income of BerSoft company in the (2000 + i ) -th year. The numbers in the line are separated by spaces.\n\nOutput\nOutput k \u2014 the maximum possible length of a perfect sequence. In the next line output the sequence of years y 1 , y 2 , ..., y k . Separate the numbers by spaces. If the answer is not unique, output any. If no solution exist, output one number 0 . Examples\n\nInput\n10 -2 1 1 3 2 3 4 -10 -2 5\n\nOutput\n5 2002 2005 2006 2007 2010\n\nInput\n3 -1 -2 -3\n\nOutput\n0","1711":"A. Watermelon time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output One hot summer day Pete and his friend Billy decided to buy a watermelon. They chose the biggest and the ripest one, in their opinion. After that the watermelon was weighed, and the scales showed w kilos. They rushed home, dying of thirst, and decided to divide the berry, however they faced a hard problem. Pete and Billy are great fans of even numbers, that's why they want to divide the watermelon in such a way that each of the two parts weighs even number of kilos, at the same time it is not obligatory that the parts are equal. The boys are extremely tired and want to start their meal as soon as possible, that's why you should help them and find out, if they can divide the watermelon in the way they want. For sure, each of them should get a part of positive weight.\n\nInput\nThe first (and the only) input line contains integer number w ( 1 \u2264 w \u2264 100 ) \u2014 the weight of the watermelon bought by the boys.\n\nOutput\nPrint YES , if the boys can divide the watermelon into two parts, each of them weighing even number of kilos; and NO in the opposite case. Examples\n\nInput\n8\n\nOutput\nYES\n\nNote\nFor example, the boys can divide the watermelon into two parts of 2 and 6 kilos respectively (another variant \u2014 two parts of 4 and 4 kilos).","1725":"E. Number Table time limit per test 2 seconds memory limit per test 216 megabytes input standard input output standard output As it has been found out recently, all the Berland's current economical state can be described using a simple table n \u00d7 m in size. n \u2014 the number of days in each Berland month, m \u2014 the number of months. Thus, a table cell corresponds to a day and a month of the Berland's year. Each cell will contain either 1 , or -1 , which means the state's gains in a particular month, on a particular day. 1 corresponds to profits, -1 corresponds to losses. It turned out important for successful development to analyze the data on the state of the economy of the previous year, however when the treasurers referred to the archives to retrieve the data, it turned out that the table had been substantially damaged. In some table cells the number values had faded and were impossible to be deciphered. It is known that the number of cells in which the data had been preserved is strictly less than max ( n , m ) . However, there is additional information \u2014 the product of the numbers in each line and column equaled -1 . Your task is to find out how many different tables may conform to the preserved data. As the answer to the task can be quite large, you have to find it modulo p .\n\nInput\nThe first line contains integers n and m ( 1 \u2264 n , m \u2264 1000 ). The second line contains the integer k ( 0 \u2264 k < max ( n , m ) ) \u2014 the number of cells in which the data had been preserved. The next k lines contain the data on the state of the table in the preserved cells. Each line is of the form \" a b c \", where a ( 1 \u2264 a \u2264 n ) \u2014 the number of the table row, b ( 1 \u2264 b \u2264 m ) \u2014 the number of the column, c \u2014 the value containing in the cell ( 1 or -1 ). They are numbered starting from 1 . It is guaranteed that no two lines with same a and b values exist. The last line contains an integer p ( 2 \u2264 p \u2264 10 9 + 7 ).\n\nOutput\nPrint the number of different tables that could conform to the preserved data modulo p . Examples\n\nInput\n2 2 0 100\n\nOutput\n2\n\nInput\n2 2 1 1 1 -1 100\n\nOutput\n1","1726":"B. Repaintings time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A chessboard n \u00d7 m in size is given. During the zero minute we repaint all the black squares to the 0 color. During the i -th minute we repaint to the i color the initially black squares that have exactly four corner-adjacent squares painted i - 1 (all such squares are repainted simultaneously). This process continues ad infinitum. You have to figure out how many squares we repainted exactly x times. The upper left square of the board has to be assumed to be always black. Two squares are called corner-adjacent, if they have exactly one common point.\n\nInput\nThe first line contains integers n and m ( 1 \u2264 n , m \u2264 5000 ). The second line contains integer x ( 1 \u2264 x \u2264 10 9 ).\n\nOutput\nPrint how many squares will be painted exactly x times. Examples\n\nInput\n3 3 1\n\nOutput\n4\n\nInput\n3 3 2\n\nOutput\n1\n\nInput\n1 1 1\n\nOutput\n1","1729":"A. Translation time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The translation from the Berland language into the Birland language is not an easy task. Those languages are very similar: a berlandish word differs from a birlandish word with the same meaning a little: it is spelled (and pronounced) reversely. For example, a Berlandish word code corresponds to a Birlandish word edoc . However, it's easy to make a mistake during the \u00abtranslation\u00bb. Vasya translated word s from Berlandish into Birlandish as t . Help him: find out if he translated the word correctly.\n\nInput\nThe first line contains word s , the second line contains word t . The words consist of lowercase Latin letters. The input data do not consist unnecessary spaces. The words are not empty and their lengths do not exceed 100 symbols.\n\nOutput\nIf the word t is a word s , written reversely, print YES , otherwise print NO . Examples\n\nInput\ncode edoc\n\nOutput\nYES\n\nInput\nabb aba\n\nOutput\nNO\n\nInput\ncode code\n\nOutput\nNO","1733":"A. Football time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Vasya decided to have a look at the results of Berland 1910 Football Championship\u2019s finals. Unfortunately he didn't find the overall score of the match; however, he got hold of a profound description of the match's process. On the whole there are n lines in that description each of which described one goal. Every goal was marked with the name of the team that had scored it. Help Vasya, learn the name of the team that won the finals. It is guaranteed that the match did not end in a tie.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of lines in the description. Then follow n lines \u2014 for each goal the names of the teams that scored it. The names are non-empty lines consisting of uppercase Latin letters whose lengths do not exceed 10 symbols. It is guaranteed that the match did not end in a tie and the description contains no more than two different teams.\n\nOutput\nPrint the name of the winning team. We remind you that in football the team that scores more goals is considered the winner. Examples\n\nInput\n1 ABC\n\nOutput\nABC\n\nInput\n5 A ABA ABA A A\n\nOutput\nA","1735":"B. Letter time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya decided to write an anonymous letter cutting the letters out of a newspaper heading. He knows heading s 1 and text s 2 that he wants to send. Vasya can use every single heading letter no more than once. Vasya doesn't have to cut the spaces out of the heading \u2014 he just leaves some blank space to mark them. Help him; find out if he will manage to compose the needed text.\n\nInput\nThe first line contains a newspaper heading s 1 . The second line contains the letter text s 2 . s 1 \u0438 s 2 are non-empty lines consisting of spaces, uppercase and lowercase Latin letters, whose lengths do not exceed 200 symbols. The uppercase and lowercase letters should be differentiated. Vasya does not cut spaces out of the heading.\n\nOutput\nIf Vasya can write the given anonymous letter, print YES , otherwise print NO Examples\n\nInput\nInstead of dogging Your footsteps it disappears but you dont notice anything where is your dog\n\nOutput\nNO\n\nInput\nInstead of dogging Your footsteps it disappears but you dont notice anything Your dog is upstears\n\nOutput\nYES\n\nInput\nInstead of dogging your footsteps it disappears but you dont notice anything Your dog is upstears\n\nOutput\nNO\n\nInput\nabcdefg hijk k j i h g f e d c b a\n\nOutput\nYES","1745":"C. Lucky Tickets time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya thinks that lucky tickets are the tickets whose numbers are divisible by 3. He gathered quite a large collection of such tickets but one day his younger brother Leonid was having a sulk and decided to destroy the collection. First he tore every ticket exactly in two, but he didn\u2019t think it was enough and Leonid also threw part of the pieces away. Having seen this, Vasya got terrified but still tried to restore the collection. He chose several piece pairs and glued each pair together so that each pair formed a lucky ticket. The rest of the pieces Vasya threw away reluctantly. Thus, after the gluing of the 2 t pieces he ended up with t tickets, each of which was lucky. When Leonid tore the tickets in two pieces, one piece contained the first several letters of his number and the second piece contained the rest. Vasya can glue every pair of pieces in any way he likes, but it is important that he gets a lucky ticket in the end. For example, pieces 123 and 99 can be glued in two ways: 12399 and 99123 . What maximum number of tickets could Vasya get after that?\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 10 4 ) \u2014 the number of pieces. The second line contains n space-separated numbers a i ( 1 \u2264 a i \u2264 10 8 ) \u2014 the numbers on the pieces. Vasya can only glue the pieces in pairs. Even if the number of a piece is already lucky, Vasya should glue the piece with some other one for it to count as lucky. Vasya does not have to use all the pieces. The numbers on the pieces an on the resulting tickets may coincide.\n\nOutput\nPrint the single number \u2014 the maximum number of lucky tickets that will be able to be restored. Don't forget that every lucky ticket is made of exactly two pieces glued together. Examples\n\nInput\n3 123 123 99\n\nOutput\n1\n\nInput\n6 1 1 1 23 10 3\n\nOutput\n1","1760":"E. Anfisa the Monkey time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Anfisa the monkey learns to type. She is yet unfamiliar with the \"space\" key and can only type in lower-case Latin letters. Having typed for a fairly long line, Anfisa understood that it would be great to divide what she has written into k lines not shorter than a and not longer than b , for the text to resemble human speech more. Help Anfisa.\n\nInput\nThe first line contains three integers k , a and b ( 1 \u2264 k \u2264 200 , 1 \u2264 a \u2264 b \u2264 200 ). The second line contains a sequence of lowercase Latin letters \u2014 the text typed by Anfisa. It is guaranteed that the given line is not empty and its length does not exceed 200 symbols.\n\nOutput\nPrint k lines, each of which contains no less than a and no more than b symbols \u2014 Anfisa's text divided into lines. It is not allowed to perform any changes in the text, such as: deleting or adding symbols, changing their order, etc. If the solution is not unique, print any of them. If there is no solution, print \"No solution\" (without quotes). Examples\n\nInput\n3 2 5 abrakadabra\n\nOutput\nab rakad abra\n\nInput\n4 1 2 abrakadabra\n\nOutput\nNo solution","1764":"A. Indian Summer time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Indian summer is such a beautiful time of the year! A girl named Alyona is walking in the forest and picking a bouquet from fallen leaves. Alyona is very choosy \u2014 she doesn't take a leaf if it matches the color and the species of the tree of one of the leaves she already has. Find out how many leaves Alyona has picked.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 100 ) \u2014 the number of leaves Alyona has found. The next n lines contain the leaves' descriptions. Each leaf is characterized by the species of the tree it has fallen from and by the color. The species of the trees and colors are given in names, consisting of no more than 10 lowercase Latin letters. A name can not be an empty string. The species of a tree and the color are given in each line separated by a space.\n\nOutput\nOutput the single number \u2014 the number of Alyona's leaves. Examples\n\nInput\n5 birch yellow maple red birch yellow maple yellow maple green\n\nOutput\n4\n\nInput\n3 oak yellow oak yellow oak yellow\n\nOutput\n1","1767":"A. Codecraft III time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today Vasya visited a widely known site and learned that the continuation of his favourite game Codecraft II will appear after exactly k months. He looked at the calendar and learned that at the moment is the month number s . Vasya immediately got interested in what month Codecraft III will appear. Help him understand that. All the twelve months in Vasya's calendar are named using their usual English names: January , February , March , April , May , June , July , August , September , October , November , December .\n\nInput\nThe first input line contains the name of the current month. It is guaranteed that it is a proper English name of one of twelve months. The first letter is uppercase, the rest are lowercase. The second line contains integer k ( 0 \u2264 k \u2264 100 ) \u2014 the number of months left till the appearance of Codecraft III.\n\nOutput\nPrint starting from an uppercase letter the name of the month in which the continuation of Codeforces II will appear. The printed name must be contained in the list January , February , March , April , May , June , July , August , September , October , November , December . Examples\n\nInput\nNovember 3\n\nOutput\nFebruary\n\nInput\nMay 24\n\nOutput\nMay","1769":"A. Ball Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A kindergarten teacher Natalia Pavlovna has invented a new ball game. This game not only develops the children's physique, but also teaches them how to count. The game goes as follows. Kids stand in circle. Let's agree to think of the children as numbered with numbers from 1 to n clockwise and the child number 1 is holding the ball. First the first child throws the ball to the next one clockwise, i.e. to the child number 2 . Then the child number 2 throws the ball to the next but one child, i.e. to the child number 4 , then the fourth child throws the ball to the child that stands two children away from him, i.e. to the child number 7 , then the ball is thrown to the child who stands 3 children away from the child number 7 , then the ball is thrown to the child who stands 4 children away from the last one, and so on. It should be mentioned that when a ball is thrown it may pass the beginning of the circle. For example, if n = 5 , then after the third throw the child number 2 has the ball again. Overall, n - 1 throws are made, and the game ends. The problem is that not all the children get the ball during the game. If a child doesn't get the ball, he gets very upset and cries until Natalia Pavlovna gives him a candy. That's why Natalia Pavlovna asks you to help her to identify the numbers of the children who will get the ball after each throw.\n\nInput\nThe first line contains integer n ( 2 \u2264 n \u2264 100 ) which indicates the number of kids in the circle.\n\nOutput\nIn the single line print n - 1 numbers which are the numbers of children who will get the ball after each throw. Separate the numbers by spaces. Examples\n\nInput\n10\n\nOutput\n2 4 7 1 6 2 9 7 6\n\nInput\n3\n\nOutput\n2 1","1778":"A. Triangular numbers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A triangular number is the number of dots in an equilateral triangle uniformly filled with dots. For example, three dots can be arranged in a triangle; thus three is a triangular number. The n -th triangular number is the number of dots in a triangle with n dots on a side. . You can learn more about these numbers from Wikipedia (http:\/\/en.wikipedia.org\/wiki\/Triangular_number). Your task is to find out if a given integer is a triangular number.\n\nInput\nThe first line contains the single number n ( 1 \u2264 n \u2264 500 ) \u2014 the given integer.\n\nOutput\nIf the given integer is a triangular number output YES , otherwise output NO . Examples\n\nInput\n1\n\nOutput\nYES\n\nInput\n2\n\nOutput\nNO\n\nInput\n3\n\nOutput\nYES","1795":"D. Permutations time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A permutation is a sequence of integers from 1 to n of length n containing each number exactly once. For example, (1) , (4, 3, 5, 1, 2) , (3, 2, 1) are permutations, and (1, 1) , (4, 3, 1) , (2, 3, 4) are not. There are many tasks on permutations. Today you are going to solve one of them. Let\u2019s imagine that somebody took several permutations (perhaps, with a different number of elements), wrote them down consecutively as one array and then shuffled the resulting array. The task is to restore the initial permutations if it is possible.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 10 5 ). The next line contains the mixed array of n integers, divided with a single space. The numbers in the array are from 1 to 10 5 .\n\nOutput\nIf this array can be split into several permutations so that every element of the array belongs to exactly one permutation, print in the first line the number of permutations. The second line should contain n numbers, corresponding to the elements of the given array. If the i -th element belongs to the first permutation, the i -th number should be 1 , if it belongs to the second one, then its number should be 2 and so on. The order of the permutations\u2019 numbering is free. If several solutions are possible, print any one of them. If there\u2019s no solution, print in the first line - 1 . Examples\n\nInput\n9 1 2 3 1 2 1 4 2 5\n\nOutput\n3 3 1 2 1 2 2 2 3 2\n\nInput\n4 4 3 2 1\n\nOutput\n1 1 1 1 1\n\nInput\n4 1 2 2 3\n\nOutput\n-1\n\nNote\nIn the first sample test the array is split into three permutations: (2, 1) , (3, 2, 1, 4, 5) , (1, 2) . The first permutation is formed by the second and the fourth elements of the array, the second one \u2014 by the third, the fifth, the sixth, the seventh and the ninth elements, the third one \u2014 by the first and the eigth elements. Clearly, there are other splitting variants possible.","1797":"A. Sleuth time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya plays the sleuth with his friends. The rules of the game are as follows: those who play for the first time, that is Vasya is the sleuth, he should investigate a \"crime\" and find out what is happening. He can ask any questions whatsoever that can be answered with \"Yes\" or \"No\". All the rest agree beforehand to answer the questions like that: if the question\u2019s last letter is a vowel, they answer \"Yes\" and if the last letter is a consonant, they answer \"No\". Of course, the sleuth knows nothing about it and his task is to understand that. Unfortunately, Vasya is not very smart. After 5 hours of endless stupid questions everybody except Vasya got bored. That\u2019s why Vasya\u2019s friends ask you to write a program that would give answers instead of them. The English alphabet vowels are: A, E, I, O, U, Y The English alphabet consonants are: B, C, D, F, G, H, J, K, L, M, N, P, Q, R, S, T, V, W, X, Z\n\nInput\nThe single line contains a question represented by a non-empty line consisting of large and small Latin letters, spaces and a question mark. The line length does not exceed 100. It is guaranteed that the question mark occurs exactly once in the line \u2014 as the last symbol and that the line contains at least one letter.\n\nOutput\nPrint answer for the question in a single line: YES if the answer is \"Yes\", NO if the answer is \"No\". Remember that in the reply to the question the last letter , not the last character counts. I. e. the spaces and the question mark do not count as letters. Examples\n\nInput\nIs it a melon?\n\nOutput\nNO\n\nInput\nIs it an apple?\n\nOutput\nYES\n\nInput\nIs it a banana ?\n\nOutput\nYES\n\nInput\nIs it an apple and a banana simultaneouSLY?\n\nOutput\nYES","1802":"B. Sum time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya studies positional numeral systems. Unfortunately, he often forgets to write the base of notation in which the expression is written. Once he saw a note in his notebook saying a + b = ? , and that the base of the positional notation wasn\u2019t written anywhere. Now Vasya has to choose a base p and regard the expression as written in the base p positional notation. Vasya understood that he can get different results with different bases, and some bases are even invalid. For example, expression 78 + 87 in the base 16 positional notation is equal to FF 16 , in the base 15 positional notation it is equal to 110 15 , in the base 10 one \u2014 to 165 10 , in the base 9 one \u2014 to 176 9 , and in the base 8 or lesser-based positional notations the expression is invalid as all the numbers should be strictly less than the positional notation base. Vasya got interested in what is the length of the longest possible expression value. Help him to find this length. The length of a number should be understood as the number of numeric characters in it. For example, the length of the longest answer for 78 + 87 = ? is 3. It is calculated like that in the base 15 ( 110 15 ), base 10 ( 165 10 ), base 9 ( 176 9 ) positional notations, for example, and in some other ones.\n\nInput\nThe first letter contains two space-separated numbers a and b ( 1 \u2264 a , b \u2264 1000 ) which represent the given summands.\n\nOutput\nPrint a single number \u2014 the length of the longest answer. Examples\n\nInput\n78 87\n\nOutput\n3\n\nInput\n1 1\n\nOutput\n2","1804":"A. Domino piling time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given a rectangular board of M \u00d7 N squares. Also you are given an unlimited number of standard domino pieces of 2 \u00d7 1 squares. You are allowed to rotate the pieces. You are asked to place as many dominoes as possible on the board so as to meet the following conditions: 1. Each domino completely covers two squares. 2. No two dominoes overlap. 3. Each domino lies entirely inside the board. It is allowed to touch the edges of the board. Find the maximum number of dominoes, which can be placed under these restrictions.\n\nInput\nIn a single line you are given two integers M and N \u2014 board sizes in squares ( 1 \u2264 M \u2264 N \u2264 16 ).\n\nOutput\nOutput one number \u2014 the maximal number of dominoes, which can be placed. Examples\n\nInput\n2 4\n\nOutput\n4\n\nInput\n3 3\n\nOutput\n4","1842":"A. 123-sequence time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There is a given sequence of integers a 1 , a 2 , ..., a n , where every number is from 1 to 3 inclusively. You have to replace the minimum number of numbers in it so that all the numbers in the sequence are equal to each other.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 10 6 ). The second line contains a sequence of integers a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 3 ).\n\nOutput\nPrint the minimum number of replacements needed to be performed to make all the numbers in the sequence equal. Examples\n\nInput\n9 1 3 2 2 2 1 1 2 3\n\nOutput\n5\n\nNote\nIn the example all the numbers equal to 1 and 3 should be replaced by 2.","1848":"A. Autocomplete time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Autocomplete is a program function that enables inputting the text (in editors, command line shells, browsers etc.) completing the text by its inputted part. Vasya is busy working on a new browser called 'BERowser'. He happens to be working on the autocomplete function in the address line at this very moment. A list consisting of n last visited by the user pages and the inputted part s are known. Your task is to complete s to make it an address of one of the pages from the list. You have to find the lexicographically smallest address having a prefix s .\n\nInput\nThe first line contains the s line which is the inputted part. The second line contains an integer n ( 1 \u2264 n \u2264 100 ) which is the number of visited pages. Then follow n lines which are the visited pages, one on each line. All the lines have lengths of from 1 to 100 symbols inclusively and consist of lowercase Latin letters only.\n\nOutput\nIf s is not the beginning of any of n addresses of the visited pages, print s . Otherwise, print the lexicographically minimal address of one of the visited pages starting from s . The lexicographical order is the order of words in a dictionary. The lexicographical comparison of lines is realized by the '<' operator in the modern programming languages. Examples\n\nInput\nnext 2 nextpermutation nextelement\n\nOutput\nnextelement\n\nInput\nfind 4 find findfirstof findit fand\n\nOutput\nfind\n\nInput\nfind 4 fondfind fondfirstof fondit fand\n\nOutput\nfind","1850":"A. Bar time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output According to Berland laws it is only allowed to sell alcohol to people not younger than 18 years. Vasya's job is to monitor the law's enforcement. Tonight he entered a bar and saw n people sitting there. For every one of them Vasya happened to determine either the age or the drink the person is having. Vasya can check any person, i.e. learn his age and the drink he is having at the same time. What minimal number of people should Vasya check additionally to make sure that there are no clients under 18 having alcohol drinks? The list of all alcohol drinks in Berland is: ABSINTH , BEER , BRANDY , CHAMPAGNE , GIN , RUM , SAKE , TEQUILA , VODKA , WHISKEY , WINE\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 100 ) which is the number of the bar's clients. Then follow n lines, each describing one visitor. A line either contains his age (an integer from 0 to 1000) or his drink (a string of capital Latin letters from 1 to 100 in length). It is guaranteed that the input data does not contain spaces and other unnecessary separators. Only the drinks from the list given above should be considered alcohol.\n\nOutput\nPrint a single number which is the number of people Vasya should check to guarantee the law enforcement. Examples\n\nInput\n5 18 VODKA COKE 19 17\n\nOutput\n2\n\nNote\nIn the sample test the second and fifth clients should be checked.","1854":"C. Array time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Chris the Rabbit has been interested in arrays ever since he was a child. At the moment he is researching arrays with the length of n , containing only integers from 1 to n . He is not good at math, that's why some simple things drive him crazy. For example, yesterday he grew keen on counting how many different beautiful arrays there are. Chris thinks that an array is beautiful if it meets one of the two conditions: each elements, starting from the second one, is no more than the preceding one each element, starting from the second one, is no less than the preceding one Having got absolutely mad at himself and at math, Chris came to Stewie and Brian to ask them for help. However, they only laughed at him and said that the answer is too simple and not interesting. Help Chris the Rabbit to find the answer at last.\n\nInput\nThe single line contains an integer n which is the size of the array ( 1 \u2264 n \u2264 10 5 ).\n\nOutput\nYou must print the answer on a single line. As it can be rather long, you should print it modulo 1000000007 . Examples\n\nInput\n2\n\nOutput\n4\n\nInput\n3\n\nOutput\n17","1855":"A. Square Earth? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Meg the Rabbit decided to do something nice, specifically \u2014 to determine the shortest distance between two points on the surface of our planet. But Meg... what can you say, she wants everything simple. So, she already regards our planet as a two-dimensional circle. No, wait, it's even worse \u2014 as a square of side n . Thus, the task has been reduced to finding the shortest path between two dots on a square (the path should go through the square sides). To simplify the task let us consider the vertices of the square to lie at points whose coordinates are: (0, 0) , ( n , 0) , (0, n ) and ( n , n ) .\n\nInput\nThe single line contains 5 space-separated integers: n , x 1 , y 1 , x 2 , y 2 ( 1 \u2264 n \u2264 1000, 0 \u2264 x 1 , y 1 , x 2 , y 2 \u2264 n ) which correspondingly represent a side of the square, the coordinates of the first point and the coordinates of the second point. It is guaranteed that the points lie on the sides of the square.\n\nOutput\nYou must print on a single line the shortest distance between the points. Examples\n\nInput\n2 0 0 1 0\n\nOutput\n1\n\nInput\n2 0 1 2 1\n\nOutput\n4\n\nInput\n100 0 0 100 100\n\nOutput\n200","1858":"B. Coins time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In Berland a money reform is being prepared. New coins are being introduced. After long economic calculations was decided that the most expensive coin should possess the denomination of exactly n Berland dollars. Also the following restriction has been introduced for comfort: the denomination of each coin should be divisible by the denomination of any cheaper coin. It is known that among all the possible variants the variant with the largest number of new coins will be chosen. Find this variant. Print in the order of decreasing of the coins' denominations.\n\nInput\nThe first and only line contains an integer n ( 1 \u2264 n \u2264 10 6 ) which represents the denomination of the most expensive coin.\n\nOutput\nPrint the denominations of all the coins in the order of decreasing. The number of coins must be the largest possible (with the given denomination n of the most expensive coin). Also, the denomination of every coin must be divisible by the denomination of any cheaper coin. Naturally, the denominations of all the coins should be different. If there are several solutins to that problem, print any of them. Examples\n\nInput\n10\n\nOutput\n10 5 1\n\nInput\n4\n\nOutput\n4 2 1\n\nInput\n3\n\nOutput\n3 1","1859":"A. Chat room time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya has recently learned to type and log on to the Internet. He immediately entered a chat room and decided to say hello to everybody. Vasya typed the word s . It is considered that Vasya managed to say hello if several letters can be deleted from the typed word so that it resulted in the word \" hello \". For example, if Vasya types the word \" ahhellllloou \", it will be considered that he said hello, and if he types \" hlelo \", it will be considered that Vasya got misunderstood and he didn't manage to say hello. Determine whether Vasya managed to say hello by the given word s .\n\nInput\nThe first and only line contains the word s , which Vasya typed. This word consisits of small Latin letters, its length is no less that 1 and no more than 100 letters.\n\nOutput\nIf Vasya managed to say hello, print \" YES \", otherwise print \" NO \". Examples\n\nInput\nahhellllloou\n\nOutput\nYES\n\nInput\nhlelo\n\nOutput\nNO","1871":"A. Word time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya is very upset that many people on the Net mix uppercase and lowercase letters in one word. That's why he decided to invent an extension for his favorite browser that would change the letters' register in every word so that it either only consisted of lowercase letters or, vice versa, only of uppercase ones. At that as little as possible letters should be changed in the word. For example, the word HoUse must be replaced with house , and the word ViP \u2014 with VIP . If a word contains an equal number of uppercase and lowercase letters, you should replace all the letters with lowercase ones. For example, maTRIx should be replaced by matrix . Your task is to use the given method on one given word.\n\nInput\nThe first line contains a word s \u2014 it consists of uppercase and lowercase Latin letters and possesses the length from 1 to 100 .\n\nOutput\nPrint the corrected word s . If the given word s has strictly more uppercase letters, make the word written in the uppercase register, otherwise - in the lowercase one. Examples\n\nInput\nHoUse\n\nOutput\nhouse\n\nInput\nViP\n\nOutput\nVIP\n\nInput\nmaTRIx\n\nOutput\nmatrix","1877":"A. Triangle time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output Johnny has a younger sister Anne, who is very clever and smart. As she came home from the kindergarten, she told his brother about the task that her kindergartener asked her to solve. The task was just to construct a triangle out of four sticks of different colours. Naturally, one of the sticks is extra. It is not allowed to break the sticks or use their partial length. Anne has perfectly solved this task, now she is asking Johnny to do the same. The boy answered that he would cope with it without any difficulty. However, after a while he found out that different tricky things can occur. It can happen that it is impossible to construct a triangle of a positive area, but it is possible to construct a degenerate triangle. It can be so, that it is impossible to construct a degenerate triangle even. As Johnny is very lazy, he does not want to consider such a big amount of cases, he asks you to help him.\n\nInput\nThe first line of the input contains four space-separated positive integer numbers not exceeding 100 \u2014 lengthes of the sticks.\n\nOutput\nOutput TRIANGLE if it is possible to construct a non-degenerate triangle.\n\nOutput\nSEGMENT if the first case cannot take place and it is possible to construct a degenerate triangle.\n\nOutput\nIMPOSSIBLE if it is impossible to construct any triangle. Remember that you are to use three sticks. It is not allowed to break the sticks or use their partial length. Examples\n\nInput\n4 2 1 3\n\nOutput\nTRIANGLE\n\nInput\n7 2 2 4\n\nOutput\nSEGMENT\n\nInput\n3 5 9 1\n\nOutput\nIMPOSSIBLE","1882":"A. Where Are My Flakes? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One morning the Cereal Guy found out that all his cereal flakes were gone. He found a note instead of them. It turned out that his smart roommate hid the flakes in one of n boxes. The boxes stand in one row, they are numbered from 1 to n from the left to the right. The roommate left hints like \"Hidden to the left of the i -th box\" (\" To the left of i \"), \"Hidden to the right of the i -th box\" (\" To the right of i \"). Such hints mean that there are no flakes in the i -th box as well. The Cereal Guy wants to know the minimal number of boxes he necessarily needs to check to find the flakes considering all the hints. Or he wants to find out that the hints are contradictory and the roommate lied to him, that is, no box has the flakes.\n\nInput\nThe first line contains two integers n and m ( 1 \u2264 n \u2264 1000, 0 \u2264 m \u2264 1000 ) which represent the number of boxes and the number of hints correspondingly. Next m lines contain hints like \" To the left of i \" and \" To the right of i \", where i is integer ( 1 \u2264 i \u2264 n ). The hints may coincide.\n\nOutput\nThe answer should contain exactly one integer \u2014 the number of boxes that should necessarily be checked or \" -1 \" if the hints are contradictory. Examples\n\nInput\n2 1 To the left of 2\n\nOutput\n1\n\nInput\n3 2 To the right of 1 To the right of 2\n\nOutput\n1\n\nInput\n3 1 To the left of 3\n\nOutput\n2\n\nInput\n3 2 To the left of 2 To the right of 1\n\nOutput\n-1","1884":"A. Ultra-Fast Mathematician time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Shapur was an extremely gifted student. He was great at everything including Combinatorics, Algebra, Number Theory, Geometry, Calculus, etc. He was not only smart but extraordinarily fast! He could manage to sum 10 18 numbers in a single second. One day in 230 AD Shapur was trying to find out if any one can possibly do calculations faster than him. As a result he made a very great contest and asked every one to come and take part. In his contest he gave the contestants many different pairs of numbers. Each number is made from digits 0 or 1 . The contestants should write a new number corresponding to the given pair of numbers. The rule is simple: The i -th digit of the answer is 1 if and only if the i -th digit of the two given numbers differ. In the other case the i -th digit of the answer is 0 . Shapur made many numbers and first tried his own speed. He saw that he can perform these operations on numbers of length \u221e (length of a number is number of digits in it) in a glance! He always gives correct answers so he expects the contestants to give correct answers, too. He is a good fellow so he won't give anyone very big numbers and he always gives one person numbers of same length. Now you are going to take part in Shapur's contest. See if you are faster and more accurate.\n\nInput\nThere are two lines in each input. Each of them contains a single number. It is guaranteed that the numbers are made from 0 and 1 only and that their length is same. The numbers may start with 0 . The length of each number doesn't exceed 100.\n\nOutput\nWrite one line \u2014 the corresponding answer. Do not omit the leading 0 s. Examples\n\nInput\n1010100 0100101\n\nOutput\n1110001\n\nInput\n000 111\n\nOutput\n111\n\nInput\n1110 1010\n\nOutput\n0100\n\nInput\n01110 01100\n\nOutput\n00010","1886":"A. A Student's Dream time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Statistics claims that students sleep no more than three hours a day. But even in the world of their dreams, while they are snoring peacefully, the sense of impending doom is still upon them. A poor student is dreaming that he is sitting the mathematical analysis exam. And he is examined by the most formidable professor of all times, a three times Soviet Union Hero, a Noble Prize laureate in student expulsion, venerable Petr Palych. The poor student couldn't answer a single question. Thus, instead of a large spacious office he is going to apply for a job to thorium mines. But wait a minute! Petr Palych decided to give the student the last chance! Yes, that is possible only in dreams. So the professor began: \"Once a Venusian girl and a Marsian boy met on the Earth and decided to take a walk holding hands. But the problem is the girl has a l fingers on her left hand and a r fingers on the right one. The boy correspondingly has b l and b r fingers. They can only feel comfortable when holding hands, when no pair of the girl's fingers will touch each other. That is, they are comfortable when between any two girl's fingers there is a boy's finger. And in addition, no three fingers of the boy should touch each other. Determine if they can hold hands so that the both were comfortable.\" The boy any the girl don't care who goes to the left and who goes to the right. The difference is only that if the boy goes to the left of the girl, he will take her left hand with his right one, and if he goes to the right of the girl, then it is vice versa.\n\nInput\nThe first line contains two positive integers not exceeding 100 . They are the number of fingers on the Venusian girl's left and right hand correspondingly. The second line contains two integers not exceeding 100 . They are the number of fingers on the Marsian boy's left and right hands correspondingly.\n\nOutput\nPrint YES or NO , that is, the answer to Petr Palych's question. Examples\n\nInput\n5 1 10 5\n\nOutput\nYES\n\nInput\n4 5 3 3\n\nOutput\nYES\n\nInput\n1 2 11 6\n\nOutput\nNO\n\nNote\nThe boy and the girl don't really care who goes to the left.","1902":"A. Sinking Ship time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The ship crashed into a reef and is sinking. Now the entire crew must be evacuated. All n crew members have already lined up in a row (for convenience let's label them all from left to right with positive integers from 1 to n ) and await further instructions. However, one should evacuate the crew properly, in a strict order. Specifically: The first crew members to leave the ship are rats. Then women and children (both groups have the same priority) leave the ship. After that all men are evacuated from the ship. The captain leaves the sinking ship last. If we cannot determine exactly who should leave the ship first for any two members of the crew by the rules from the previous paragraph, then the one who stands to the left in the line leaves the ship first (or in other words, the one whose number in the line is less). For each crew member we know his status as a crew member, and also his name. All crew members have different names. Determine the order in which to evacuate the crew.\n\nInput\nThe first line contains an integer n , which is the number of people in the crew ( 1 \u2264 n \u2264 100 ). Then follow n lines. The i -th of those lines contains two words \u2014 the name of the crew member who is i -th in line, and his status on the ship. The words are separated by exactly one space. There are no other spaces in the line. The names consist of Latin letters, the first letter is uppercase, the rest are lowercase. The length of any name is from 1 to 10 characters. The status can have the following values: rat for a rat, woman for a woman, child for a child, man for a man, captain for the captain. The crew contains exactly one captain.\n\nOutput\nPrint n lines. The i -th of them should contain the name of the crew member who must be the i -th one to leave the ship. Examples\n\nInput\n6 Jack captain Alice woman Charlie man Teddy rat Bob child Julia woman\n\nOutput\nTeddy Alice Bob Julia Charlie Jack","1906":"A. Harry Potter and Three Spells time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A long time ago (probably even in the first book), Nicholas Flamel, a great alchemist and the creator of the Philosopher's Stone, taught Harry Potter three useful spells. The first one allows you to convert a grams of sand into b grams of lead, the second one allows you to convert c grams of lead into d grams of gold and third one allows you to convert e grams of gold into f grams of sand. When Harry told his friends about these spells, Ron Weasley was amazed. After all, if they succeed in turning sand into lead, lead into gold, and then turning part of the gold into sand again and so on, then it will be possible to start with a small amount of sand and get huge amounts of gold! Even an infinite amount of gold! Hermione Granger, by contrast, was skeptical about that idea. She argues that according to the law of conservation of matter getting an infinite amount of matter, even using magic, is impossible. On the contrary, the amount of matter may even decrease during transformation, being converted to magical energy. Though Hermione's theory seems convincing, Ron won't believe her. As far as Ron is concerned, Hermione made up her law of conservation of matter to stop Harry and Ron wasting their time with this nonsense, and to make them go and do homework instead. That's why Ron has already collected a certain amount of sand for the experiments. A quarrel between the friends seems unavoidable... Help Harry to determine which one of his friends is right, and avoid the quarrel after all. To do this you have to figure out whether it is possible to get the amount of gold greater than any preassigned number from some finite amount of sand.\n\nInput\nThe first line contains 6 integers a , b , c , d , e , f ( 0 \u2264 a , b , c , d , e , f \u2264 1000 ).\n\nOutput\nPrint \"Ron\", if it is possible to get an infinitely large amount of gold having a certain finite amount of sand (and not having any gold and lead at all), i.e., Ron is right. Otherwise, print \"Hermione\". Examples\n\nInput\n100 200 250 150 200 250\n\nOutput\nRon\n\nInput\n100 50 50 200 200 100\n\nOutput\nHermione\n\nInput\n100 10 200 20 300 30\n\nOutput\nHermione\n\nInput\n0 0 0 0 0 0\n\nOutput\nHermione\n\nInput\n1 1 0 1 1 1\n\nOutput\nRon\n\nInput\n1 0 1 2 1 2\n\nOutput\nHermione\n\nInput\n100 1 100 1 0 1\n\nOutput\nRon\n\nNote\nConsider the first sample. Let's start with the 500 grams of sand. Apply the first spell 5 times and turn the sand into 1000 grams of lead. Then apply the second spell 4 times to get 600 grams of gold. Let\u2019s take 400 grams from the resulting amount of gold turn them back into sand. We get 500 grams of sand and 200 grams of gold. If we apply the same operations to 500 grams of sand again, we can get extra 200 grams of gold every time. Thus, you can get 200 , 400 , 600 etc. grams of gold, i.e., starting with a finite amount of sand ( 500 grams), you can get the amount of gold which is greater than any preassigned number. In the forth sample it is impossible to get sand, or lead, or gold, applying the spells. In the fifth sample an infinitely large amount of gold can be obtained by using only the second spell, which allows you to receive 1 gram of gold out of nothing.\n\nNote\nthat if such a second spell is available, then the first and the third one do not affect the answer at all. The seventh sample is more interesting. We can also start with a zero amount of sand there. With the aid of the third spell you can get sand out of nothing. We get 10000 grams of sand in this manner. Let's get 100 grams of lead using the first spell 100 times. Then make 1 gram of gold from them. We managed to receive 1 gram of gold, starting with a zero amount of sand! Clearly, in this manner you can get an infinitely large amount of gold.","1908":"D. Petya and His Friends time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya has a birthday soon. Due this wonderful event, Petya's friends decided to give him sweets. The total number of Petya's friends equals to n . Let us remind you the definition of the greatest common divisor: GCD ( a 1 , ..., a k ) = d , where d represents such a maximal positive number that each a i ( 1 \u2264 i \u2264 k ) is evenly divisible by d . At that, we assume that all a i 's are greater than zero. Knowing that Petya is keen on programming, his friends has agreed beforehand that the 1 -st friend gives a 1 sweets, the 2 -nd one gives a 2 sweets, ..., the n -th one gives a n sweets. At the same time, for any i and j ( 1 \u2264 i , j \u2264 n ) they want the GCD ( a i , a j ) not to be equal to 1 . However, they also want the following condition to be satisfied: GCD ( a 1 , a 2 , ..., a n ) = 1 . One more: all the a i should be distinct. Help the friends to choose the suitable numbers a 1 , ..., a n .\n\nInput\nThe first line contains an integer n ( 2 \u2264 n \u2264 50 ).\n\nOutput\nIf there is no answer, print \" -1 \" without quotes. Otherwise print a set of n distinct positive numbers a 1 , a 2 , ..., a n . Each line must contain one number. Each number must consist of not more than 100 digits, and must not contain any leading zeros. If there are several solutions to that problem, print any of them. Do not forget, please, that all of the following conditions must be true: For every i and j ( 1 \u2264 i , j \u2264 n ): GCD ( a i , a j ) \u2260 1 GCD ( a 1 , a 2 , ..., a n ) = 1 For every i and j ( 1 \u2264 i , j \u2264 n , i \u2260 j ): a i \u2260 a j Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d ). Examples\n\nInput\n3\n\nOutput\n99 55 11115\n\nInput\n4\n\nOutput\n385 360 792 8360","1910":"A. Petya and Java time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya has recently started attending a programming club. Naturally he is facing the problem of choosing a programming language. After long considerations he realized that Java is the best choice. The main argument in favor of choosing Java was that it has a very large integer data type, called BigInteger. But having attended several classes of the club, Petya realized that not all tasks require using the BigInteger type. It turned out that in some tasks it is much easier to use small data types. That's why a question arises: \"Which integer type to use if one wants to store a positive integer n ?\" Petya knows only 5 integer types: 1) byte occupies 1 byte and allows you to store numbers from - 128 to 127 2) short occupies 2 bytes and allows you to store numbers from - 32768 to 32767 3) int occupies 4 bytes and allows you to store numbers from - 2147483648 to 2147483647 4) long occupies 8 bytes and allows you to store numbers from - 9223372036854775808 to 9223372036854775807 5) BigInteger can store any integer number, but at that it is not a primitive type, and operations with it are much slower. For all the types given above the boundary values are included in the value range. From this list, Petya wants to choose the smallest type that can store a positive integer n . Since BigInteger works much slower, Peter regards it last. Help him.\n\nInput\nThe first line contains a positive number n . It consists of no more than 100 digits and doesn't contain any leading zeros. The number n can't be represented as an empty string. Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d ).\n\nOutput\nPrint the first type from the list \" byte , short , int , long , BigInteger \", that can store the natural number n , in accordance with the data given above. Examples\n\nInput\n127\n\nOutput\nbyte\n\nInput\n130\n\nOutput\nshort\n\nInput\n123456789101112131415161718192021222324\n\nOutput\nBigInteger","1939":"A. Partial Teacher time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A teacher decides to give toffees to his students. He asks n students to stand in a queue. Since the teacher is very partial, he follows the following rule to distribute toffees. He looks at the first two students and gives more toffees to the student having higher marks than the other one. If they have the same marks they get the same number of toffees. The same procedure is followed for each pair of adjacent students starting from the first one to the last one. It is given that each student receives at least one toffee. You have to find the number of toffees given to each student by the teacher such that the total number of toffees is minimum.\n\nInput\nThe first line of input contains the number of students n ( 2 \u2264 n \u2264 1000 ). The second line gives ( n - 1 ) characters consisting of \" L \", \" R \" and \" = \". For each pair of adjacent students \" L \" means that the left student has higher marks, \" R \" means that the right student has higher marks and \" = \" means that both have equal marks.\n\nOutput\nOutput consists of n integers separated by a space representing the number of toffees each student receives in the queue starting from the first one to the last one. Examples\n\nInput\n5 LRLR\n\nOutput\n2 1 2 1 2\n\nInput\n5 =RRR\n\nOutput\n1 1 2 3 4","1943":"A. Irrational problem time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Little Petya was given this problem for homework: You are given function (here represents the operation of taking the remainder). His task is to count the number of integers x in range [ a ; b ] with property f ( x ) = x . It is a pity that Petya forgot the order in which the remainders should be taken and wrote down only 4 numbers. Each of 24 possible orders of taking the remainder has equal probability of being chosen. For example, if Petya has numbers 1, 2, 3, 4 then he can take remainders in that order or first take remainder modulo 4, then modulo 2, 3, 1. There also are 22 other permutations of these numbers that represent orders in which remainder can be taken. In this problem 4 numbers wrote down by Petya will be pairwise distinct. Now it is impossible for Petya to complete the task given by teacher but just for fun he decided to find the number of integers with property that probability that f ( x ) = x is not less than 31.4159265352718281828459045% . In other words, Petya will pick up the number x if there exist at least 7 permutations of numbers p 1 , p 2 , p 3 , p 4 , for which f ( x ) = x .\n\nInput\nFirst line of the input will contain 6 integers, separated by spaces: p 1 , p 2 , p 3 , p 4 , a , b ( 1 \u2264 p 1 , p 2 , p 3 , p 4 \u2264 1000, 0 \u2264 a \u2264 b \u2264 31415 ). It is guaranteed that numbers p 1 , p 2 , p 3 , p 4 will be pairwise distinct.\n\nOutput\nOutput the number of integers in the given range that have the given property. Examples\n\nInput\n2 7 1 8 2 8\n\nOutput\n0\n\nInput\n20 30 40 50 0 100\n\nOutput\n20\n\nInput\n31 41 59 26 17 43\n\nOutput\n9","1947":"A. Young Physicist time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A guy named Vasya attends the final grade of a high school. One day Vasya decided to watch a match of his favorite hockey team. And, as the boy loves hockey very much, even more than physics, he forgot to do the homework. Specifically, he forgot to complete his physics tasks. Next day the teacher got very angry at Vasya and decided to teach him a lesson. He gave the lazy student a seemingly easy task: You are given an idle body in space and the forces that affect it. The body can be considered as a material point with coordinates (0; 0; 0). Vasya had only to answer whether it is in equilibrium. \"Piece of cake\" \u2014 thought Vasya, we need only to check if the sum of all vectors is equal to 0. So, Vasya began to solve the problem. But later it turned out that there can be lots and lots of these forces, and Vasya can not cope without your help. Help him. Write a program that determines whether a body is idle or is moving by the given vectors of forces.\n\nInput\nThe first line contains a positive integer n ( 1 \u2264 n \u2264 100 ), then follow n lines containing three integers each: the x i coordinate, the y i coordinate and the z i coordinate of the force vector, applied to the body ( - 100 \u2264 x i , y i , z i \u2264 100 ).\n\nOutput\nPrint the word \" YES \" if the body is in equilibrium, or the word \" NO \" if it is not. Examples\n\nInput\n3 4 1 7 -2 4 -1 1 -5 -3\n\nOutput\nNO\n\nInput\n3 3 -1 7 -5 2 -4 2 -1 -3\n\nOutput\nYES","1963":"A. Cookies time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Fangy collects cookies. Once he decided to take a box and put cookies into it in some way. If we take a square k \u00d7 k in size, divided into blocks 1 \u00d7 1 in size and paint there the main diagonal together with cells, which lie above it, then the painted area will be equal to the area occupied by one cookie k in size. Fangy also has a box with a square base 2 n \u00d7 2 n , divided into blocks 1 \u00d7 1 in size. In a box the cookies should not overlap, and they should not be turned over or rotated. See cookies of sizes 2 and 4 respectively on the figure: To stack the cookies the little walrus uses the following algorithm. He takes out of the repository the largest cookie which can fit in some place in the box and puts it there. Everything could be perfect but alas, in the repository the little walrus has infinitely many cookies of size 2 and larger, and there are no cookies of size 1 , therefore, empty cells will remain in the box. Fangy wants to know how many empty cells will be left in the end.\n\nInput\nThe first line contains a single integer n ( 0 \u2264 n \u2264 1000 ).\n\nOutput\nPrint the single number, equal to the number of empty cells in the box. The answer should be printed modulo 10 6 + 3 . Examples\n\nInput\n3\n\nOutput\n9\n\nNote\nIf the box possesses the base of 2 3 \u00d7 2 3 (as in the example), then the cookies will be put there in the following manner:","1965":"A. Way Too Long Words time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Sometimes some words like \" localization \" or \" internationalization \" are so long that writing them many times in one text is quite tiresome. Let's consider a word too long , if its length is strictly more than 10 characters. All too long words should be replaced with a special abbreviation. This abbreviation is made like this: we write down the first and the last letter of a word and between them we write the number of letters between the first and the last letters. That number is in decimal system and doesn't contain any leading zeroes. Thus, \" localization \" will be spelt as \" l10n \", and \" internationalization \u00bb will be spelt as \" i18n \". You are suggested to automatize the process of changing the words with abbreviations. At that all too long words should be replaced by the abbreviation and the words that are not too long should not undergo any changes.\n\nInput\nThe first line contains an integer n ( 1 \u2264 n \u2264 100 ). Each of the following n lines contains one word. All the words consist of lowercase Latin letters and possess the lengths of from 1 to 100 characters.\n\nOutput\nPrint n lines. The i -th line should contain the result of replacing of the i -th word from the input data. Examples\n\nInput\n4 word localization internationalization pneumonoultramicroscopicsilicovolcanoconiosis\n\nOutput\nword l10n i18n p43s","1981":"A. Room Leader time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Let us remind you part of the rules of Codeforces. The given rules slightly simplified, use the problem statement as a formal document. In the beginning of the round the contestants are divided into rooms. Each room contains exactly n participants. During the contest the participants are suggested to solve five problems, A , B , C , D and E . For each of these problem, depending on when the given problem was solved and whether it was solved at all, the participants receive some points. Besides, a contestant can perform hacks on other contestants. For each successful hack a contestant earns 100 points, for each unsuccessful hack a contestant loses 50 points. The number of points for every contestant is represented by the sum of points he has received from all his problems, including hacks. You are suggested to determine the leader for some room; the leader is a participant who has maximum points.\n\nInput\nThe first line contains an integer n , which is the number of contestants in the room ( 1 \u2264 n \u2264 50 ). The next n lines contain the participants of a given room. The i -th line has the format of \" handle i plus i minus i a i b i c i d i e i \" \u2014 it is the handle of a contestant, the number of successful hacks, the number of unsuccessful hacks and the number of points he has received from problems A , B , C , D , E correspondingly. The handle of each participant consists of Latin letters, digits and underscores and has the length from 1 to 20 characters. There are the following limitations imposed upon the numbers: 0 \u2264 plus i , minus i \u2264 50 ; 150 \u2264 a i \u2264 500 or a i = 0 , if problem A is not solved; 300 \u2264 b i \u2264 1000 or b i = 0 , if problem B is not solved; 450 \u2264 c i \u2264 1500 or c i = 0 , if problem C is not solved; 600 \u2264 d i \u2264 2000 or d i = 0 , if problem D is not solved; 750 \u2264 e i \u2264 2500 or e i = 0 , if problem E is not solved. All the numbers are integer. All the participants have different handles. It is guaranteed that there is exactly one leader in the room (i.e. there are no two participants with the maximal number of points).\n\nOutput\nPrint on the single line the handle of the room leader. Examples\n\nInput\n5 Petr 3 1 490 920 1000 1200 0 tourist 2 0 490 950 1100 1400 0 Egor 7 0 480 900 950 0 1000 c00lH4x0R 0 10 150 0 0 0 0 some_participant 2 1 450 720 900 0 0\n\nOutput\ntourist\n\nNote\nThe number of points that each participant from the example earns, are as follows: Petr \u2014 3860 tourist \u2014 4140 Egor \u2014 4030 c00lH4x0R \u2014 - 350 some_participant \u2014 2220 Thus, the leader of the room is tourist .","1985":"A. Life Without Zeros time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Can you imagine our life if we removed all zeros from it? For sure we will have many problems. In this problem we will have a simple example if we removed all zeros from our life, it's the addition operation. Let's assume you are given this equation a + b = c , where a and b are positive integers, and c is the sum of a and b . Now let's remove all zeros from this equation. Will the equation remain correct after removing all zeros? For example if the equation is 101 + 102 = 203 , if we removed all zeros it will be 11 + 12 = 23 which is still a correct equation. But if the equation is 105 + 106 = 211 , if we removed all zeros it will be 15 + 16 = 211 which is not a correct equation.\n\nInput\nThe input will consist of two lines, the first line will contain the integer a , and the second line will contain the integer b which are in the equation as described above ( 1 \u2264 a , b \u2264 10 9 ). There won't be any leading zeros in both. The value of c should be calculated as c = a + b .\n\nOutput\nThe output will be just one line, you should print \" YES \" if the equation will remain correct after removing all zeros, and print \" NO \" otherwise. Examples\n\nInput\n101 102\n\nOutput\nYES\n\nInput\n105 106\n\nOutput\nNO","1988":"E. Points time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given N points on a plane. Write a program which will find the sum of squares of distances between all pairs of points.\n\nInput\nThe first line of input contains one integer number N ( 1 \u2264 N \u2264 100 000 ) \u2014 the number of points. Each of the following N lines contain two integer numbers X and Y ( - 10 000 \u2264 X , Y \u2264 10 000 ) \u2014 the coordinates of points. Two or more points may coincide.\n\nOutput\nThe only line of output should contain the required sum of squares of distances between all pairs of points. Examples\n\nInput\n4 1 1 -1 -1 1 -1 -1 1\n\nOutput\n32","1990":"B. Falling Anvils time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output For some reason in many American cartoons anvils fall from time to time onto heroes' heads. Of course, safes, wardrobes, cruisers, planes fall sometimes too... But anvils do so most of all. Anvils come in different sizes and shapes. Quite often they get the hero stuck deep in the ground. But have you ever thought who throws anvils from the sky? From what height? We are sure that such questions have never troubled you! It turns out that throwing an anvil properly is not an easy task at all. Let's describe one of the most popular anvil throwing models. Let the height p of the potential victim vary in the range [0; a ] and the direction of the wind q vary in the range [ - b ; b ] . p and q could be any real (floating) numbers. Then we can assume that the anvil will fit the toon's head perfectly only if the following equation has at least one real root: Determine the probability with which an aim can be successfully hit by an anvil. You can assume that the p and q coefficients are chosen equiprobably and independently in their ranges.\n\nInput\nThe first line contains integer t ( 1 \u2264 t \u2264 10000 ) \u2014 amount of testcases. Each of the following t lines contain two space-separated integers a and b ( 0 \u2264 a , b \u2264 10 6 ). Pretests contain all the tests with 0 < a < 10, 0 \u2264 b < 10 .\n\nOutput\nPrint t lines \u2014 the probability of a successful anvil hit for each testcase. The absolute or relative error of the answer should not exceed 10 - 6 . Examples\n\nInput\n2 4 2 1 2\n\nOutput\n0.6250000000 0.5312500000","1992":"B. Easter Eggs time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The Easter Rabbit laid n eggs in a circle and is about to paint them. Each egg should be painted one color out of 7: red, orange, yellow, green, blue, indigo or violet. Also, the following conditions should be satisfied: Each of the seven colors should be used to paint at least one egg. Any four eggs lying sequentially should be painted different colors. Help the Easter Rabbit paint the eggs in the required manner. We know that it is always possible.\n\nInput\nThe only line contains an integer n \u2014 the amount of eggs ( 7 \u2264 n \u2264 100 ).\n\nOutput\nPrint one line consisting of n characters. The i -th character should describe the color of the i -th egg in the order they lie in the circle. The colors should be represented as follows: \" R \" stands for red, \" O \" stands for orange, \" Y \" stands for yellow, \" G \" stands for green, \" B \" stands for blue, \" I \" stands for indigo, \" V \" stands for violet. If there are several answers, print any of them. Examples\n\nInput\n8\n\nOutput\nROYGRBIV\n\nInput\n13\n\nOutput\nROYGBIVGBIVYG\n\nNote\nThe way the eggs will be painted in the first sample is shown on the picture:","1994":"A. Haiku time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Haiku is a genre of Japanese traditional poetry. A haiku poem consists of 17 syllables split into three phrases, containing 5, 7 and 5 syllables correspondingly (the first phrase should contain exactly 5 syllables, the second phrase should contain exactly 7 syllables, and the third phrase should contain exactly 5 syllables). A haiku masterpiece contains a description of a moment in those three phrases. Every word is important in a small poem, which is why haiku are rich with symbols. Each word has a special meaning, a special role. The main principle of haiku is to say much using a few words. To simplify the matter, in the given problem we will consider that the number of syllable in the phrase is equal to the number of vowel letters there. Only the following letters are regarded as vowel letters: \" a \", \" e \", \" i \", \" o \" and \" u \". Three phases from a certain poem are given. Determine whether it is haiku or not.\n\nInput\nThe input data consists of three lines. The length of each line is between 1 and 100 , inclusive. The i -th line contains the i -th phrase of the poem. Each phrase consists of one or more words, which are separated by one or more spaces. A word is a non-empty sequence of lowercase Latin letters. Leading and\/or trailing spaces in phrases are allowed. Every phrase has at least one non-space character. See the example for clarification.\n\nOutput\nPrint \" YES \" (without the quotes) if the poem is a haiku. Otherwise, print \" NO \" (also without the quotes). Examples\n\nInput\non codeforces beta round is running a rustling of keys\n\nOutput\nYES\n\nInput\nhow many gallons of edo s rain did you drink cuckoo\n\nOutput\nNO","1996":"A. Bus Game time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output After Fox Ciel won an onsite round of a programming contest, she took a bus to return to her castle. The fee of the bus was 220 yen. She met Rabbit Hanako in the bus. They decided to play the following game because they got bored in the bus. Initially, there is a pile that contains x 100-yen coins and y 10-yen coins. They take turns alternatively. Ciel takes the first turn. In each turn, they must take exactly 220 yen from the pile. In Ciel's turn, if there are multiple ways to take 220 yen, she will choose the way that contains the maximal number of 100-yen coins. In Hanako's turn, if there are multiple ways to take 220 yen, she will choose the way that contains the maximal number of 10-yen coins. If Ciel or Hanako can't take exactly 220 yen from the pile, she loses. Determine the winner of the game.\n\nInput\nThe first line contains two integers x ( 0 \u2264 x \u2264 10 6 ) and y ( 0 \u2264 y \u2264 10 6 ), separated by a single space.\n\nOutput\nIf Ciel wins, print \" Ciel \". Otherwise, print \" Hanako \". Examples\n\nInput\n2 2\n\nOutput\nCiel\n\nInput\n3 22\n\nOutput\nHanako\n\nNote\nIn the first turn (Ciel's turn), she will choose 2 100-yen coins and 2 10-yen coins. In the second turn (Hanako's turn), she will choose 1 100-yen coin and 12 10-yen coins. In the third turn (Ciel's turn), she can't pay exactly 220 yen, so Ciel will lose.","1998":"E. Beads time limit per test 5 seconds memory limit per test 64 megabytes input standard input output standard output One Martian boy called Zorg wants to present a string of beads to his friend from the Earth \u2014 Masha. He knows that Masha likes two colours: blue and red, \u2014 and right in the shop where he has come, there is a variety of adornments with beads of these two colours. All the strings of beads have a small fastener, and if one unfastens it, one might notice that all the strings of beads in the shop are of the same length. Because of the peculiarities of the Martian eyesight, if Zorg sees one blue-and-red string of beads first, and then the other with red beads instead of blue ones, and blue \u2014 instead of red, he regards these two strings of beads as identical. In other words, Zorg regards as identical not only those strings of beads that can be derived from each other by the string turnover, but as well those that can be derived from each other by a mutual replacement of colours and\/or by the string turnover. It is known that all Martians are very orderly, and if a Martian sees some amount of objects, he tries to put them in good order. Zorg thinks that a red bead is smaller than a blue one. Let's put 0 for a red bead, and 1 \u2014 for a blue one. From two strings the Martian puts earlier the string with a red bead in the i -th position, providing that the second string has a blue bead in the i -th position, and the first two beads i - 1 are identical. At first Zorg unfastens all the strings of beads, and puts them into small heaps so, that in each heap strings are identical, in his opinion. Then he sorts out the heaps and chooses the minimum string in each heap, in his opinion. He gives the unnecassary strings back to the shop assistant and says he doesn't need them any more. Then Zorg sorts out the remaining strings of beads and buys the string with index k . All these manupulations will take Zorg a lot of time, that's why he asks you to help and find the string of beads for Masha.\n\nInput\nThe input file contains two integers n and k ( 2 \u2264 n \u2264 50;1 \u2264 k \u2264 10 16 ) \u2014the length of a string of beads, and the index of the string, chosen by Zorg.\n\nOutput\nOutput the k -th string of beads, putting 0 for a red bead, and 1 \u2014 for a blue one. If it s impossible to find the required string, output the only number -1 . Examples\n\nInput\n4 4\n\nOutput\n0101\n\nNote\nLet's consider the example of strings of length 4 \u2014 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110. Zorg will divide them into heaps: {0001, 0111, 1000, 1110}, {0010, 0100, 1011, 1101}, {0011, 1100}, {0101, 1010}, {0110, 1001}. Then he will choose the minimum strings of beads in each heap: 0001, 0010, 0011, 0101, 0110. The forth string \u2014 0101.","2000":"A. Panoramix's Prediction time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A prime number is a number which has exactly two distinct divisors: one and itself. For example, numbers 2 , 7 , 3 are prime, and 1 , 6 , 4 are not. The next prime number after x is the smallest prime number greater than x . For example, the next prime number after 2 is 3 , and the next prime number after 3 is 5 .\n\nNote\nthat there is exactly one next prime number after each number. So 5 is not the next prime number for 2 . One cold April morning Panoramix predicted that soon Kakofonix will break free from his straitjacket, and this will be a black day for the residents of the Gallic countryside. Panoramix's prophecy tells that if some day Asterix and Obelix beat exactly x Roman soldiers, where x is a prime number, and next day they beat exactly y Roman soldiers, where y is the next prime number after x , then it's time to wait for Armageddon, for nothing can shut Kakofonix up while he sings his infernal song. Yesterday the Gauls beat n Roman soldiers and it turned out that the number n was prime! Today their victims were a troop of m Romans ( m > n ). Determine whether the Gauls should wait for the black day after today's victory of Asterix and Obelix?\n\nInput\nThe first and only input line contains two positive integers \u2014 n and m ( 2 \u2264 n < m \u2264 50 ). It is guaranteed that n is prime. Pretests contain all the cases with restrictions 2 \u2264 n < m \u2264 4 .\n\nOutput\nPrint YES , if m is the next prime number after n , or NO otherwise. Examples\n\nInput\n3 5\n\nOutput\nYES\n\nInput\n7 11\n\nOutput\nYES\n\nInput\n7 9\n\nOutput\nNO","2004":"B. Depression time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Do you remember a kind cartoon \"Beauty and the Beast\"? No, no, there was no firing from machine guns or radiation mutants time-travels! There was a beauty named Belle. Once she had violated the Beast's order and visited the West Wing. After that she was banished from the castle... Everybody was upset. The beautiful Belle was upset, so was the Beast, so was Lumiere the candlestick. But the worst thing was that Cogsworth was upset. Cogsworth is not a human, but is the mantel clock, which was often used as an alarm clock. Due to Cogsworth's frustration all the inhabitants of the castle were in trouble: now they could not determine when it was time to drink morning tea, and when it was time for an evening stroll. Fortunately, deep in the basement are lying digital clock showing the time in the format HH:MM . Now the residents of the castle face a difficult task. They should turn Cogsworth's hour and minute mustache hands in such a way, that Cogsworth began to show the correct time. Moreover they need to find turn angles in degrees for each mustache hands. The initial time showed by Cogsworth is 12:00 . You can only rotate the hands forward, that is, as is shown in the picture: As since there are many ways too select such angles because of full rotations, choose the smallest angles in the right (non-negative) direction.\n\nNote\nthat Cogsworth's hour and minute mustache hands move evenly and continuously. Hands are moving independently, so when turning one hand the other hand remains standing still.\n\nInput\nThe only line of input contains current time according to the digital clock, formatted as HH:MM ( 00 \u2264 HH \u2264 23 , 00 \u2264 MM \u2264 59 ). The mantel clock initially shows 12:00 . Pretests contain times of the beginning of some morning TV programs of the Channel One Russia.\n\nOutput\nPrint two numbers x and y \u2014 the angles of turning the hour and minute hands, respectively ( 0 \u2264 x , y < 360 ). The absolute or relative error in the answer should not exceed 10 - 9 . Examples\n\nInput\n12:00\n\nOutput\n0 0\n\nInput\n04:30\n\nOutput\n135 180\n\nInput\n08:17\n\nOutput\n248.5 102\n\nNote\nA note to the second example: the hour hand will be positioned exactly in the middle, between 4 and 5.","2020":"A. Plug-in time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarp thinks about the meaning of life very often. He does this constantly, even when typing in the editor. Every time he starts brooding he can no longer fully concentrate and repeatedly presses the keys that need to be pressed only once. For example, instead of the phrase \"how are you\" he can type \"hhoow aaaare yyoouu\". Polycarp decided to automate the process of correcting such errors. He decided to write a plug-in to the text editor that will remove pairs of identical consecutive letters (if there are any in the text). Of course, this is not exactly what Polycarp needs, but he's got to start from something! Help Polycarp and write the main plug-in module. Your program should remove from a string all pairs of identical letters, which are consecutive. If after the removal there appear new pairs, the program should remove them as well. Technically, its work should be equivalent to the following: while the string contains a pair of consecutive identical letters, the pair should be deleted.\n\nNote\nthat deleting of the consecutive identical letters can be done in any order, as any order leads to the same result.\n\nInput\nThe input data consists of a single line to be processed. The length of the line is from 1 to 2\u00b710 5 characters inclusive. The string contains only lowercase Latin letters.\n\nOutput\nPrint the given string after it is processed. It is guaranteed that the result will contain at least one character. Examples\n\nInput\nhhoowaaaareyyoouu\n\nOutput\nwre\n\nInput\nreallazy\n\nOutput\nrezy\n\nInput\nabacabaabacabaa\n\nOutput\na","2065":"A. Double Cola time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Sheldon, Leonard, Penny, Rajesh and Howard are in the queue for a \"Double Cola\" drink vending machine; there are no other people in the queue. The first one in the queue (Sheldon) buys a can, drinks it and doubles! The resulting two Sheldons go to the end of the queue. Then the next in the queue (Leonard) buys a can, drinks it and gets to the end of the queue as two Leonards, and so on. This process continues ad infinitum. For example, Penny drinks the third can of cola and the queue will look like this: Rajesh, Howard, Sheldon, Sheldon, Leonard, Leonard, Penny, Penny. Write a program that will print the name of a man who will drink the n -th can.\n\nNote\nthat in the very beginning the queue looks like that: Sheldon, Leonard, Penny, Rajesh, Howard. The first person is Sheldon.\n\nInput\nThe input data consist of a single integer n ( 1 \u2264 n \u2264 10 9 ). It is guaranteed that the pretests check the spelling of all the five names, that is, that they contain all the five possible answers.\n\nOutput\nPrint the single line \u2014 the name of the person who drinks the n -th can of cola. The cans are numbered starting from 1. Please note that you should spell the names like this: \" Sheldon \", \" Leonard \", \" Penny \", \" Rajesh \", \" Howard \" (without the quotes). In that order precisely the friends are in the queue initially. Examples\n\nInput\n1\n\nOutput\nSheldon\n\nInput\n6\n\nOutput\nSheldon\n\nInput\n1802\n\nOutput\nPenny","2073":"A. Toy Army time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The hero of our story, Valera, and his best friend Arcady are still in school, and therefore they spend all the free time playing turn-based strategy \"GAGA: Go And Go Again\". The gameplay is as follows. There are two armies on the playing field each of which consists of n men ( n is always even). The current player specifies for each of her soldiers an enemy's soldier he will shoot (a target) and then all the player's soldiers shot simultaneously. This is a game world, and so each soldier shoots perfectly, that is he absolutely always hits the specified target. If an enemy soldier is hit, he will surely die. It may happen that several soldiers had been indicated the same target. Killed soldiers do not participate in the game anymore. The game \"GAGA\" consists of three steps: first Valera makes a move, then Arcady, then Valera again and the game ends. You are asked to calculate the maximum total number of soldiers that may be killed during the game.\n\nInput\nThe input data consist of a single integer n ( 2 \u2264 n \u2264 10 8 , n is even). Please note that before the game starts there are 2 n soldiers on the fields.\n\nOutput\nPrint a single number \u2014 a maximum total number of soldiers that could be killed in the course of the game in three turns. Examples\n\nInput\n2\n\nOutput\n3\n\nInput\n4\n\nOutput\n6\n\nNote\nThe first sample test: 1) Valera's soldiers 1 and 2 shoot at Arcady's soldier 1. 2) Arcady's soldier 2 shoots at Valera's soldier 1. 3) Valera's soldier 1 shoots at Arcady's soldier 2. There are 3 soldiers killed in total: Valera's soldier 1 and Arcady's soldiers 1 and 2.","2088":"A. Trains time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya the programmer lives in the middle of the Programming subway branch. He has two girlfriends: Dasha and Masha, who live at the different ends of the branch, each one is unaware of the other one's existence. When Vasya has some free time, he goes to one of his girlfriends. He descends into the subway at some time, waits the first train to come and rides on it to the end of the branch to the corresponding girl. However, the trains run with different frequencies: a train goes to Dasha's direction every a minutes, but a train goes to Masha's direction every b minutes. If two trains approach at the same time, Vasya goes toward the direction with the lower frequency of going trains, that is, to the girl, to whose directions the trains go less frequently (see the note to the third sample). We know that the trains begin to go simultaneously before Vasya appears. That is the train schedule is such that there exists a moment of time when the two trains arrive simultaneously. Help Vasya count to which girlfriend he will go more often.\n\nInput\nThe first line contains two integers a and b ( a \u2260 b , 1 \u2264 a , b \u2264 10 6 ).\n\nOutput\nPrint \" Dasha \" if Vasya will go to Dasha more frequently, \" Masha \" if he will go to Masha more frequently, or \" Equal \" if he will go to both girlfriends with the same frequency. Examples\n\nInput\n3 7\n\nOutput\nDasha\n\nInput\n5 3\n\nOutput\nMasha\n\nInput\n2 3\n\nOutput\nEqual\n\nNote\nLet's take a look at the third sample. Let the trains start to go at the zero moment of time. It is clear that the moments of the trains' arrival will be periodic with period 6. That's why it is enough to show that if Vasya descends to the subway at a moment of time inside the interval (0, 6] , he will go to both girls equally often. If he descends to the subway at a moment of time from 0 to 2, he leaves for Dasha on the train that arrives by the second minute. If he descends to the subway at a moment of time from 2 to 3, he leaves for Masha on the train that arrives by the third minute. If he descends to the subway at a moment of time from 3 to 4, he leaves for Dasha on the train that arrives by the fourth minute. If he descends to the subway at a moment of time from 4 to 6, he waits for both trains to arrive by the sixth minute and goes to Masha as trains go less often in Masha's direction. In sum Masha and Dasha get equal time \u2014 three minutes for each one, thus, Vasya will go to both girlfriends equally often.","2089":"B. Keyboard time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Vasya learns to type. He has an unusual keyboard at his disposal: it is rectangular and it has n rows of keys containing m keys in each row. Besides, the keys are of two types. Some of the keys have lowercase Latin letters on them and some of the keys work like the \"Shift\" key on standard keyboards, that is, they make lowercase letters uppercase. Vasya can press one or two keys with one hand. However, he can only press two keys if the Euclidean distance between the centers of the keys does not exceed x . The keys are considered as squares with a side equal to 1. There are no empty spaces between neighbouring keys. Vasya is a very lazy boy, that's why he tries to type with one hand as he eats chips with his other one. However, it is possible that some symbol can't be typed with one hand only, because the distance between it and the closest \"Shift\" key is strictly larger than x . In this case he will have to use his other hand. Having typed the symbol, Vasya returns other hand back to the chips. You are given Vasya's keyboard and the text. Count the minimum number of times Vasya will have to use the other hand.\n\nInput\nThe first line contains three integers n , m , x ( 1 \u2264 n , m \u2264 30, 1 \u2264 x \u2264 50 ). Next n lines contain descriptions of all the keyboard keys. Each line contains the descriptions of exactly m keys, without spaces. The letter keys are marked with the corresponding lowercase letters. The \"Shift\" keys are marked with the \" S \" symbol. Then follow the length of the text q (1 \u2264 q \u2264 5\u00b710 5 ) . The last line contains the text T , which consists of q symbols, which are uppercase and lowercase Latin letters.\n\nOutput\nIf Vasya can type the text, then print the minimum number of times he will have to use his other hand. Otherwise, print \"-1\" (without the quotes). Examples\n\nInput\n2 2 1 ab cd 1 A\n\nOutput\n-1\n\nInput\n2 2 1 ab cd 1 e\n\nOutput\n-1\n\nInput\n2 2 1 ab cS 5 abcBA\n\nOutput\n1\n\nInput\n3 9 4 qwertyuio asdfghjkl SzxcvbnmS 35 TheQuIcKbRoWnFOXjummsovertHeLazYDOG\n\nOutput\n2\n\nNote\nIn the first sample the symbol \" A \" is impossible to print as there's no \"Shift\" key on the keyboard. In the second sample the symbol \" e \" is impossible to print as there's no such key on the keyboard. In the fourth sample the symbols \" T \", \" G \" are impossible to print with one hand. The other letters that are on the keyboard can be printed. Those symbols come up in the text twice, thus, the answer is 2.","2091":"A. Die Roll time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output Yakko, Wakko and Dot, world-famous animaniacs, decided to rest from acting in cartoons, and take a leave to travel a bit. Yakko dreamt to go to Pennsylvania, his Motherland and the Motherland of his ancestors. Wakko thought about Tasmania, its beaches, sun and sea. Dot chose Transylvania as the most mysterious and unpredictable place. But to their great regret, the leave turned to be very short, so it will be enough to visit one of the three above named places. That's why Yakko, as the cleverest, came up with a truly genius idea: let each of the three roll an ordinary six-sided die, and the one with the highest amount of points will be the winner, and will take the other two to the place of his\/her dreams. Yakko thrown a die and got Y points, Wakko \u2014 W points. It was Dot's turn. But she didn't hurry. Dot wanted to know for sure what were her chances to visit Transylvania. It is known that Yakko and Wakko are true gentlemen, that's why if they have the same amount of points with Dot, they will let Dot win.\n\nInput\nThe only line of the input file contains two natural numbers Y and W \u2014 the results of Yakko's and Wakko's die rolls.\n\nOutput\nOutput the required probability in the form of irreducible fraction in format \u00ab A\/B \u00bb, where A \u2014 the numerator, and B \u2014 the denominator. If the required probability equals to zero, output \u00ab 0\/1 \u00bb. If the required probability equals to 1, output \u00ab 1\/1 \u00bb. Examples\n\nInput\n4 2\n\nOutput\n1\/2\n\nNote\nDot will go to Transylvania, if she is lucky to roll 4, 5 or 6 points.","2093":"D. How many trees? time limit per test 1 second memory limit per test 64 megabytes input standard input output standard output In one very old text file there was written Great Wisdom. This Wisdom was so Great that nobody could decipher it, even Phong \u2014 the oldest among the inhabitants of Mainframe. But still he managed to get some information from there. For example, he managed to learn that User launches games for pleasure \u2014 and then terrible Game Cubes fall down on the city, bringing death to those modules, who cannot win the game... For sure, as guard Bob appeared in Mainframe many modules stopped fearing Game Cubes. Because Bob (as he is alive yet) has never been defeated by User, and he always meddles with Game Cubes, because he is programmed to this. However, unpleasant situations can happen, when a Game Cube falls down on Lost Angles. Because there lives a nasty virus \u2014 Hexadecimal, who is... mmm... very strange. And she likes to play very much. So, willy-nilly, Bob has to play with her first, and then with User. This time Hexadecimal invented the following entertainment: Bob has to leap over binary search trees with n nodes. We should remind you that a binary search tree is a binary tree, each node has a distinct key, for each node the following is true: the left sub-tree of a node contains only nodes with keys less than the node's key, the right sub-tree of a node contains only nodes with keys greater than the node's key. All the keys are different positive integer numbers from 1 to n . Each node of such a tree can have up to two children, or have no children at all (in the case when a node is a leaf). In Hexadecimal's game all the trees are different, but the height of each is not lower than h . In this problem \u00abheight\u00bb stands for the maximum amount of nodes on the way from the root to the remotest leaf, the root node and the leaf itself included. When Bob leaps over a tree, it disappears. Bob gets the access to a Cube, when there are no trees left. He knows how many trees he will have to leap over in the worst case. And you?\n\nInput\nThe input data contains two space-separated positive integer numbers n and h ( n \u2264 35 , h \u2264 n ).\n\nOutput\nOutput one number \u2014 the answer to the problem. It is guaranteed that it does not exceed 9\u00b710 18 . Examples\n\nInput\n3 2\n\nOutput\n5\n\nInput\n3 3\n\nOutput\n4","2102":"B. African Crossword time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output An African crossword is a rectangular table n \u00d7 m in size. Each cell of the table contains exactly one letter. This table (it is also referred to as grid) contains some encrypted word that needs to be decoded. To solve the crossword you should cross out all repeated letters in rows and columns. In other words, a letter should only be crossed out if and only if the corresponding column or row contains at least one more letter that is exactly the same. Besides, all such letters are crossed out simultaneously. When all repeated letters have been crossed out, we should write the remaining letters in a string. The letters that occupy a higher position follow before the letters that occupy a lower position. If the letters are located in one row, then the letter to the left goes first. The resulting word is the answer to the problem. You are suggested to solve an African crossword and print the word encrypted there.\n\nInput\nThe first line contains two integers n and m ( 1 \u2264 n , m \u2264 100 ). Next n lines contain m lowercase Latin letters each. That is the crossword grid.\n\nOutput\nPrint the encrypted word on a single line. It is guaranteed that the answer consists of at least one letter. Examples\n\nInput\n3 3 cba bcd cbc\n\nOutput\nabcd\n\nInput\n5 5 fcofd ooedo afaoa rdcdf eofsf\n\nOutput\ncodeforces","2104":"A. Newspaper Headline time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A newspaper is published in Walrusland. Its heading is s 1 , it consists of lowercase Latin letters. Fangy the little walrus wants to buy several such newspapers, cut out their headings, glue them one to another in order to get one big string. After that walrus erase several letters from this string in order to get a new word s 2 . It is considered that when Fangy erases some letter, there's no whitespace formed instead of the letter. That is, the string remains unbroken and it still only consists of lowercase Latin letters. For example, the heading is \" abc \". If we take two such headings and glue them one to the other one, we get \" abcabc \". If we erase the letters on positions 1 and 5 , we get a word \" bcac \". Which least number of newspaper headings s 1 will Fangy need to glue them, erase several letters and get word s 2 ?\n\nInput\nThe input data contain two lines. The first line contain the heading s 1 , the second line contains the word s 2 . The lines only consist of lowercase Latin letters ( 1 \u2264 | s 1 | \u2264 10 4 , 1 \u2264 | s 2 | \u2264 10 6 ).\n\nOutput\nIf it is impossible to get the word s 2 in the above-described manner, print \"-1\" (without the quotes). Otherwise, print the least number of newspaper headings s 1 , which Fangy will need to receive the word s 2 . Examples\n\nInput\nabc xyz\n\nOutput\n-1\n\nInput\nabcd dabc\n\nOutput\n2","2105":"B. Queue time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There are n walruses standing in a queue in an airport. They are numbered starting from the queue's tail: the 1 -st walrus stands at the end of the queue and the n -th walrus stands at the beginning of the queue. The i -th walrus has the age equal to a i . The i -th walrus becomes displeased if there's a younger walrus standing in front of him, that is, if exists such j ( i < j ), that a i > a j . The displeasure of the i -th walrus is equal to the number of walruses between him and the furthest walrus ahead of him, which is younger than the i -th one. That is, the further that young walrus stands from him, the stronger the displeasure is. The airport manager asked you to count for each of n walruses in the queue his displeasure.\n\nInput\nThe first line contains an integer n ( 2 \u2264 n \u2264 10 5 ) \u2014 the number of walruses in the queue. The second line contains integers a i ( 1 \u2264 a i \u2264 10 9 ).\n\nNote\nthat some walruses can have the same age but for the displeasure to emerge the walrus that is closer to the head of the queue needs to be strictly younger than the other one.\n\nOutput\nPrint n numbers: if the i -th walrus is pleased with everything, print \"-1\" (without the quotes). Otherwise, print the i -th walrus's displeasure: the number of other walruses that stand between him and the furthest from him younger walrus. Examples\n\nInput\n6 10 8 5 3 50 45\n\nOutput\n2 1 0 -1 0 -1\n\nInput\n7 10 4 6 3 2 8 15\n\nOutput\n4 2 1 0 -1 -1 -1\n\nInput\n5 10 3 1 10 11\n\nOutput\n1 0 -1 -1 -1","2130":"A. Chips time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There are n walruses sitting in a circle. All of them are numbered in the clockwise order: the walrus number 2 sits to the left of the walrus number 1 , the walrus number 3 sits to the left of the walrus number 2 , ..., the walrus number 1 sits to the left of the walrus number n . The presenter has m chips. The presenter stands in the middle of the circle and starts giving the chips to the walruses starting from walrus number 1 and moving clockwise. The walrus number i gets i chips. If the presenter can't give the current walrus the required number of chips, then the presenter takes the remaining chips and the process ends. Determine by the given n and m how many chips the presenter will get in the end.\n\nInput\nThe first line contains two integers n and m ( 1 \u2264 n \u2264 50 , 1 \u2264 m \u2264 10 4 ) \u2014 the number of walruses and the number of chips correspondingly.\n\nOutput\nPrint the number of chips the presenter ended up with. Examples\n\nInput\n4 11\n\nOutput\n0\n\nInput\n17 107\n\nOutput\n2\n\nInput\n3 8\n\nOutput\n1\n\nNote\nIn the first sample the presenter gives one chip to the walrus number 1 , two chips to the walrus number 2 , three chips to the walrus number 3 , four chips to the walrus number 4 , then again one chip to the walrus number 1 . After that the presenter runs out of chips. He can't give anything to the walrus number 2 and the process finishes. In the third sample the presenter gives one chip to the walrus number 1 , two chips to the walrus number 2 , three chips to the walrus number 3 , then again one chip to the walrus number 1 . The presenter has one chip left and he can't give two chips to the walrus number 2 , that's why the presenter takes the last chip.","2159":"A. Restoring Password time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Igor K. always used to trust his favorite Kashpirovsky Antivirus. That is why he didn't hesitate to download the link one of his groupmates sent him via QIP Infinium. The link was said to contain \"some real funny stuff about swine influenza\". The antivirus had no objections and Igor K. run the flash application he had downloaded. Immediately his QIP Infinium said: \"invalid login\/password\". Igor K. entered the ISQ from his additional account and looked at the info of his main one. His name and surname changed to \"H1N1\" and \"Infected\" correspondingly, and the \"Additional Information\" field contained a strange-looking binary code 80 characters in length, consisting of zeroes and ones. \"I've been hacked\" \u2014 thought Igor K. and run the Internet Exploiter browser to quickly type his favourite search engine's address. Soon he learned that it really was a virus that changed ISQ users' passwords. Fortunately, he soon found out that the binary code was actually the encrypted password where each group of 10 characters stood for one decimal digit. Accordingly, the original password consisted of 8 decimal digits. Help Igor K. restore his ISQ account by the encrypted password and encryption specification.\n\nInput\nThe input data contains 11 lines. The first line represents the binary code 80 characters in length. That is the code written in Igor K.'s ISQ account's info. Next 10 lines contain pairwise distinct binary codes 10 characters in length, corresponding to numbers 0, 1, ..., 9.\n\nOutput\nPrint one line containing 8 characters \u2014 The password to Igor K.'s ISQ account. It is guaranteed that the solution exists. Examples\n\nInput\n01001100100101100000010110001001011001000101100110010110100001011010100101101100 0100110000 0100110010 0101100000 0101100010 0101100100 0101100110 0101101000 0101101010 0101101100 0101101110\n\nOutput\n12345678\n\nInput\n10101101111001000010100100011010101101110010110111011000100011011110010110001000 1001000010 1101111001 1001000110 1010110111 0010110111 1101001101 1011000001 1110010101 1011011000 0110001000\n\nOutput\n30234919","2210":"A. Football time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Petya loves football very much. One day, as he was watching a football match, he was writing the players' current positions on a piece of paper. To simplify the situation he depicted it as a string consisting of zeroes and ones. A zero corresponds to players of one team; a one corresponds to players of another team. If there are at least 7 players of some team standing one after another, then the situation is considered dangerous. For example, the situation 00100110111111101 is dangerous and 11110111011101 is not. You are given the current situation. Determine whether it is dangerous or not.\n\nInput\nThe first input line contains a non-empty string consisting of characters \"0\" and \"1\", which represents players. The length of the string does not exceed 100 characters. There's at least one player from each team present on the field.\n\nOutput\nPrint \"YES\" if the situation is dangerous. Otherwise, print \"NO\". Examples\n\nInput\n001001\n\nOutput\nNO\n\nInput\n1000000001\n\nOutput\nYES","2232":"B. Bear and Different Names time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output In the army, it isn't easy to form a group of soldiers that will be effective on the battlefield. The communication is crucial and thus no two soldiers should share a name (what would happen if they got an order that Bob is a scouter, if there are two Bobs?). A group of soldiers is effective if and only if their names are different. For example, a group (John, Bob, Limak) would be effective, while groups (Gary, Bob, Gary) and (Alice, Alice) wouldn't. You are a spy in the enemy's camp. You noticed n soldiers standing in a row, numbered 1 through n . The general wants to choose a group of k consecutive soldiers. For every k consecutive soldiers, the general wrote down whether they would be an effective group or not. You managed to steal the general's notes, with n - k + 1 strings s 1 , s 2 , ..., s n - k + 1 , each either \" YES \" or \" NO \". The string s 1 describes a group of soldiers 1 through k (\" YES \" if the group is effective, and \" NO \" otherwise). The string s 2 describes a group of soldiers 2 through k + 1 . And so on, till the string s n - k + 1 that describes a group of soldiers n - k + 1 through n . Your task is to find possible names of n soldiers. Names should match the stolen notes. Each name should be a string that consists of between 1 and 10 English letters, inclusive. The first letter should be uppercase, and all other letters should be lowercase. Names don't have to be existing names \u2014 it's allowed to print \" Xyzzzdj \" or \" T \" for example. Find and print any solution. It can be proved that there always exists at least one solution.\n\nInput\nThe first line of the input contains two integers n and k ( 2 \u2264 k \u2264 n \u2264 50 ) \u2014 the number of soldiers and the size of a group respectively. The second line contains n - k + 1 strings s 1 , s 2 , ..., s n - k + 1 . The string s i is \" YES \" if the group of soldiers i through i + k - 1 is effective, and \" NO \" otherwise.\n\nOutput\nFind any solution satisfying all given conditions. In one line print n space-separated strings, denoting possible names of soldiers in the order. The first letter of each name should be uppercase, while the other letters should be lowercase. Each name should contain English letters only and has length from 1 to 10 . If there are multiple valid solutions, print any of them. Examples\n\nInput\n8 3 NO NO YES YES YES NO\n\nOutput\nAdam Bob Bob Cpqepqwer Limak Adam Bob Adam\n\nInput\n9 8 YES NO\n\nOutput\nR Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\n\nInput\n3 2 NO NO\n\nOutput\nNa Na Na\n\nNote\nIn the first sample, there are 8 soldiers. For every 3 consecutive ones we know whether they would be an effective group. Let's analyze the provided sample output: First three soldiers (i.e. Adam, Bob, Bob) wouldn't be an effective group because there are two Bobs. Indeed, the string s 1 is \" NO \". Soldiers 2 through 4 (Bob, Bob, Cpqepqwer) wouldn't be effective either, and the string s 2 is \" NO \". Soldiers 3 through 5 (Bob, Cpqepqwer, Limak) would be effective, and the string s 3 is \" YES \". ..., Soldiers 6 through 8 (Adam, Bob, Adam) wouldn't be effective, and the string s 6 is \" NO \".","2233":"C. Maximum Number time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Stepan has the newest electronic device with a display. Different digits can be shown on it. Each digit is shown on a seven-section indicator like it is shown on the picture below. So, for example, to show the digit 3 on the display, 5 sections must be highlighted; and for the digit 6 , 6 sections must be highlighted. The battery of the newest device allows to highlight at most n sections on the display. Stepan wants to know the maximum possible integer number which can be shown on the display of his newest device. Your task is to determine this number.\n\nNote\nthat this number must not contain leading zeros. Assume that the size of the display is enough to show any integer.\n\nInput\nThe first line contains the integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the maximum number of sections which can be highlighted on the display.\n\nOutput\nPrint the maximum integer which can be shown on the display of Stepan's newest device. Examples\n\nInput\n2\n\nOutput\n1\n\nInput\n3\n\nOutput\n7","2235":"A. A Serial Killer time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Our beloved detective, Sherlock is currently trying to catch a serial killer who kills a person each day. Using his powers of deduction, he came to know that the killer has a strategy for selecting his next victim. The killer starts with two potential victims on his first day, selects one of these two, kills selected victim and replaces him with a new person. He repeats this procedure each day. This way, each day he has two potential victims to choose from. Sherlock knows the initial two potential victims. Also, he knows the murder that happened on a particular day and the new person who replaced this victim. You need to help him get all the pairs of potential victims at each day so that Sherlock can observe some pattern.\n\nInput\nFirst line of input contains two names (length of each of them doesn't exceed 10 ), the two initials potential victims. Next line contains integer n ( 1 \u2264 n \u2264 1000 ), the number of days. Next n lines contains two names (length of each of them doesn't exceed 10 ), first being the person murdered on this day and the second being the one who replaced that person. The input format is consistent, that is, a person murdered is guaranteed to be from the two potential victims at that time. Also, all the names are guaranteed to be distinct and consists of lowercase English letters.\n\nOutput\nOutput n + 1 lines, the i -th line should contain the two persons from which the killer selects for the i -th murder. The ( n + 1) -th line should contain the two persons from which the next victim is selected. In each line, the two names can be printed in any order. Examples\n\nInput\nross rachel 4 ross joey rachel phoebe phoebe monica monica chandler\n\nOutput\nross rachel joey rachel joey phoebe joey monica joey chandler\n\nInput\nicm codeforces 1 codeforces technex\n\nOutput\nicm codeforces icm technex\n\nNote\nIn first example, the killer starts with ross and rachel . After day 1 , ross is killed and joey appears. After day 2 , rachel is killed and phoebe appears. After day 3 , phoebe is killed and monica appears. After day 4 , monica is killed and chandler appears.","2237":"B. Game of Credit Cards time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output After the fourth season Sherlock and Moriary have realized the whole foolishness of the battle between them and decided to continue their competitions in peaceful game of Credit Cards. Rules of this game are simple: each player bring his favourite n -digit credit card. Then both players name the digits written on their cards one by one. If two digits are not equal, then the player, whose digit is smaller gets a flick (knock in the forehead usually made with a forefinger) from the other player. For example, if n = 3 , Sherlock's card is 123 and Moriarty's card has number 321 , first Sherlock names 1 and Moriarty names 3 so Sherlock gets a flick. Then they both digit 2 so no one gets a flick. Finally, Sherlock names 3 , while Moriarty names 1 and gets a flick. Of course, Sherlock will play honestly naming digits one by one in the order they are given, while Moriary, as a true villain, plans to cheat. He is going to name his digits in some other order (however, he is not going to change the overall number of occurences of each digit). For example, in case above Moriarty could name 1 , 2 , 3 and get no flicks at all, or he can name 2 , 3 and 1 to give Sherlock two flicks. Your goal is to find out the minimum possible number of flicks Moriarty will get (no one likes flicks) and the maximum possible number of flicks Sherlock can get from Moriarty. Note, that these two goals are different and the optimal result may be obtained by using different strategies.\n\nInput\nThe first line of the input contains a single integer n ( 1 \u2264 n \u2264 1000 ) \u2014 the number of digits in the cards Sherlock and Moriarty are going to use. The second line contains n digits \u2014 Sherlock's credit card number. The third line contains n digits \u2014 Moriarty's credit card number.\n\nOutput\nFirst print the minimum possible number of flicks Moriarty will get. Then print the maximum possible number of flicks that Sherlock can get from Moriarty. Examples\n\nInput\n3 123 321\n\nOutput\n0 2\n\nInput\n2 88 00\n\nOutput\n2 0\n\nNote\nFirst sample is elaborated in the problem statement. In the second sample, there is no way Moriarty can avoid getting two flicks.","2240":"A. String Game time limit per test 2 seconds memory limit per test 512 megabytes input standard input output standard output Little Nastya has a hobby, she likes to remove some letters from word, to obtain another word. But it turns out to be pretty hard for her, because she is too young. Therefore, her brother Sergey always helps her. Sergey gives Nastya the word t and wants to get the word p out of it. Nastya removes letters in a certain order (one after another, in this order strictly), which is specified by permutation of letters' indices of the word t : a 1 ... a | t | . We denote the length of word x as | x | .\n\nNote\nthat after removing one letter, the indices of other letters don't change. For example, if t = \" nastya \" and a = [4, 1, 5, 3, 2, 6] then removals make the following sequence of words \" nastya \" \" nas t ya \" \" n as t ya \" \" n as t y a \" \" n a s t y a \" \" n a s t y a \" \" n a s t y a \". Sergey knows this permutation. His goal is to stop his sister at some point and continue removing by himself to get the word p . Since Nastya likes this activity, Sergey wants to stop her as late as possible. Your task is to determine, how many letters Nastya can remove before she will be stopped by Sergey. It is guaranteed that the word p can be obtained by removing the letters from word t .\n\nInput\nThe first and second lines of the input contain the words t and p , respectively. Words are composed of lowercase letters of the Latin alphabet ( 1 \u2264 | p | < | t | \u2264 200 000 ). It is guaranteed that the word p can be obtained by removing the letters from word t . Next line contains a permutation a 1 , a 2 , ..., a | t | of letter indices that specifies the order in which Nastya removes letters of t ( 1 \u2264 a i \u2264 | t | , all a i are distinct).\n\nOutput\nPrint a single integer number, the maximum number of letters that Nastya can remove. Examples\n\nInput\nababcba abb 5 3 4 1 7 6 2\n\nOutput\n3\n\nInput\nbbbabb bb 1 6 3 4 2 5\n\nOutput\n4\n\nNote\nIn the first sample test sequence of removing made by Nastya looks like this: \" ababcba \" \" abab c ba \" \" ab a b c ba \" \" ab a b c ba \" Nastya can not continue, because it is impossible to get word \" abb \" from word \" a b a b c ba \". So, Nastya will remove only three letters.","2242":"D. String Game time limit per test 2 seconds memory limit per test 512 megabytes input standard input output standard output Little Nastya has a hobby, she likes to remove some letters from word, to obtain another word. But it turns out to be pretty hard for her, because she is too young. Therefore, her brother Sergey always helps her. Sergey gives Nastya the word t and wants to get the word p out of it. Nastya removes letters in a certain order (one after another, in this order strictly), which is specified by permutation of letters' indices of the word t : a 1 ... a | t | . We denote the length of word x as | x | .\n\nNote\nthat after removing one letter, the indices of other letters don't change. For example, if t = \" nastya \" and a = [4, 1, 5, 3, 2, 6] then removals make the following sequence of words \" nastya \" \" nas t ya \" \" n as t ya \" \" n as t y a \" \" n a s t y a \" \" n a s t y a \" \" n a s t y a \". Sergey knows this permutation. His goal is to stop his sister at some point and continue removing by himself to get the word p . Since Nastya likes this activity, Sergey wants to stop her as late as possible. Your task is to determine, how many letters Nastya can remove before she will be stopped by Sergey. It is guaranteed that the word p can be obtained by removing the letters from word t .\n\nInput\nThe first and second lines of the input contain the words t and p , respectively. Words are composed of lowercase letters of the Latin alphabet ( 1 \u2264 | p | < | t | \u2264 200 000 ). It is guaranteed that the word p can be obtained by removing the letters from word t . Next line contains a permutation a 1 , a 2 , ..., a | t | of letter indices that specifies the order in which Nastya removes letters of t ( 1 \u2264 a i \u2264 | t | , all a i are distinct).\n\nOutput\nPrint a single integer number, the maximum number of letters that Nastya can remove. Examples\n\nInput\nababcba abb 5 3 4 1 7 6 2\n\nOutput\n3\n\nInput\nbbbabb bb 1 6 3 4 2 5\n\nOutput\n4\n\nNote\nIn the first sample test sequence of removing made by Nastya looks like this: \" ababcba \" \" abab c ba \" \" ab a b c ba \" \" ab a b c ba \" Nastya can not continue, because it is impossible to get word \" abb \" from word \" a b a b c ba \". So, Nastya will remove only three letters.","2244":"A. Andryusha and Socks time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Andryusha is an orderly boy and likes to keep things in their place. Today he faced a problem to put his socks in the wardrobe. He has n distinct pairs of socks which are initially in a bag. The pairs are numbered from 1 to n . Andryusha wants to put paired socks together and put them in the wardrobe. He takes the socks one by one from the bag, and for each sock he looks whether the pair of this sock has been already took out of the bag, or not. If not (that means the pair of this sock is still in the bag), he puts the current socks on the table in front of him. Otherwise, he puts both socks from the pair to the wardrobe. Andryusha remembers the order in which he took the socks from the bag. Can you tell him what is the maximum number of socks that were on the table at the same time?\n\nInput\nThe first line contains the single integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of sock pairs. The second line contains 2 n integers x 1 , x 2 , ..., x 2 n ( 1 \u2264 x i \u2264 n ), which describe the order in which Andryusha took the socks from the bag. More precisely, x i means that the i -th sock Andryusha took out was from pair x i . It is guaranteed that Andryusha took exactly two socks of each pair.\n\nOutput\nPrint single integer \u2014 the maximum number of socks that were on the table at the same time. Examples\n\nInput\n1 1 1\n\nOutput\n1\n\nInput\n3 2 1 1 3 2 3\n\nOutput\n2\n\nNote\nIn the first example Andryusha took a sock from the first pair and put it on the table. Then he took the next sock which is from the first pair as well, so he immediately puts both socks to the wardrobe. Thus, at most one sock was on the table at the same time. In the second example Andryusha behaved as follows: Initially the table was empty, he took out a sock from pair 2 and put it on the table. Sock (2) was on the table. Andryusha took out a sock from pair 1 and put it on the table. Socks (1, 2) were on the table. Andryusha took out a sock from pair 1 , and put this pair into the wardrobe. Sock (2) was on the table. Andryusha took out a sock from pair 3 and put it on the table. Socks (2, 3) were on the table. Andryusha took out a sock from pair 2 , and put this pair into the wardrobe. Sock (3) was on the table. Andryusha took out a sock from pair 3 and put this pair into the wardrobe. Thus, at most two socks were on the table at the same time.","2246":"A. Numbers Joke time limit per test 2 seconds memory limit per test 64 megabytes input standard input output standard output\n\nInput\nThe input contains a single integer a ( 1 \u2264 a \u2264 30 ).\n\nOutput\nOutput a single integer. Example\n\nInput\n3\n\nOutput\n27","2248":"C. Anton and Fairy Tale time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Anton likes to listen to fairy tales, especially when Danik, Anton's best friend, tells them. Right now Danik tells Anton a fairy tale: \"Once upon a time, there lived an emperor. He was very rich and had much grain. One day he ordered to build a huge barn to put there all his grain. Best builders were building that barn for three days and three nights. But they overlooked and there remained a little hole in the barn, from which every day sparrows came through. Here flew a sparrow, took a grain and flew away...\" More formally, the following takes place in the fairy tale. At the beginning of the first day the barn with the capacity of n grains was full. Then, every day (starting with the first day) the following happens: m grains are brought to the barn. If m grains doesn't fit to the barn, the barn becomes full and the grains that doesn't fit are brought back (in this problem we can assume that the grains that doesn't fit to the barn are not taken into account). Sparrows come and eat grain. In the i -th day i sparrows come, that is on the first day one sparrow come, on the second day two sparrows come and so on. Every sparrow eats one grain. If the barn is empty, a sparrow eats nothing. Anton is tired of listening how Danik describes every sparrow that eats grain from the barn. Anton doesn't know when the fairy tale ends, so he asked you to determine, by the end of which day the barn will become empty for the first time. Help Anton and write a program that will determine the number of that day!\n\nInput\nThe only line of the input contains two integers n and m (1 \u2264 n , m \u2264 10 18 ) \u2014 the capacity of the barn and the number of grains that are brought every day.\n\nOutput\nOutput one integer \u2014 the number of the day when the barn will become empty for the first time. Days are numbered starting with one. Examples\n\nInput\n5 2\n\nOutput\n4\n\nInput\n8 1\n\nOutput\n5\n\nNote\nIn the first sample the capacity of the barn is five grains and two grains are brought every day. The following happens: At the beginning of the first day grain is brought to the barn. It's full, so nothing happens. At the end of the first day one sparrow comes and eats one grain, so 5 - 1 = 4 grains remain. At the beginning of the second day two grains are brought. The barn becomes full and one grain doesn't fit to it. At the end of the second day two sparrows come. 5 - 2 = 3 grains remain. At the beginning of the third day two grains are brought. The barn becomes full again. At the end of the third day three sparrows come and eat grain. 5 - 3 = 2 grains remain. At the beginning of the fourth day grain is brought again. 2 + 2 = 4 grains remain. At the end of the fourth day four sparrows come and eat grain. 4 - 4 = 0 grains remain. The barn is empty. So the answer is 4 , because by the end of the fourth day the barn becomes empty.","2250":"A. The Monster time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A monster is chasing after Rick and Morty on another planet. They're so frightened that sometimes they scream. More accurately, Rick screams at times b , b + a , b + 2 a , b + 3 a , ... and Morty screams at times d , d + c , d + 2 c , d + 3 c , ... . The Monster will catch them if at any point they scream at the same time, so it wants to know when it will catch them (the first time they scream at the same time) or that they will never scream at the same time.\n\nInput\nThe first line of input contains two integers a and b ( 1 \u2264 a , b \u2264 100 ). The second line contains two integers c and d ( 1 \u2264 c , d \u2264 100 ).\n\nOutput\nPrint the first time Rick and Morty will scream at the same time, or - 1 if they will never scream at the same time. Examples\n\nInput\n20 2 9 19\n\nOutput\n82\n\nInput\n2 1 16 12\n\nOutput\n-1\n\nNote\nIn the first sample testcase, Rick's 5 th scream and Morty's 8 th time are at time 82 . In the second sample testcase, all Rick's screams will be at odd times and Morty's will be at even times, so they will never scream at the same time.","2252":"A. Bear and Big Brother time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Bear Limak wants to become the largest of bears, or at least to become larger than his brother Bob. Right now, Limak and Bob weigh a and b respectively. It's guaranteed that Limak's weight is smaller than or equal to his brother's weight. Limak eats a lot and his weight is tripled after every year, while Bob's weight is doubled after every year. After how many full years will Limak become strictly larger (strictly heavier) than Bob?\n\nInput\nThe only line of the input contains two integers a and b ( 1 \u2264 a \u2264 b \u2264 10 ) \u2014 the weight of Limak and the weight of Bob respectively.\n\nOutput\nPrint one integer, denoting the integer number of years after which Limak will become strictly larger than Bob. Examples\n\nInput\n4 7\n\nOutput\n2\n\nInput\n4 9\n\nOutput\n3\n\nInput\n1 1\n\nOutput\n1\n\nNote\nIn the first sample, Limak weighs 4 and Bob weighs 7 initially. After one year their weights are 4\u00b73 = 12 and 7\u00b72 = 14 respectively (one weight is tripled while the other one is doubled). Limak isn't larger than Bob yet. After the second year weights are 36 and 28 , so the first weight is greater than the second one. Limak became larger than Bob after two years so you should print 2 . In the second sample, Limak's and Bob's weights in next years are: 12 and 18 , then 36 and 36 , and finally 108 and 72 (after three years). The answer is 3 . Remember that Limak wants to be larger than Bob and he won't be satisfied with equal weights. In the third sample, Limak becomes larger than Bob after the first year. Their weights will be 3 and 2 then.","2269":"A. Bank Robbery time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output A robber has attempted to rob a bank but failed to complete his task. However, he had managed to open all the safes. Oleg the bank client loves money (who doesn't), and decides to take advantage of this failed robbery and steal some money from the safes. There are many safes arranged in a line, where the i -th safe from the left is called safe i . There are n banknotes left in all the safes in total. The i -th banknote is in safe x i . Oleg is now at safe a . There are two security guards, one of which guards the safe b such that b < a , i.e. the first guard is to the left of Oleg. The other guard guards the safe c so that c > a , i.e. he is to the right of Oleg. The two guards are very lazy, so they do not move. In every second, Oleg can either take all the banknotes from the current safe or move to any of the neighboring safes. However, he cannot visit any safe that is guarded by security guards at any time, becaues he might be charged for stealing. Determine the maximum amount of banknotes Oleg can gather.\n\nInput\nThe first line of input contains three space-separated integers, a , b and c ( 1 \u2264 b < a < c \u2264 10 9 ), denoting the positions of Oleg, the first security guard and the second security guard, respectively. The next line of input contains a single integer n ( 1 \u2264 n \u2264 10 5 ), denoting the number of banknotes. The next line of input contains n space-separated integers x 1 , x 2 , ..., x n ( 1 \u2264 x i \u2264 10 9 ), denoting that the i -th banknote is located in the x i -th safe.\n\nNote\nthat x i are not guaranteed to be distinct.\n\nOutput\nOutput a single integer: the maximum number of banknotes Oleg can take. Examples\n\nInput\n5 3 7 8 4 7 5 5 3 6 2 8\n\nOutput\n4\n\nInput\n6 5 7 5 1 5 7 92 3\n\nOutput\n0\n\nNote\nIn the first example Oleg can take the banknotes in positions 4 , 5 , 6 (note that there are 2 banknotes at position 5 ). Oleg can't take the banknotes in safes 7 and 8 because he can't run into the second security guard. Similarly, Oleg cannot take the banknotes at positions 3 and 2 because he can't run into the first security guard. Thus, he can take a maximum of 4 banknotes. For the second sample, Oleg can't take any banknotes without bumping into any of the security guards.","2271":"D. Lie or Truth time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vasya has a sequence of cubes and exactly one integer is written on each cube. Vasya exhibited all his cubes in a row. So the sequence of numbers written on the cubes in the order from the left to the right equals to a 1 , a 2 , ..., a n . While Vasya was walking, his little brother Stepan played with Vasya's cubes and changed their order, so now the sequence of numbers written on the cubes became equal to b 1 , b 2 , ..., b n . Stepan said that he swapped only cubes which where on the positions between l and r , inclusive, and did not remove or add any other cubes (i. e. he said that he reordered cubes between positions l and r , inclusive, in some way). Your task is to determine if it is possible that Stepan said the truth, or it is guaranteed that Stepan deceived his brother.\n\nInput\nThe first line contains three integers n , l , r ( 1 \u2264 n \u2264 10 5 , 1 \u2264 l \u2264 r \u2264 n ) \u2014 the number of Vasya's cubes and the positions told by Stepan. The second line contains the sequence a 1 , a 2 , ..., a n ( 1 \u2264 a i \u2264 n ) \u2014 the sequence of integers written on cubes in the Vasya's order. The third line contains the sequence b 1 , b 2 , ..., b n ( 1 \u2264 b i \u2264 n ) \u2014 the sequence of integers written on cubes after Stepan rearranged their order. It is guaranteed that Stepan did not remove or add other cubes, he only rearranged Vasya's cubes.\n\nOutput\nPrint \" LIE \" (without quotes) if it is guaranteed that Stepan deceived his brother. In the other case, print \" TRUTH \" (without quotes). Examples\n\nInput\n5 2 4 3 4 2 3 1 3 2 3 4 1\n\nOutput\nTRUTH\n\nInput\n3 1 2 1 2 3 3 1 2\n\nOutput\nLIE\n\nInput\n4 2 4 1 1 1 1 1 1 1 1\n\nOutput\nTRUTH\n\nNote\nIn the first example there is a situation when Stepan said the truth. Initially the sequence of integers on the cubes was equal to [3, 4, 2, 3, 1] . Stepan could at first swap cubes on positions 2 and 3 (after that the sequence of integers on cubes became equal to [3, 2, 4, 3, 1] ), and then swap cubes in positions 3 and 4 (after that the sequence of integers on cubes became equal to [3, 2, 3, 4, 1] ). In the second example it is not possible that Stepan said truth because he said that he swapped cubes only between positions 1 and 2 , but we can see that it is guaranteed that he changed the position of the cube which was on the position 3 at first. So it is guaranteed that Stepan deceived his brother. In the third example for any values l and r there is a situation when Stepan said the truth.","2272":"C. Maximum Number time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Stepan has the newest electronic device with a display. Different digits can be shown on it. Each digit is shown on a seven-section indicator like it is shown on the picture below. So, for example, to show the digit 3 on the display, 5 sections must be highlighted; and for the digit 6 , 6 sections must be highlighted. The battery of the newest device allows to highlight at most n sections on the display. Stepan wants to know the maximum possible integer number which can be shown on the display of his newest device. Your task is to determine this number.\n\nNote\nthat this number must not contain leading zeros. Assume that the size of the display is enough to show any integer.\n\nInput\nThe first line contains the integer n ( 2 \u2264 n \u2264 100 000 ) \u2014 the maximum number of sections which can be highlighted on the display.\n\nOutput\nPrint the maximum integer which can be shown on the display of Stepan's newest device. Examples\n\nInput\n2\n\nOutput\n1\n\nInput\n3\n\nOutput\n7","2274":"K. Stepan and Vowels time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Stepan likes to repeat vowel letters when he writes words. For example, instead of the word \" pobeda \" he can write \" pobeeeedaaaaa \". Sergey does not like such behavior, so he wants to write a program to format the words written by Stepan. This program must combine all consecutive equal vowels to a single vowel. The vowel letters are \" a \", \" e \", \" i \", \" o \", \" u \" and \" y \". There are exceptions: if letters \" e \" or \" o \" repeat in a row exactly 2 times, like in words \" feet \" and \" foot \", the program must skip them and do not transform in one vowel. For example, the word \" iiiimpleeemeentatiioon \" must be converted to the word \" implemeentatioon \". Sergey is very busy and asks you to help him and write the required program.\n\nInput\nThe first line contains the integer n ( 1 \u2264 n \u2264 100 000 ) \u2014 the number of letters in the word written by Stepan. The second line contains the string s which has length that equals to n and contains only lowercase English letters \u2014 the word written by Stepan.\n\nOutput\nPrint the single string \u2014 the word written by Stepan converted according to the rules described in the statement. Examples\n\nInput\n13 pobeeeedaaaaa\n\nOutput\npobeda\n\nInput\n22 iiiimpleeemeentatiioon\n\nOutput\nimplemeentatioon\n\nInput\n18 aeiouyaaeeiioouuyy\n\nOutput\naeiouyaeeioouy\n\nInput\n24 aaaoooiiiuuuyyyeeeggghhh\n\nOutput\naoiuyeggghhh","2278":"B. Find The Bone time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Zane the wizard is going to perform a magic show shuffling the cups. There are n cups, numbered from 1 to n , placed along the x -axis on a table that has m holes on it. More precisely, cup i is on the table at the position x = i . The problematic bone is initially at the position x = 1 . Zane will confuse the audience by swapping the cups k times, the i -th time of which involves the cups at the positions x = u i and x = v i . If the bone happens to be at the position where there is a hole at any time, it will fall into the hole onto the ground and will not be affected by future swapping operations. Do not forget that Zane is a wizard. When he swaps the cups, he does not move them ordinarily. Instead, he teleports the cups (along with the bone, if it is inside) to the intended positions. Therefore, for example, when he swaps the cup at x = 4 and the one at x = 6 , they will not be at the position x = 5 at any moment during the operation. Zane\u2019s puppy, Inzane, is in trouble. Zane is away on his vacation, and Inzane cannot find his beloved bone, as it would be too exhausting to try opening all the cups. Inzane knows that the Codeforces community has successfully helped Zane, so he wants to see if it could help him solve his problem too. Help Inzane determine the final position of the bone.\n\nInput\nThe first line contains three integers n , m , and k ( 2 \u2264 n \u2264 10 6 , 1 \u2264 m \u2264 n , 1 \u2264 k \u2264 3\u00b710 5 ) \u2014 the number of cups, the number of holes on the table, and the number of swapping operations, respectively. The second line contains m distinct integers h 1 , h 2 , ..., h m ( 1 \u2264 h i \u2264 n ) \u2014 the positions along the x -axis where there is a hole on the table. Each of the next k lines contains two integers u i and v i ( 1 \u2264 u i , v i \u2264 n , u i \u2260 v i ) \u2014 the positions of the cups to be swapped.\n\nOutput\nPrint one integer \u2014 the final position along the x -axis of the bone. Examples\n\nInput\n7 3 4 3 4 6 1 2 2 5 5 7 7 1\n\nOutput\n1\n\nInput\n5 1 2 2 1 2 2 4\n\nOutput\n2\n\nNote\nIn the first sample, after the operations, the bone becomes at x = 2 , x = 5 , x = 7 , and x = 1 , respectively. In the second sample, after the first operation, the bone becomes at x = 2 , and falls into the hole onto the ground.","2281":"A. Mike and palindrome time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Mike has a string s consisting of only lowercase English letters. He wants to change exactly one character from the string so that the resulting one is a palindrome. A palindrome is a string that reads the same backward as forward, for example strings \" z \", \" aaa \", \" aba \", \" abccba \" are palindromes, but strings \" codeforces \", \" reality \", \" ab \" are not.\n\nInput\nThe first and single line contains string s ( 1 \u2264 | s | \u2264 15 ).\n\nOutput\nPrint \" YES \" (without quotes) if Mike can change exactly one character so that the resulting string is palindrome or \" NO \" (without quotes) otherwise. Examples\n\nInput\nabccaa\n\nOutput\nYES\n\nInput\nabbcca\n\nOutput\nNO\n\nInput\nabcda\n\nOutput\nYES","2285":"A. Carrot Cakes time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output In some game by Playrix it takes t minutes for an oven to bake k carrot cakes, all cakes are ready at the same moment t minutes after they started baking. Arkady needs at least n cakes to complete a task, but he currently don't have any. However, he has infinitely many ingredients and one oven. Moreover, Arkady can build one more similar oven to make the process faster, it would take d minutes to build the oven. While the new oven is being built, only old one can bake cakes, after the new oven is built, both ovens bake simultaneously. Arkady can't build more than one oven. Determine if it is reasonable to build the second oven, i.e. will it decrease the minimum time needed to get n cakes or not. If the time needed with the second oven is the same as with one oven, then it is unreasonable.\n\nInput\nThe only line contains four integers n , t , k , d ( 1 \u2264 n , t , k , d \u2264 1 000 ) \u2014 the number of cakes needed, the time needed for one oven to bake k cakes, the number of cakes baked at the same time, the time needed to build the second oven.\n\nOutput\nIf it is reasonable to build the second oven, print \" YES \". Otherwise print \" NO \". Examples\n\nInput\n8 6 4 5\n\nOutput\nYES\n\nInput\n8 6 4 6\n\nOutput\nNO\n\nInput\n10 3 11 4\n\nOutput\nNO\n\nInput\n4 2 1 4\n\nOutput\nYES\n\nNote\nIn the first example it is possible to get 8 cakes in 12 minutes using one oven. The second oven can be built in 5 minutes, so after 6 minutes the first oven bakes 4 cakes, the second oven bakes 4 more ovens after 11 minutes. Thus, it is reasonable to build the second oven. In the second example it doesn't matter whether we build the second oven or not, thus it takes 12 minutes to bake 8 cakes in both cases. Thus, it is unreasonable to build the second oven. In the third example the first oven bakes 11 cakes in 3 minutes, that is more than needed 10 . It is unreasonable to build the second oven, because its building takes more time that baking the needed number of cakes using the only oven.","2287":"A. Vicious Keyboard time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Tonio has a keyboard with only two letters, \" V \" and \" K \". One day, he has typed out a string s with only these two letters. He really likes it when the string \" VK \" appears, so he wishes to change at most one letter in the string (or do no changes) to maximize the number of occurrences of that string. Compute the maximum number of times \" VK \" can appear as a substring (i. e. a letter \" K \" right after a letter \" V \") in the resulting string.\n\nInput\nThe first line will contain a string s consisting only of uppercase English letters \" V \" and \" K \" with length not less than 1 and not greater than 100 .\n\nOutput\nOutput a single integer, the maximum number of times \" VK \" can appear as a substring of the given string after changing at most one character. Examples\n\nInput\nVK\n\nOutput\n1\n\nInput\nVV\n\nOutput\n1\n\nInput\nV\n\nOutput\n0\n\nInput\nVKKKKKKKKKVVVVVVVVVK\n\nOutput\n3\n\nInput\nKVKV\n\nOutput\n1\n\nNote\nFor the first case, we do not change any letters. \" VK \" appears once, which is the maximum number of times it could appear. For the second case, we can change the second character from a \" V \" to a \" K \". This will give us the string \" VK \". This has one occurrence of the string \" VK \" as a substring. For the fourth case, we can change the fourth character from a \" K \" to a \" V \". This will give us the string \" VKKVKKKKKKVVVVVVVVVK \". This has three occurrences of the string \" VK \" as a substring. We can check no other moves can give us strictly more occurrences.","2288":"B. Valued Keys time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You found a mysterious function f . The function takes two strings s 1 and s 2 . These strings must consist only of lowercase English letters, and must be the same length. The output of the function f is another string of the same length. The i -th character of the output is equal to the minimum of the i -th character of s 1 and the i -th character of s 2 . For example, f ( \" ab \", \" ba \" ) = \" aa \", and f ( \" nzwzl \", \" zizez \" ) = \" niwel \". You found two strings x and y of the same length and consisting of only lowercase English letters. Find any string z such that f ( x , z ) = y , or print -1 if no such string z exists.\n\nInput\nThe first line of input contains the string x . The second line of input contains the string y . Both x and y consist only of lowercase English letters, x and y have same length and this length is between 1 and 100 .\n\nOutput\nIf there is no string z such that f ( x , z ) = y , print -1 . Otherwise, print a string z such that f ( x , z ) = y . If there are multiple possible answers, print any of them. The string z should be the same length as x and y and consist only of lowercase English letters. Examples\n\nInput\nab aa\n\nOutput\nba\n\nInput\nnzwzl niwel\n\nOutput\nxiyez\n\nInput\nab ba\n\nOutput\n-1\n\nNote\nThe first case is from the statement. Another solution for the second case is \" zizez \" There is no solution for the third case. That is, there is no z such that f ( \" ab \", z ) = \" ba \".","2295":"G. Fake News (easy) time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output As it's the first of April, Heidi is suspecting that the news she reads today are fake, and she does not want to look silly in front of all the contestants. She knows that a newspiece is fake if it contains heidi as a subsequence. Help Heidi assess whether the given piece is true, but please be discreet about it...\n\nInput\nThe first and only line of input contains a single nonempty string s of length at most 1000 composed of lowercase letters ( a - z ).\n\nOutput\nOutput YES if the string s contains heidi as a subsequence and NO otherwise. Examples\n\nInput\nabcheaibcdi\n\nOutput\nYES\n\nInput\nhiedi\n\nOutput\nNO\n\nNote\nA string s contains another string p as a subsequence if it is possible to delete some characters from s and obtain p .","2297":"B. Distances to Zero time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output You are given the array of integer numbers a 0 , a 1 , ..., a n - 1 . For each element find the distance to the nearest zero (to the element which equals to zero). There is at least one zero element in the given array.\n\nInput\nThe first line contains integer n ( 1 \u2264 n \u2264 2\u00b710 5 ) \u2014 length of the array a . The second line contains integer elements of the array separated by single spaces ( - 10 9 \u2264 a i \u2264 10 9 ).\n\nOutput\nPrint the sequence d 0 , d 1 , ..., d n - 1 , where d i is the difference of indices between i and nearest j such that a j = 0 . It is possible that i = j . Examples\n\nInput\n9 2 1 0 3 0 0 3 2 4\n\nOutput\n2 1 0 1 0 0 1 2 3\n\nInput\n5 0 1 2 3 4\n\nOutput\n0 1 2 3 4\n\nInput\n7 5 6 0 1 -2 3 4\n\nOutput\n2 1 0 1 2 3 4","2310":"A. Maximal Binary Matrix time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output You are given matrix with n rows and n columns filled with zeroes. You should put k ones in it in such a way that the resulting matrix is symmetrical with respect to the main diagonal (the diagonal that goes from the top left to the bottom right corner) and is lexicographically maximal. One matrix is lexicographically greater than the other if the first different number in the first different row from the top in the first matrix is greater than the corresponding number in the second one. If there exists no such matrix then output -1 .\n\nInput\nThe first line consists of two numbers n and k ( 1 \u2264 n \u2264 100 , 0 \u2264 k \u2264 10 6 ).\n\nOutput\nIf the answer exists then output resulting matrix. Otherwise output -1 . Examples\n\nInput\n2 1\n\nOutput\n1 0 0 0\n\nInput\n3 2\n\nOutput\n1 0 0 0 1 0 0 0 0\n\nInput\n2 5\n\nOutput\n-1","2312":"A. Find Amir time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A few years ago Sajjad left his school and register to another one due to security reasons. Now he wishes to find Amir, one of his schoolmates and good friends. There are n schools numerated from 1 to n . One can travel between each pair of them, to do so, he needs to buy a ticket. The ticker between schools i and j costs and can be used multiple times. Help Sajjad to find the minimum cost he needs to pay for tickets to visit all schools. He can start and finish in any school.\n\nInput\nThe first line contains a single integer n ( 1 \u2264 n \u2264 10 5 ) \u2014 the number of schools.\n\nOutput\nPrint single integer: the minimum cost of tickets needed to visit all schools. Examples\n\nInput\n2\n\nOutput\n0\n\nInput\n10\n\nOutput\n4\n\nNote\nIn the first example we can buy a ticket between the schools that costs .","2316":"B. 3-palindrome time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output In the beginning of the new year Keivan decided to reverse his name. He doesn't like palindromes, so he changed Naviek to Navick. He is too selfish, so for a given n he wants to obtain a string of n characters, each of which is either ' a ', ' b ' or ' c ', with no palindromes of length 3 appearing in the string as a substring. For example, the strings \" abc \" and \" abca \" suit him, while the string \" aba \" doesn't. He also want the number of letters ' c ' in his string to be as little as possible.\n\nInput\nThe first line contains single integer n ( 1 \u2264 n \u2264 2\u00b710 5 ) \u2014 the length of the string.\n\nOutput\nPrint the string that satisfies all the constraints. If there are multiple answers, print any of them. Examples\n\nInput\n2\n\nOutput\naa\n\nInput\n3\n\nOutput\nbba\n\nNote\nA palindrome is a sequence of characters which reads the same backward and forward.","2317":"A. Fake NP time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Tavak and Seyyed are good friends. Seyyed is very funny and he told Tavak to solve the following problem instead of longest-path . You are given l and r . For all integers from l to r , inclusive, we wrote down all of their integer divisors except 1 . Find the integer that we wrote down the maximum number of times. Solve the problem to show that it's not a NP problem.\n\nInput\nThe first line contains two integers l and r ( 2 \u2264 l \u2264 r \u2264 10 9 ).\n\nOutput\nPrint single integer, the integer that appears maximum number of times in the divisors. If there are multiple answers, print any of them. Examples\n\nInput\n19 29\n\nOutput\n2\n\nInput\n3 6\n\nOutput\n3\n\nNote\nDefinition of a divisor: https:\/\/www.mathsisfun.com\/definitions\/divisor-of-an-integer-.html The first example: from 19 to 29 these numbers are divisible by 2 : {20, 22, 24, 26, 28} . The second example: from 3 to 6 these numbers are divisible by 3 : {3, 6} .","2322":"A. Is it rated? time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Is it rated? Here it is. The Ultimate Question of Competitive Programming, Codeforces, and Everything. And you are here to answer it. Another Codeforces round has been conducted. No two participants have the same number of points. For each participant, from the top to the bottom of the standings, their rating before and after the round is known. It's known that if at least one participant's rating has changed, then the round was rated for sure. It's also known that if the round was rated and a participant with lower rating took a better place in the standings than a participant with higher rating, then at least one round participant's rating has changed. In this problem, you should not make any other assumptions about the rating system. Determine if the current round is rated, unrated, or it's impossible to determine whether it is rated of not.\n\nInput\nThe first line contains a single integer n ( 2 \u2264 n \u2264 1000 ) \u2014 the number of round participants. Each of the next n lines contains two integers a i and b i ( 1 \u2264 a i , b i \u2264 4126 ) \u2014 the rating of the i -th participant before and after the round, respectively. The participants are listed in order from the top to the bottom of the standings.\n\nOutput\nIf the round is rated for sure, print \" rated \". If the round is unrated for sure, print \" unrated \". If it's impossible to determine whether the round is rated or not, print \" maybe \". Examples\n\nInput\n6 3060 3060 2194 2194 2876 2903 2624 2624 3007 2991 2884 2884\n\nOutput\nrated\n\nInput\n4 1500 1500 1300 1300 1200 1200 1400 1400\n\nOutput\nunrated\n\nInput\n5 3123 3123 2777 2777 2246 2246 2246 2246 1699 1699\n\nOutput\nmaybe\n\nNote\nIn the first example, the ratings of the participants in the third and fifth places have changed, therefore, the round was rated. In the second example, no one's rating has changed, but the participant in the second place has lower rating than the participant in the fourth place. Therefore, if the round was rated, someone's rating would've changed for sure. In the third example, no one's rating has changed, and the participants took places in non-increasing order of their rating. Therefore, it's impossible to determine whether the round is rated or not.","2324":"B. T-Shirt Hunt time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Not so long ago the Codecraft-17 contest was held on Codeforces. The top 25 participants, and additionally random 25 participants out of those who got into top 500, will receive a Codeforces T-shirt. Unfortunately, you didn't manage to get into top 25, but you got into top 500, taking place p . Now the elimination round of 8VC Venture Cup 2017 is being held. It has been announced that the Codecraft-17 T-shirt winners will be chosen as follows. Let s be the number of points of the winner of the elimination round of 8VC Venture Cup 2017. Then the following pseudocode will be executed: i := (s div 50) mod 475 repeat 25 times: i := (i * 96 + 42) mod 475 print (26 + i) Here \" div \" is the integer division operator, \" mod \" is the modulo (the remainder of division) operator. As the result of pseudocode execution, 25 integers between 26 and 500, inclusive, will be printed. These will be the numbers of places of the participants who get the Codecraft-17 T-shirts. It is guaranteed that the 25 printed integers will be pairwise distinct for any value of s . You're in the lead of the elimination round of 8VC Venture Cup 2017, having x points. You believe that having at least y points in the current round will be enough for victory. To change your final score, you can make any number of successful and unsuccessful hacks. A successful hack brings you 100 points, an unsuccessful one takes 50 points from you. It's difficult to do successful hacks, though. You want to win the current round and, at the same time, ensure getting a Codecraft-17 T-shirt. What is the smallest number of successful hacks you have to do to achieve that?\n\nInput\nThe only line contains three integers p , x and y ( 26 \u2264 p \u2264 500 ; 1 \u2264 y \u2264 x \u2264 20000 ) \u2014 your place in Codecraft-17, your current score in the elimination round of 8VC Venture Cup 2017, and the smallest number of points you consider sufficient for winning the current round.\n\nOutput\nOutput a single integer \u2014 the smallest number of successful hacks you have to do in order to both win the elimination round of 8VC Venture Cup 2017 and ensure getting a Codecraft-17 T-shirt. It's guaranteed that your goal is achievable for any valid input data. Examples\n\nInput\n239 10880 9889\n\nOutput\n0\n\nInput\n26 7258 6123\n\nOutput\n2\n\nInput\n493 8000 8000\n\nOutput\n24\n\nInput\n101 6800 6500\n\nOutput\n0\n\nInput\n329 19913 19900\n\nOutput\n8\n\nNote\nIn the first example, there is no need to do any hacks since 10880 points already bring the T-shirt to the 239-th place of Codecraft-17 (that is, you). In this case, according to the pseudocode, the T-shirts will be given to the participants at the following places: 475 422 84 411 453 210 157 294 146 188 420 367 29 356 398 155 102 239 91 133 365 312 449 301 343 In the second example, you have to do two successful and one unsuccessful hack to make your score equal to 7408. In the third example, you need to do as many as 24 successful hacks to make your score equal to 10400. In the fourth example, it's sufficient to do 6 unsuccessful hacks (and no successful ones) to make your score equal to 6500, which is just enough for winning the current round and also getting the T-shirt.","2329":"A. Straight \u00abA\u00bb time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Noora is a student of one famous high school. It's her final year in school \u2014 she is going to study in university next year. However, she has to get an \u00abA\u00bb graduation certificate in order to apply to a prestigious one. In school, where Noora is studying, teachers are putting down marks to the online class register, which are integers from 1 to k . The worst mark is 1 , the best is k . Mark that is going to the certificate, is calculated as an average of all the marks, rounded to the closest integer. If several answers are possible, rounding up is produced. For example, 7.3 is rounded to 7 , but 7.5 and 7.8784 \u2014 to 8 . For instance, if Noora has marks [8, 9] , then the mark to the certificate is 9 , because the average is equal to 8.5 and rounded to 9 , but if the marks are [8, 8, 9] , Noora will have graduation certificate with 8 . To graduate with \u00abA\u00bb certificate, Noora has to have mark k . Noora got n marks in register this year. However, she is afraid that her marks are not enough to get final mark k . Noora decided to ask for help in the internet, where hacker Leha immediately responded to her request. He is ready to hack class register for Noora and to add Noora any number of additional marks from 1 to k . At the same time, Leha want his hack be unseen to everyone, so he decided to add as less as possible additional marks. Please help Leha to calculate the minimal number of marks he has to add, so that final Noora's mark will become equal to k .\n\nInput\nThe first line contains two integers n and k (1 \u2264 n \u2264 100, 1 \u2264 k \u2264 100) denoting the number of marks, received by Noora and the value of highest possible mark. The second line contains n integers a 1 , a 2 , ..., a n (1 \u2264 a i \u2264 k ) denoting marks received by Noora before Leha's hack.\n\nOutput\nPrint a single integer \u2014 minimal number of additional marks, that Leha has to add in order to change Noora's final mark to k . Examples\n\nInput\n2 10 8 9\n\nOutput\n4\n\nInput\n3 5 4 4 4\n\nOutput\n3\n\nNote\nConsider the first example testcase. Maximal mark is 10 , Noora received two marks \u2014 8 and 9 , so current final mark is 9 . To fix it, Leha can add marks [10, 10, 10, 10] ( 4 marks in total) to the registry, achieving Noora having average mark equal to . Consequently, new final mark is 10 . Less number of marks won't fix the situation. In the second example Leha can add [5, 5, 5] to the registry, so that making average mark equal to 4.5 , which is enough to have 5 in the certificate.","2331":"B. Vladik and Complicated Book time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Vladik had started reading a complicated book about algorithms containing n pages. To improve understanding of what is written, his friends advised him to read pages in some order given by permutation P = [ p 1 , p 2 , ..., p n ] , where p i denotes the number of page that should be read i -th in turn. Sometimes Vladik\u2019s mom sorted some subsegment of permutation P from position l to position r inclusive, because she loves the order. For every of such sorting Vladik knows number x \u2014 what index of page in permutation he should read. He is wondered if the page, which he will read after sorting, has changed. In other words, has p x changed? After every sorting Vladik return permutation to initial state, so you can assume that each sorting is independent from each other.\n\nInput\nFirst line contains two space-separated integers n , m ( 1 \u2264 n , m \u2264 10 4 ) \u2014 length of permutation and number of times Vladik's mom sorted some subsegment of the book. Second line contains n space-separated integers p 1 , p 2 , ..., p n ( 1 \u2264 p i \u2264 n ) \u2014 permutation P .\n\nNote\nthat elements in permutation are distinct. Each of the next m lines contains three space-separated integers l i , r i , x i ( 1 \u2264 l i \u2264 x i \u2264 r i \u2264 n ) \u2014 left and right borders of sorted subsegment in i -th sorting and position that is interesting to Vladik.\n\nOutput\nFor each mom\u2019s sorting on it\u2019s own line print \" Yes \", if page which is interesting to Vladik hasn't changed, or \" No \" otherwise. Examples\n\nInput\n5 5 5 4 3 2 1 1 5 3 1 3 1 2 4 3 4 4 4 2 5 3\n\nOutput\nYes No Yes Yes No\n\nInput\n6 5 1 4 3 2 5 6 2 4 3 1 6 2 4 5 4 1 3 3 2 6 3\n\nOutput\nYes No Yes No Yes\n\nNote\nExplanation of first test case: [1, 2, 3, 4, 5] \u2014 permutation after sorting, 3 -rd element hasn\u2019t changed, so answer is \" Yes \". [3, 4, 5, 2, 1] \u2014 permutation after sorting, 1 -st element has changed, so answer is \" No \". [5, 2, 3, 4, 1] \u2014 permutation after sorting, 3 -rd element hasn\u2019t changed, so answer is \" Yes \". [5, 4, 3, 2, 1] \u2014 permutation after sorting, 4 -th element hasn\u2019t changed, so answer is \" Yes \". [5, 1, 2, 3, 4] \u2014 permutation after sorting, 3 -rd element has changed, so answer is \" No \".","2332":"A. Vladik and Courtesy time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output At regular competition Vladik and Valera won a and b candies respectively. Vladik offered 1 his candy to Valera. After that Valera gave Vladik 2 his candies, so that no one thought that he was less generous. Vladik for same reason gave 3 candies to Valera in next turn. More formally, the guys take turns giving each other one candy more than they received in the previous turn. This continued until the moment when one of them couldn\u2019t give the right amount of candy. Candies, which guys got from each other, they don\u2019t consider as their own . You need to know, who is the first who can\u2019t give the right amount of candy.\n\nInput\nSingle line of input data contains two space-separated integers a , b ( 1 \u2264 a , b \u2264 10 9 ) \u2014 number of Vladik and Valera candies respectively.\n\nOutput\nPring a single line \" Vladik \u2019\u2019 in case, if Vladik first who can\u2019t give right amount of candy, or \" Valera \u2019\u2019 otherwise. Examples\n\nInput\n1 1\n\nOutput\nValera\n\nInput\n7 6\n\nOutput\nVladik\n\nNote\nIllustration for first test case: Illustration for second test case:","2334":"A. Sagheer and Crossroads time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Sagheer is walking in the street when he comes to an intersection of two roads. Each road can be represented as two parts where each part has 3 lanes getting into the intersection (one for each direction) and 3 lanes getting out of the intersection, so we have 4 parts in total. Each part has 4 lights, one for each lane getting into the intersection ( l \u2014 left, s \u2014 straight, r \u2014 right) and a light p for a pedestrian crossing. An accident is possible if a car can hit a pedestrian. This can happen if the light of a pedestrian crossing of some part and the light of a lane that can get to or from that same part are green at the same time. Now, Sagheer is monitoring the configuration of the traffic lights. Your task is to help him detect whether an accident is possible.\n\nInput\nThe input consists of four lines with each line describing a road part given in a counter-clockwise order. Each line contains four integers l , s , r , p \u2014 for the left, straight, right and pedestrian lights, respectively. The possible values are 0 for red light and 1 for green light.\n\nOutput\nOn a single line, print \" YES \" if an accident is possible, and \" NO \" otherwise. Examples\n\nInput\n1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 1\n\nOutput\nYES\n\nInput\n0 1 1 0 1 0 1 0 1 1 0 0 0 0 0 1\n\nOutput\nNO\n\nInput\n1 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0\n\nOutput\nNO\n\nNote\nIn the first example, some accidents are possible because cars of part 1 can hit pedestrians of parts 1 and 4 . Also, cars of parts 2 and 3 can hit pedestrians of part 4 . In the second example, no car can pass the pedestrian crossing of part 4 which is the only green pedestrian light. So, no accident can occur.","2338":"A. An abandoned sentiment from past time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output A few years ago, Hitagi encountered a giant crab, who stole the whole of her body weight. Ever since, she tried to avoid contact with others, for fear that this secret might be noticed. To get rid of the oddity and recover her weight, a special integer sequence is needed. Hitagi's sequence has been broken for a long time, but now Kaiki provides an opportunity. Hitagi's sequence a has a length of n . Lost elements in it are denoted by zeros. Kaiki provides another sequence b , whose length k equals the number of lost elements in a (i.e. the number of zeros). Hitagi is to replace each zero in a with an element from b so that each element in b should be used exactly once . Hitagi knows, however, that, apart from 0 , no integer occurs in a and b more than once in total. If the resulting sequence is not an increasing sequence, then it has the power to recover Hitagi from the oddity. You are to determine whether this is possible, or Kaiki's sequence is just another fake. In other words, you should detect whether it is possible to replace each zero in a with an integer from b so that each integer from b is used exactly once, and the resulting sequence is not increasing.\n\nInput\nThe first line of input contains two space-separated positive integers n ( 2 \u2264 n \u2264 100 ) and k ( 1 \u2264 k \u2264 n ) \u2014 the lengths of sequence a and b respectively. The second line contains n space-separated integers a 1 , a 2 , ..., a n ( 0 \u2264 a i \u2264 200 ) \u2014 Hitagi's broken sequence with exactly k zero elements. The third line contains k space-separated integers b 1 , b 2 , ..., b k ( 1 \u2264 b i \u2264 200 ) \u2014 the elements to fill into Hitagi's sequence.\n\nInput\nguarantees that apart from 0 , no integer occurs in a and b more than once in total.\n\nOutput\nOutput \" Yes \" if it's possible to replace zeros in a with elements in b and make the resulting sequence not increasing, and \" No \" otherwise. Examples\n\nInput\n4 2 11 0 0 14 5 4\n\nOutput\nYes\n\nInput\n6 1 2 3 0 8 9 10 5\n\nOutput\nNo\n\nInput\n4 1 8 94 0 4 89\n\nOutput\nYes\n\nInput\n7 7 0 0 0 0 0 0 0 1 2 3 4 5 6 7\n\nOutput\nYes\n\nNote\nIn the first sample: Sequence a is 11, 0, 0, 14 . Two of the elements are lost, and the candidates in b are 5 and 4 . There are two possible resulting sequences: 11, 5, 4, 14 and 11, 4, 5, 14 , both of which fulfill the requirements. Thus the answer is \" Yes \". In the second sample, the only possible resulting sequence is 2, 3, 5, 8, 9, 10 , which is an increasing sequence and therefore invalid.","2340":"A. Karen and Morning time limit per test 2 seconds memory limit per test 512 megabytes input standard input output standard output Karen is getting ready for a new school day! It is currently hh:mm , given in a 24-hour format. As you know, Karen loves palindromes , and she believes that it is good luck to wake up when the time is a palindrome. What is the minimum number of minutes she should sleep, such that, when she wakes up, the time is a palindrome? Remember that a palindrome is a string that reads the same forwards and backwards. For instance, 05:39 is not a palindrome, because 05:39 backwards is 93:50 . On the other hand, 05:50 is a palindrome, because 05:50 backwards is 05:50 .\n\nInput\nThe first and only line of input contains a single string in the format hh:mm ( 00 \u2264 hh \u2264 23 , 00 \u2264 mm \u2264 59 ).\n\nOutput\nOutput a single integer on a line by itself, the minimum number of minutes she should sleep, such that, when she wakes up, the time is a palindrome. Examples\n\nInput\n05:39\n\nOutput\n11\n\nInput\n13:31\n\nOutput\n0\n\nInput\n23:59\n\nOutput\n1\n\nNote\nIn the first test case, the minimum number of minutes Karen should sleep for is 11 . She can wake up at 05:50 , when the time is a palindrome. In the second test case, Karen can wake up immediately, as the current time, 13:31 , is already a palindrome. In the third test case, the minimum number of minutes Karen should sleep for is 1 minute. She can wake up at 00:00 , when the time is a palindrome.","2343":"B. Karen and Coffee time limit per test 2.5 seconds memory limit per test 512 megabytes input standard input output standard output To stay woke and attentive during classes, Karen needs some coffee! Karen, a coffee aficionado, wants to know the optimal temperature for brewing the perfect cup of coffee. Indeed, she has spent some time reading several recipe books, including the universally acclaimed \"The Art of the Covfefe\". She knows n coffee recipes. The i -th recipe suggests that coffee should be brewed between l i and r i degrees, inclusive, to achieve the optimal taste. Karen thinks that a temperature is admissible if at least k recipes recommend it. Karen has a rather fickle mind, and so she asks q questions. In each question, given that she only wants to prepare coffee with a temperature between a and b , inclusive, can you tell her how many admissible integer temperatures fall within the range?\n\nInput\nThe first line of input contains three integers, n , k ( 1 \u2264 k \u2264 n \u2264 200000 ), and q ( 1 \u2264 q \u2264 200000 ), the number of recipes, the minimum number of recipes a certain temperature must be recommended by to be admissible, and the number of questions Karen has, respectively. The next n lines describe the recipes. Specifically, the i -th line among these contains two integers l i and r i ( 1 \u2264 l i \u2264 r i \u2264 200000 ), describing that the i -th recipe suggests that the coffee be brewed between l i and r i degrees, inclusive. The next q lines describe the questions. Each of these lines contains a and b , ( 1 \u2264 a \u2264 b \u2264 200000 ), describing that she wants to know the number of admissible integer temperatures between a and b degrees, inclusive.\n\nOutput\nFor each question, output a single integer on a line by itself, the number of admissible integer temperatures between a and b degrees, inclusive. Examples\n\nInput\n3 2 4 91 94 92 97 97 99 92 94 93 97 95 96 90 100\n\nOutput\n3 3 0 4\n\nInput\n2 1 1 1 1 200000 200000 90 100\n\nOutput\n0\n\nNote\nIn the first test case, Karen knows 3 recipes. The first one recommends brewing the coffee between 91 and 94 degrees, inclusive. The second one recommends brewing the coffee between 92 and 97 degrees, inclusive. The third one recommends brewing the coffee between 97 and 99 degrees, inclusive. A temperature is admissible if at least 2 recipes recommend it. She asks 4 questions. In her first question, she wants to know the number of admissible integer temperatures between 92 and 94 degrees, inclusive. There are 3 : 92 , 93 and 94 degrees are all admissible. In her second question, she wants to know the number of admissible integer temperatures between 93 and 97 degrees, inclusive. There are 3 : 93 , 94 and 97 degrees are all admissible. In her third question, she wants to know the number of admissible integer temperatures between 95 and 96 degrees, inclusive. There are none. In her final question, she wants to know the number of admissible integer temperatures between 90 and 100 degrees, inclusive. There are 4 : 92 , 93 , 94 and 97 degrees are all admissible. In the second test case, Karen knows 2 recipes. The first one, \"wikiHow to make Cold Brew Coffee\", recommends brewing the coffee at exactly 1 degree. The second one, \"What good is coffee that isn't brewed at at least 36.3306 times the temperature of the surface of the sun?\", recommends brewing the coffee at exactly 200000 degrees. A temperature is admissible if at least 1 recipe recommends it. In her first and only question, she wants to know the number of admissible integer temperatures that are actually reasonable. There are none.","2347":"A. Treasure Hunt time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Captain Bill the Hummingbird and his crew recieved an interesting challenge offer. Some stranger gave them a map, potion of teleportation and said that only this potion might help them to reach the treasure. Bottle with potion has two values x and y written on it. These values define four moves which can be performed using the potion: Map shows that the position of Captain Bill the Hummingbird is ( x 1 , y 1 ) and the position of the treasure is ( x 2 , y 2 ) . You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline. If it is possible for Captain to reach the treasure using the potion then output \"YES\" , otherwise \"NO\" (without quotes). The potion can be used infinite amount of times.\n\nInput\nThe first line contains four integer numbers x 1 , y 1 , x 2 , y 2 ( - 10 5 \u2264 x 1 , y 1 , x 2 , y 2 \u2264 10 5 ) \u2014 positions of Captain Bill the Hummingbird and treasure respectively. The second line contains two integer numbers x , y ( 1 \u2264 x , y \u2264 10 5 ) \u2014 values on the potion bottle.\n\nOutput\nPrint \"YES\" if it is possible for Captain to reach the treasure using the potion, otherwise print \"NO\" (without quotes). Examples\n\nInput\n0 0 0 6 2 3\n\nOutput\nYES\n\nInput\n1 1 3 6 1 5\n\nOutput\nNO\n\nNote\nIn the first example there exists such sequence of moves: \u2014 the first type of move \u2014 the third type of move","2350":"A. Mister B and Book Reading time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Mister B once received a gift: it was a book about aliens, which he started read immediately. This book had c pages. At first day Mister B read v 0 pages, but after that he started to speed up. Every day, starting from the second, he read a pages more than on the previous day (at first day he read v 0 pages, at second \u2014 v 0 + a pages, at third \u2014 v 0 + 2 a pages, and so on). But Mister B is just a human, so he physically wasn't able to read more than v 1 pages per day. Also, to refresh his memory, every day, starting from the second, Mister B had to reread last l pages he read on the previous day. Mister B finished the book when he read the last page for the first time. Help Mister B to calculate how many days he needed to finish the book.\n\nInput\nFirst and only line contains five space-separated integers: c , v 0 , v 1 , a and l ( 1 \u2264 c \u2264 1000 , 0 \u2264 l < v 0 \u2264 v 1 \u2264 1000 , 0 \u2264 a \u2264 1000 ) \u2014 the length of the book in pages, the initial reading speed, the maximum reading speed, the acceleration in reading speed and the number of pages for rereading.\n\nOutput\nPrint one integer \u2014 the number of days Mister B needed to finish the book. Examples\n\nInput\n5 5 10 5 4\n\nOutput\n1\n\nInput\n12 4 12 4 1\n\nOutput\n3\n\nInput\n15 1 100 0 0\n\nOutput\n15\n\nNote\nIn the first sample test the book contains 5 pages, so Mister B read it right at the first day. In the second sample test at first day Mister B read pages number 1 - 4 , at second day \u2014 4 - 11 , at third day \u2014 11 - 12 and finished the book. In third sample test every day Mister B read 1 page of the book, so he finished in 15 days.","2352":"A. I'm bored with life time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Holidays have finished. Thanks to the help of the hacker Leha, Noora managed to enter the university of her dreams which is located in a town Pavlopolis. It's well known that universities provide students with dormitory for the period of university studies. Consequently Noora had to leave Vi\u010dkopolis and move to Pavlopolis. Thus Leha was left completely alone in a quiet town Vi\u010dkopolis. He almost even fell into a depression from boredom! Leha came up with a task for himself to relax a little. He chooses two integers A and B and then calculates the greatest common divisor of integers \" A factorial\" and \" B factorial\". Formally the hacker wants to find out GCD ( A !, B !) . It's well known that the factorial of an integer x is a product of all positive integers less than or equal to x . Thus x ! = 1\u00b72\u00b73\u00b7...\u00b7( x - 1)\u00b7 x . For example 4! = 1\u00b72\u00b73\u00b74 = 24 . Recall that GCD ( x , y ) is the largest positive integer q that divides (without a remainder) both x and y . Leha has learned how to solve this task very effective. You are able to cope with it not worse, aren't you?\n\nInput\nThe first and single line contains two integers A and B (1 \u2264 A , B \u2264 10 9 , min ( A , B ) \u2264 12) .\n\nOutput\nPrint a single integer denoting the greatest common divisor of integers A ! and B ! . Example\n\nInput\n4 3\n\nOutput\n6\n\nNote\nConsider the sample. 4! = 1\u00b72\u00b73\u00b74 = 24 . 3! = 1\u00b72\u00b73 = 6 . The greatest common divisor of integers 24 and 6 is exactly 6 .","2354":"A. Binary Protocol time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Polycarp has just invented a new binary protocol for data transmission. He is encoding positive integer decimal number to binary string using following algorithm: Each digit is represented with number of '1' characters equal to the value of that digit (for 0 it is zero ones). Digits are written one by one in order corresponding to number and separated by single '0' character. Though Polycarp learnt how to encode the numbers, he has no idea how to decode them back. Help him calculate the decoded number.\n\nInput\nThe first line contains one integer number n ( 1 \u2264 n \u2264 89 ) \u2014 length of the string s . The second line contains string s \u2014 sequence of '0' and '1' characters, number in its encoded format. It is guaranteed that the number corresponding to the string is positive and doesn't exceed 10 9 . The string always starts with '1' .\n\nOutput\nPrint the decoded number. Examples\n\nInput\n3 111\n\nOutput\n3\n\nInput\n9 110011101\n\nOutput\n2031","2356":"A. Sasha and Sticks time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output It's one more school day now. Sasha doesn't like classes and is always bored at them. So, each day he invents some game and plays in it alone or with friends. Today he invented one simple game to play with Lena, with whom he shares a desk. The rules are simple. Sasha draws n sticks in a row. After that the players take turns crossing out exactly k sticks from left or right in each turn. Sasha moves first, because he is the inventor of the game. If there are less than k sticks on the paper before some turn, the game ends. Sasha wins if he makes strictly more moves than Lena. Sasha wants to know the result of the game before playing, you are to help him.\n\nInput\nThe first line contains two integers n and k ( 1 \u2264 n , k \u2264 10 18 , k \u2264 n ) \u2014 the number of sticks drawn by Sasha and the number k \u2014 the number of sticks to be crossed out on each turn.\n\nOutput\nIf Sasha wins, print \" YES \" (without quotes), otherwise print \" NO \" (without quotes). You can print each letter in arbitrary case (upper of lower). Examples\n\nInput\n1 1\n\nOutput\nYES\n\nInput\n10 4\n\nOutput\nNO\n\nNote\nIn the first example Sasha crosses out 1 stick, and then there are no sticks. So Lena can't make a move, and Sasha wins. In the second example Sasha crosses out 4 sticks, then Lena crosses out 4 sticks, and after that there are only 2 sticks left. Sasha can't make a move. The players make equal number of moves, so Sasha doesn't win.","2358":"B. The Festive Evening time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output It's the end of July \u2013 the time when a festive evening is held at Jelly Castle! Guests from all over the kingdom gather here to discuss new trends in the world of confectionery. Yet some of the things discussed here are not supposed to be disclosed to the general public: the information can cause discord in the kingdom of Sweetland in case it turns out to reach the wrong hands. So it's a necessity to not let any uninvited guests in. There are 26 entrances in Jelly Castle, enumerated with uppercase English letters from A to Z . Because of security measures, each guest is known to be assigned an entrance he should enter the castle through. The door of each entrance is opened right before the first guest's arrival and closed right after the arrival of the last guest that should enter the castle through this entrance. No two guests can enter the castle simultaneously. For an entrance to be protected from possible intrusion, a candy guard should be assigned to it. There are k such guards in the castle, so if there are more than k opened doors, one of them is going to be left unguarded! Notice that a guard can't leave his post until the door he is assigned to is closed. Slastyona had a suspicion that there could be uninvited guests at the evening. She knows the order in which the invited guests entered the castle, and wants you to help her check whether there was a moment when more than k doors were opened.\n\nInput\nTwo integers are given in the first string: the number of guests n and the number of guards k ( 1 \u2264 n \u2264 10 6 , 1 \u2264 k \u2264 26 ). In the second string, n uppercase English letters s 1 s 2 ... s n are given, where s i is the entrance used by the i -th guest.\n\nOutput\nOutput \u00ab YES \u00bb if at least one door was unguarded during some time, and \u00ab NO \u00bb otherwise. You can output each letter in arbitrary case (upper or lower). Examples\n\nInput\n5 1 AABBB\n\nOutput\nNO\n\nInput\n5 1 ABABB\n\nOutput\nYES\n\nNote\nIn the first sample case, the door A is opened right before the first guest's arrival and closed when the second guest enters the castle. The door B is opened right before the arrival of the third guest, and closed after the fifth one arrives. One guard can handle both doors, as the first one is closed before the second one is opened. In the second sample case, the door B is opened before the second guest's arrival, but the only guard can't leave the door A unattended, as there is still one more guest that should enter the castle through this door."}}