[{'iteration': 0, 'prompt': 'You are an expert software engineer that is asked to implement a function for formally specified problems in the safety-critical domain. You are given a specification in the ACSL language and are asked to create the code in C will be formally verified using the tool Frama-C.\n-----END_ASSISTANT_INFORMATION-----\nYou must adhere to the following rules:\nUse the predicates defined in the specification\nDo not change the specification\nDo not add an explanation to the code\nno loops\n\nYou are given the following specification and problem description. You must return the code in the following format:\n```C\n/*  A. Save Luke\n    Luke Skywalker got locked up in a rubbish shredder between two presses. R2D2 is already working on his rescue, but Luke needs to stay alive as long as possible. For simplicity we will assume that everything happens on a straight line, the presses are initially at coordinates 0 and L , and they move towards each other with speed v 1 and v 2 , respectively. Luke has width d and is able to choose any position between the presses. Luke dies as soon as the distance between the presses is less than his width. Your task is to determine for how long Luke can stay alive. */\n\n/*@\n    requires \\valid(out);\n    requires 1 <= d < 10000;\n    requires 1 <= L < 10000;\n    requires 1 <= v1 < 10000;\n    requires 1 <= v2 < 10000;\n    requires d < L;\n    assigns *out;\n    ensures *out == ((L - d) / (v1 + v2));\n*/\nvoid problem(int d, int L, int v1, int v2, int *out);\n  // TODO: ADD CODE HERE\n\n```', 'gpt_output': '```C\nvoid problem(int d, int L, int v1, int v2, int *out) {\n    *out = ((L - d) / (v1 + v2));\n}\n```', 'verified': False, 'verified_goals': None, 'info': 'initial prompt'}]